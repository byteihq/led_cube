
LED_cube.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000405c  080001c8  080001c8  000101c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000010  08004224  08004224  00014224  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004234  08004234  0002000c  2**0
                  CONTENTS
  4 .ARM          00000008  08004234  08004234  00014234  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800423c  0800423c  0002000c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800423c  0800423c  0001423c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004240  08004240  00014240  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000000c  20000000  08004244  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000068  2000000c  08004250  0002000c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000074  08004250  00020074  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002000c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000c877  00000000  00000000  0002003c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000019cf  00000000  00000000  0002c8b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    00000380  00000000  00000000  0002e282  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000a40  00000000  00000000  0002e608  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000ad8  00000000  00000000  0002f048  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000217e5  00000000  00000000  0002fb20  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00010fbc  00000000  00000000  00051305  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000ca7c5  00000000  00000000  000622c1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0012ca86  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000029c8  00000000  00000000  0012cad8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	; (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	; (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	2000000c 	.word	0x2000000c
 80001e4:	00000000 	.word	0x00000000
 80001e8:	0800420c 	.word	0x0800420c

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	; (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	; (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	; (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	20000010 	.word	0x20000010
 8000204:	0800420c 	.word	0x0800420c

08000208 <__aeabi_uldivmod>:
 8000208:	b953      	cbnz	r3, 8000220 <__aeabi_uldivmod+0x18>
 800020a:	b94a      	cbnz	r2, 8000220 <__aeabi_uldivmod+0x18>
 800020c:	2900      	cmp	r1, #0
 800020e:	bf08      	it	eq
 8000210:	2800      	cmpeq	r0, #0
 8000212:	bf1c      	itt	ne
 8000214:	f04f 31ff 	movne.w	r1, #4294967295
 8000218:	f04f 30ff 	movne.w	r0, #4294967295
 800021c:	f000 b974 	b.w	8000508 <__aeabi_idiv0>
 8000220:	f1ad 0c08 	sub.w	ip, sp, #8
 8000224:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000228:	f000 f806 	bl	8000238 <__udivmoddi4>
 800022c:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000230:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000234:	b004      	add	sp, #16
 8000236:	4770      	bx	lr

08000238 <__udivmoddi4>:
 8000238:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800023c:	9d08      	ldr	r5, [sp, #32]
 800023e:	4604      	mov	r4, r0
 8000240:	468e      	mov	lr, r1
 8000242:	2b00      	cmp	r3, #0
 8000244:	d14d      	bne.n	80002e2 <__udivmoddi4+0xaa>
 8000246:	428a      	cmp	r2, r1
 8000248:	4694      	mov	ip, r2
 800024a:	d969      	bls.n	8000320 <__udivmoddi4+0xe8>
 800024c:	fab2 f282 	clz	r2, r2
 8000250:	b152      	cbz	r2, 8000268 <__udivmoddi4+0x30>
 8000252:	fa01 f302 	lsl.w	r3, r1, r2
 8000256:	f1c2 0120 	rsb	r1, r2, #32
 800025a:	fa20 f101 	lsr.w	r1, r0, r1
 800025e:	fa0c fc02 	lsl.w	ip, ip, r2
 8000262:	ea41 0e03 	orr.w	lr, r1, r3
 8000266:	4094      	lsls	r4, r2
 8000268:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800026c:	0c21      	lsrs	r1, r4, #16
 800026e:	fbbe f6f8 	udiv	r6, lr, r8
 8000272:	fa1f f78c 	uxth.w	r7, ip
 8000276:	fb08 e316 	mls	r3, r8, r6, lr
 800027a:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 800027e:	fb06 f107 	mul.w	r1, r6, r7
 8000282:	4299      	cmp	r1, r3
 8000284:	d90a      	bls.n	800029c <__udivmoddi4+0x64>
 8000286:	eb1c 0303 	adds.w	r3, ip, r3
 800028a:	f106 30ff 	add.w	r0, r6, #4294967295
 800028e:	f080 811f 	bcs.w	80004d0 <__udivmoddi4+0x298>
 8000292:	4299      	cmp	r1, r3
 8000294:	f240 811c 	bls.w	80004d0 <__udivmoddi4+0x298>
 8000298:	3e02      	subs	r6, #2
 800029a:	4463      	add	r3, ip
 800029c:	1a5b      	subs	r3, r3, r1
 800029e:	b2a4      	uxth	r4, r4
 80002a0:	fbb3 f0f8 	udiv	r0, r3, r8
 80002a4:	fb08 3310 	mls	r3, r8, r0, r3
 80002a8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80002ac:	fb00 f707 	mul.w	r7, r0, r7
 80002b0:	42a7      	cmp	r7, r4
 80002b2:	d90a      	bls.n	80002ca <__udivmoddi4+0x92>
 80002b4:	eb1c 0404 	adds.w	r4, ip, r4
 80002b8:	f100 33ff 	add.w	r3, r0, #4294967295
 80002bc:	f080 810a 	bcs.w	80004d4 <__udivmoddi4+0x29c>
 80002c0:	42a7      	cmp	r7, r4
 80002c2:	f240 8107 	bls.w	80004d4 <__udivmoddi4+0x29c>
 80002c6:	4464      	add	r4, ip
 80002c8:	3802      	subs	r0, #2
 80002ca:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80002ce:	1be4      	subs	r4, r4, r7
 80002d0:	2600      	movs	r6, #0
 80002d2:	b11d      	cbz	r5, 80002dc <__udivmoddi4+0xa4>
 80002d4:	40d4      	lsrs	r4, r2
 80002d6:	2300      	movs	r3, #0
 80002d8:	e9c5 4300 	strd	r4, r3, [r5]
 80002dc:	4631      	mov	r1, r6
 80002de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002e2:	428b      	cmp	r3, r1
 80002e4:	d909      	bls.n	80002fa <__udivmoddi4+0xc2>
 80002e6:	2d00      	cmp	r5, #0
 80002e8:	f000 80ef 	beq.w	80004ca <__udivmoddi4+0x292>
 80002ec:	2600      	movs	r6, #0
 80002ee:	e9c5 0100 	strd	r0, r1, [r5]
 80002f2:	4630      	mov	r0, r6
 80002f4:	4631      	mov	r1, r6
 80002f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80002fa:	fab3 f683 	clz	r6, r3
 80002fe:	2e00      	cmp	r6, #0
 8000300:	d14a      	bne.n	8000398 <__udivmoddi4+0x160>
 8000302:	428b      	cmp	r3, r1
 8000304:	d302      	bcc.n	800030c <__udivmoddi4+0xd4>
 8000306:	4282      	cmp	r2, r0
 8000308:	f200 80f9 	bhi.w	80004fe <__udivmoddi4+0x2c6>
 800030c:	1a84      	subs	r4, r0, r2
 800030e:	eb61 0303 	sbc.w	r3, r1, r3
 8000312:	2001      	movs	r0, #1
 8000314:	469e      	mov	lr, r3
 8000316:	2d00      	cmp	r5, #0
 8000318:	d0e0      	beq.n	80002dc <__udivmoddi4+0xa4>
 800031a:	e9c5 4e00 	strd	r4, lr, [r5]
 800031e:	e7dd      	b.n	80002dc <__udivmoddi4+0xa4>
 8000320:	b902      	cbnz	r2, 8000324 <__udivmoddi4+0xec>
 8000322:	deff      	udf	#255	; 0xff
 8000324:	fab2 f282 	clz	r2, r2
 8000328:	2a00      	cmp	r2, #0
 800032a:	f040 8092 	bne.w	8000452 <__udivmoddi4+0x21a>
 800032e:	eba1 010c 	sub.w	r1, r1, ip
 8000332:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000336:	fa1f fe8c 	uxth.w	lr, ip
 800033a:	2601      	movs	r6, #1
 800033c:	0c20      	lsrs	r0, r4, #16
 800033e:	fbb1 f3f7 	udiv	r3, r1, r7
 8000342:	fb07 1113 	mls	r1, r7, r3, r1
 8000346:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 800034a:	fb0e f003 	mul.w	r0, lr, r3
 800034e:	4288      	cmp	r0, r1
 8000350:	d908      	bls.n	8000364 <__udivmoddi4+0x12c>
 8000352:	eb1c 0101 	adds.w	r1, ip, r1
 8000356:	f103 38ff 	add.w	r8, r3, #4294967295
 800035a:	d202      	bcs.n	8000362 <__udivmoddi4+0x12a>
 800035c:	4288      	cmp	r0, r1
 800035e:	f200 80cb 	bhi.w	80004f8 <__udivmoddi4+0x2c0>
 8000362:	4643      	mov	r3, r8
 8000364:	1a09      	subs	r1, r1, r0
 8000366:	b2a4      	uxth	r4, r4
 8000368:	fbb1 f0f7 	udiv	r0, r1, r7
 800036c:	fb07 1110 	mls	r1, r7, r0, r1
 8000370:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000374:	fb0e fe00 	mul.w	lr, lr, r0
 8000378:	45a6      	cmp	lr, r4
 800037a:	d908      	bls.n	800038e <__udivmoddi4+0x156>
 800037c:	eb1c 0404 	adds.w	r4, ip, r4
 8000380:	f100 31ff 	add.w	r1, r0, #4294967295
 8000384:	d202      	bcs.n	800038c <__udivmoddi4+0x154>
 8000386:	45a6      	cmp	lr, r4
 8000388:	f200 80bb 	bhi.w	8000502 <__udivmoddi4+0x2ca>
 800038c:	4608      	mov	r0, r1
 800038e:	eba4 040e 	sub.w	r4, r4, lr
 8000392:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000396:	e79c      	b.n	80002d2 <__udivmoddi4+0x9a>
 8000398:	f1c6 0720 	rsb	r7, r6, #32
 800039c:	40b3      	lsls	r3, r6
 800039e:	fa22 fc07 	lsr.w	ip, r2, r7
 80003a2:	ea4c 0c03 	orr.w	ip, ip, r3
 80003a6:	fa20 f407 	lsr.w	r4, r0, r7
 80003aa:	fa01 f306 	lsl.w	r3, r1, r6
 80003ae:	431c      	orrs	r4, r3
 80003b0:	40f9      	lsrs	r1, r7
 80003b2:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80003b6:	fa00 f306 	lsl.w	r3, r0, r6
 80003ba:	fbb1 f8f9 	udiv	r8, r1, r9
 80003be:	0c20      	lsrs	r0, r4, #16
 80003c0:	fa1f fe8c 	uxth.w	lr, ip
 80003c4:	fb09 1118 	mls	r1, r9, r8, r1
 80003c8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003cc:	fb08 f00e 	mul.w	r0, r8, lr
 80003d0:	4288      	cmp	r0, r1
 80003d2:	fa02 f206 	lsl.w	r2, r2, r6
 80003d6:	d90b      	bls.n	80003f0 <__udivmoddi4+0x1b8>
 80003d8:	eb1c 0101 	adds.w	r1, ip, r1
 80003dc:	f108 3aff 	add.w	sl, r8, #4294967295
 80003e0:	f080 8088 	bcs.w	80004f4 <__udivmoddi4+0x2bc>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f240 8085 	bls.w	80004f4 <__udivmoddi4+0x2bc>
 80003ea:	f1a8 0802 	sub.w	r8, r8, #2
 80003ee:	4461      	add	r1, ip
 80003f0:	1a09      	subs	r1, r1, r0
 80003f2:	b2a4      	uxth	r4, r4
 80003f4:	fbb1 f0f9 	udiv	r0, r1, r9
 80003f8:	fb09 1110 	mls	r1, r9, r0, r1
 80003fc:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000400:	fb00 fe0e 	mul.w	lr, r0, lr
 8000404:	458e      	cmp	lr, r1
 8000406:	d908      	bls.n	800041a <__udivmoddi4+0x1e2>
 8000408:	eb1c 0101 	adds.w	r1, ip, r1
 800040c:	f100 34ff 	add.w	r4, r0, #4294967295
 8000410:	d26c      	bcs.n	80004ec <__udivmoddi4+0x2b4>
 8000412:	458e      	cmp	lr, r1
 8000414:	d96a      	bls.n	80004ec <__udivmoddi4+0x2b4>
 8000416:	3802      	subs	r0, #2
 8000418:	4461      	add	r1, ip
 800041a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 800041e:	fba0 9402 	umull	r9, r4, r0, r2
 8000422:	eba1 010e 	sub.w	r1, r1, lr
 8000426:	42a1      	cmp	r1, r4
 8000428:	46c8      	mov	r8, r9
 800042a:	46a6      	mov	lr, r4
 800042c:	d356      	bcc.n	80004dc <__udivmoddi4+0x2a4>
 800042e:	d053      	beq.n	80004d8 <__udivmoddi4+0x2a0>
 8000430:	b15d      	cbz	r5, 800044a <__udivmoddi4+0x212>
 8000432:	ebb3 0208 	subs.w	r2, r3, r8
 8000436:	eb61 010e 	sbc.w	r1, r1, lr
 800043a:	fa01 f707 	lsl.w	r7, r1, r7
 800043e:	fa22 f306 	lsr.w	r3, r2, r6
 8000442:	40f1      	lsrs	r1, r6
 8000444:	431f      	orrs	r7, r3
 8000446:	e9c5 7100 	strd	r7, r1, [r5]
 800044a:	2600      	movs	r6, #0
 800044c:	4631      	mov	r1, r6
 800044e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000452:	f1c2 0320 	rsb	r3, r2, #32
 8000456:	40d8      	lsrs	r0, r3
 8000458:	fa0c fc02 	lsl.w	ip, ip, r2
 800045c:	fa21 f303 	lsr.w	r3, r1, r3
 8000460:	4091      	lsls	r1, r2
 8000462:	4301      	orrs	r1, r0
 8000464:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000468:	fa1f fe8c 	uxth.w	lr, ip
 800046c:	fbb3 f0f7 	udiv	r0, r3, r7
 8000470:	fb07 3610 	mls	r6, r7, r0, r3
 8000474:	0c0b      	lsrs	r3, r1, #16
 8000476:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 800047a:	fb00 f60e 	mul.w	r6, r0, lr
 800047e:	429e      	cmp	r6, r3
 8000480:	fa04 f402 	lsl.w	r4, r4, r2
 8000484:	d908      	bls.n	8000498 <__udivmoddi4+0x260>
 8000486:	eb1c 0303 	adds.w	r3, ip, r3
 800048a:	f100 38ff 	add.w	r8, r0, #4294967295
 800048e:	d22f      	bcs.n	80004f0 <__udivmoddi4+0x2b8>
 8000490:	429e      	cmp	r6, r3
 8000492:	d92d      	bls.n	80004f0 <__udivmoddi4+0x2b8>
 8000494:	3802      	subs	r0, #2
 8000496:	4463      	add	r3, ip
 8000498:	1b9b      	subs	r3, r3, r6
 800049a:	b289      	uxth	r1, r1
 800049c:	fbb3 f6f7 	udiv	r6, r3, r7
 80004a0:	fb07 3316 	mls	r3, r7, r6, r3
 80004a4:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80004a8:	fb06 f30e 	mul.w	r3, r6, lr
 80004ac:	428b      	cmp	r3, r1
 80004ae:	d908      	bls.n	80004c2 <__udivmoddi4+0x28a>
 80004b0:	eb1c 0101 	adds.w	r1, ip, r1
 80004b4:	f106 38ff 	add.w	r8, r6, #4294967295
 80004b8:	d216      	bcs.n	80004e8 <__udivmoddi4+0x2b0>
 80004ba:	428b      	cmp	r3, r1
 80004bc:	d914      	bls.n	80004e8 <__udivmoddi4+0x2b0>
 80004be:	3e02      	subs	r6, #2
 80004c0:	4461      	add	r1, ip
 80004c2:	1ac9      	subs	r1, r1, r3
 80004c4:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 80004c8:	e738      	b.n	800033c <__udivmoddi4+0x104>
 80004ca:	462e      	mov	r6, r5
 80004cc:	4628      	mov	r0, r5
 80004ce:	e705      	b.n	80002dc <__udivmoddi4+0xa4>
 80004d0:	4606      	mov	r6, r0
 80004d2:	e6e3      	b.n	800029c <__udivmoddi4+0x64>
 80004d4:	4618      	mov	r0, r3
 80004d6:	e6f8      	b.n	80002ca <__udivmoddi4+0x92>
 80004d8:	454b      	cmp	r3, r9
 80004da:	d2a9      	bcs.n	8000430 <__udivmoddi4+0x1f8>
 80004dc:	ebb9 0802 	subs.w	r8, r9, r2
 80004e0:	eb64 0e0c 	sbc.w	lr, r4, ip
 80004e4:	3801      	subs	r0, #1
 80004e6:	e7a3      	b.n	8000430 <__udivmoddi4+0x1f8>
 80004e8:	4646      	mov	r6, r8
 80004ea:	e7ea      	b.n	80004c2 <__udivmoddi4+0x28a>
 80004ec:	4620      	mov	r0, r4
 80004ee:	e794      	b.n	800041a <__udivmoddi4+0x1e2>
 80004f0:	4640      	mov	r0, r8
 80004f2:	e7d1      	b.n	8000498 <__udivmoddi4+0x260>
 80004f4:	46d0      	mov	r8, sl
 80004f6:	e77b      	b.n	80003f0 <__udivmoddi4+0x1b8>
 80004f8:	3b02      	subs	r3, #2
 80004fa:	4461      	add	r1, ip
 80004fc:	e732      	b.n	8000364 <__udivmoddi4+0x12c>
 80004fe:	4630      	mov	r0, r6
 8000500:	e709      	b.n	8000316 <__udivmoddi4+0xde>
 8000502:	4464      	add	r4, ip
 8000504:	3802      	subs	r0, #2
 8000506:	e742      	b.n	800038e <__udivmoddi4+0x156>

08000508 <__aeabi_idiv0>:
 8000508:	4770      	bx	lr
 800050a:	bf00      	nop

0800050c <cube_set_zero>:
			HAL_GPIO_SEND_BIT(pin, 7);\
	    	++mas;}
void cube_set_zero(Cube *cube) {
  uint16_t j = 0;
    for (j = 0; j < CUBE_SIZE * CUBE_SIZE * CUBE_SIZE * 3; ++j) {
        cube->leds[j] = 0;
 800050c:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8000510:	2100      	movs	r1, #0
 8000512:	f003 be73 	b.w	80041fc <memset>
 8000516:	bf00      	nop

08000518 <stdin_set_params>:
    }
}
void stdin_set_params() {
  //настройка stdin в режим блокирующего (ожидающего) чтения
  //настройка времени ожидания через tcgetattr
}
 8000518:	4770      	bx	lr
 800051a:	bf00      	nop

0800051c <get_cube>:
void get_cube(Cube *cube) {
 800051c:	2300      	movs	r3, #0
	uint16_t j = 0;
	for (j = 0; j < CUBE_SIZE * CUBE_SIZE * CUBE_SIZE * 3; j += 3) {
	        cube->leds[j] = 43;
 800051e:	222b      	movs	r2, #43	; 0x2b
 8000520:	54c2      	strb	r2, [r0, r3]
	for (j = 0; j < CUBE_SIZE * CUBE_SIZE * CUBE_SIZE * 3; j += 3) {
 8000522:	3303      	adds	r3, #3
 8000524:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8000528:	d1fa      	bne.n	8000520 <get_cube+0x4>
 800052a:	f500 62c0 	add.w	r2, r0, #1536	; 0x600
 800052e:	4603      	mov	r3, r0
	}
	for (j = 1; j < CUBE_SIZE * CUBE_SIZE * CUBE_SIZE * 3; j += 3) {
		        cube->leds[j] = 200;
 8000530:	21c8      	movs	r1, #200	; 0xc8
 8000532:	7059      	strb	r1, [r3, #1]
	for (j = 1; j < CUBE_SIZE * CUBE_SIZE * CUBE_SIZE * 3; j += 3) {
 8000534:	3303      	adds	r3, #3
 8000536:	4293      	cmp	r3, r2
 8000538:	d1fb      	bne.n	8000532 <get_cube+0x16>
		}
	for (j = 2; j < CUBE_SIZE * CUBE_SIZE * CUBE_SIZE * 3; j += 3) {
		        cube->leds[j] = 86;
 800053a:	2356      	movs	r3, #86	; 0x56
 800053c:	7083      	strb	r3, [r0, #2]
	for (j = 2; j < CUBE_SIZE * CUBE_SIZE * CUBE_SIZE * 3; j += 3) {
 800053e:	3003      	adds	r0, #3
 8000540:	4290      	cmp	r0, r2
 8000542:	d1fb      	bne.n	800053c <get_cube+0x20>
		}

  //считать от питонистов данные в режиме ожидания
  //считываем данные для кубика, вбиваем их в структуру
}
 8000544:	4770      	bx	lr
 8000546:	bf00      	nop

08000548 <send_cube>:
void send_cube(const Cube *cube) {  //функция должна иметь большую скорость для
 8000548:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}


//
  uint16_t pin = GPIO_PIN_0;
  for (pin = GPIO_PIN_0; pin < GPIO_PIN_7; pin *= 2) {
	  LOH();LOH();LOH();
 800054c:	4fb2      	ldr	r7, [pc, #712]	; (8000818 <send_cube+0x2d0>)
 800054e:	4cb3      	ldr	r4, [pc, #716]	; (800081c <send_cube+0x2d4>)
 8000550:	f100 080c 	add.w	r8, r0, #12
 8000554:	f100 0960 	add.w	r9, r0, #96	; 0x60
  for (pin = GPIO_PIN_0; pin < GPIO_PIN_7; pin *= 2) {
 8000558:	2601      	movs	r6, #1
	  LOH();LOH();LOH();
 800055a:	2500      	movs	r5, #0
 800055c:	f818 3c0c 	ldrb.w	r3, [r8, #-12]
 8000560:	f013 0a01 	ands.w	sl, r3, #1
 8000564:	f04f 0201 	mov.w	r2, #1
 8000568:	4631      	mov	r1, r6
 800056a:	4638      	mov	r0, r7
 800056c:	f001 87dc 	beq.w	8002528 <send_cube+0x1fe0>
 8000570:	f002 fd52 	bl	8003018 <HAL_GPIO_WritePin>
 8000574:	6265      	str	r5, [r4, #36]	; 0x24
 8000576:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000578:	2b33      	cmp	r3, #51	; 0x33
 800057a:	d9fc      	bls.n	8000576 <send_cube+0x2e>
 800057c:	6265      	str	r5, [r4, #36]	; 0x24
 800057e:	2200      	movs	r2, #0
 8000580:	4631      	mov	r1, r6
 8000582:	4638      	mov	r0, r7
 8000584:	f002 fd48 	bl	8003018 <HAL_GPIO_WritePin>
 8000588:	6265      	str	r5, [r4, #36]	; 0x24
 800058a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800058c:	2b01      	cmp	r3, #1
 800058e:	d9fc      	bls.n	800058a <send_cube+0x42>
 8000590:	6265      	str	r5, [r4, #36]	; 0x24
 8000592:	f818 3c0c 	ldrb.w	r3, [r8, #-12]
 8000596:	f013 0a02 	ands.w	sl, r3, #2
 800059a:	f04f 0201 	mov.w	r2, #1
 800059e:	4631      	mov	r1, r6
 80005a0:	4638      	mov	r0, r7
 80005a2:	f001 87af 	beq.w	8002504 <send_cube+0x1fbc>
 80005a6:	f002 fd37 	bl	8003018 <HAL_GPIO_WritePin>
 80005aa:	6265      	str	r5, [r4, #36]	; 0x24
 80005ac:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80005ae:	2b33      	cmp	r3, #51	; 0x33
 80005b0:	d9fc      	bls.n	80005ac <send_cube+0x64>
 80005b2:	6265      	str	r5, [r4, #36]	; 0x24
 80005b4:	2200      	movs	r2, #0
 80005b6:	4631      	mov	r1, r6
 80005b8:	4638      	mov	r0, r7
 80005ba:	f002 fd2d 	bl	8003018 <HAL_GPIO_WritePin>
 80005be:	6265      	str	r5, [r4, #36]	; 0x24
 80005c0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80005c2:	2b01      	cmp	r3, #1
 80005c4:	d9fc      	bls.n	80005c0 <send_cube+0x78>
 80005c6:	6265      	str	r5, [r4, #36]	; 0x24
 80005c8:	f818 3c0c 	ldrb.w	r3, [r8, #-12]
 80005cc:	f013 0a04 	ands.w	sl, r3, #4
 80005d0:	f04f 0201 	mov.w	r2, #1
 80005d4:	4631      	mov	r1, r6
 80005d6:	4638      	mov	r0, r7
 80005d8:	f001 8782 	beq.w	80024e0 <send_cube+0x1f98>
 80005dc:	f002 fd1c 	bl	8003018 <HAL_GPIO_WritePin>
 80005e0:	6265      	str	r5, [r4, #36]	; 0x24
 80005e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80005e4:	2b33      	cmp	r3, #51	; 0x33
 80005e6:	d9fc      	bls.n	80005e2 <send_cube+0x9a>
 80005e8:	6265      	str	r5, [r4, #36]	; 0x24
 80005ea:	2200      	movs	r2, #0
 80005ec:	4631      	mov	r1, r6
 80005ee:	4638      	mov	r0, r7
 80005f0:	f002 fd12 	bl	8003018 <HAL_GPIO_WritePin>
 80005f4:	6265      	str	r5, [r4, #36]	; 0x24
 80005f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80005f8:	2b01      	cmp	r3, #1
 80005fa:	d9fc      	bls.n	80005f6 <send_cube+0xae>
 80005fc:	6265      	str	r5, [r4, #36]	; 0x24
 80005fe:	f818 3c0c 	ldrb.w	r3, [r8, #-12]
 8000602:	f013 0a08 	ands.w	sl, r3, #8
 8000606:	f04f 0201 	mov.w	r2, #1
 800060a:	4631      	mov	r1, r6
 800060c:	4638      	mov	r0, r7
 800060e:	f001 8755 	beq.w	80024bc <send_cube+0x1f74>
 8000612:	f002 fd01 	bl	8003018 <HAL_GPIO_WritePin>
 8000616:	6265      	str	r5, [r4, #36]	; 0x24
 8000618:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800061a:	2b33      	cmp	r3, #51	; 0x33
 800061c:	d9fc      	bls.n	8000618 <send_cube+0xd0>
 800061e:	6265      	str	r5, [r4, #36]	; 0x24
 8000620:	2200      	movs	r2, #0
 8000622:	4631      	mov	r1, r6
 8000624:	4638      	mov	r0, r7
 8000626:	f002 fcf7 	bl	8003018 <HAL_GPIO_WritePin>
 800062a:	6265      	str	r5, [r4, #36]	; 0x24
 800062c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800062e:	2b01      	cmp	r3, #1
 8000630:	d9fc      	bls.n	800062c <send_cube+0xe4>
 8000632:	6265      	str	r5, [r4, #36]	; 0x24
 8000634:	f818 3c0c 	ldrb.w	r3, [r8, #-12]
 8000638:	f013 0a10 	ands.w	sl, r3, #16
 800063c:	f04f 0201 	mov.w	r2, #1
 8000640:	4631      	mov	r1, r6
 8000642:	4638      	mov	r0, r7
 8000644:	f001 8728 	beq.w	8002498 <send_cube+0x1f50>
 8000648:	f002 fce6 	bl	8003018 <HAL_GPIO_WritePin>
 800064c:	6265      	str	r5, [r4, #36]	; 0x24
 800064e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000650:	2b33      	cmp	r3, #51	; 0x33
 8000652:	d9fc      	bls.n	800064e <send_cube+0x106>
 8000654:	6265      	str	r5, [r4, #36]	; 0x24
 8000656:	2200      	movs	r2, #0
 8000658:	4631      	mov	r1, r6
 800065a:	4638      	mov	r0, r7
 800065c:	f002 fcdc 	bl	8003018 <HAL_GPIO_WritePin>
 8000660:	6265      	str	r5, [r4, #36]	; 0x24
 8000662:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000664:	2b01      	cmp	r3, #1
 8000666:	d9fc      	bls.n	8000662 <send_cube+0x11a>
 8000668:	6265      	str	r5, [r4, #36]	; 0x24
 800066a:	f818 3c0c 	ldrb.w	r3, [r8, #-12]
 800066e:	f013 0a20 	ands.w	sl, r3, #32
 8000672:	f04f 0201 	mov.w	r2, #1
 8000676:	4631      	mov	r1, r6
 8000678:	4638      	mov	r0, r7
 800067a:	f001 86fb 	beq.w	8002474 <send_cube+0x1f2c>
 800067e:	f002 fccb 	bl	8003018 <HAL_GPIO_WritePin>
 8000682:	6265      	str	r5, [r4, #36]	; 0x24
 8000684:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000686:	2b33      	cmp	r3, #51	; 0x33
 8000688:	d9fc      	bls.n	8000684 <send_cube+0x13c>
 800068a:	6265      	str	r5, [r4, #36]	; 0x24
 800068c:	2200      	movs	r2, #0
 800068e:	4631      	mov	r1, r6
 8000690:	4638      	mov	r0, r7
 8000692:	f002 fcc1 	bl	8003018 <HAL_GPIO_WritePin>
 8000696:	6265      	str	r5, [r4, #36]	; 0x24
 8000698:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800069a:	2b01      	cmp	r3, #1
 800069c:	d9fc      	bls.n	8000698 <send_cube+0x150>
 800069e:	6265      	str	r5, [r4, #36]	; 0x24
 80006a0:	f818 3c0c 	ldrb.w	r3, [r8, #-12]
 80006a4:	f013 0a40 	ands.w	sl, r3, #64	; 0x40
 80006a8:	f04f 0201 	mov.w	r2, #1
 80006ac:	4631      	mov	r1, r6
 80006ae:	4638      	mov	r0, r7
 80006b0:	f001 86ce 	beq.w	8002450 <send_cube+0x1f08>
 80006b4:	f002 fcb0 	bl	8003018 <HAL_GPIO_WritePin>
 80006b8:	6265      	str	r5, [r4, #36]	; 0x24
 80006ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80006bc:	2b33      	cmp	r3, #51	; 0x33
 80006be:	d9fc      	bls.n	80006ba <send_cube+0x172>
 80006c0:	6265      	str	r5, [r4, #36]	; 0x24
 80006c2:	2200      	movs	r2, #0
 80006c4:	4631      	mov	r1, r6
 80006c6:	4638      	mov	r0, r7
 80006c8:	f002 fca6 	bl	8003018 <HAL_GPIO_WritePin>
 80006cc:	6265      	str	r5, [r4, #36]	; 0x24
 80006ce:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80006d0:	2b01      	cmp	r3, #1
 80006d2:	d9fc      	bls.n	80006ce <send_cube+0x186>
 80006d4:	6265      	str	r5, [r4, #36]	; 0x24
 80006d6:	f918 3c0c 	ldrsb.w	r3, [r8, #-12]
 80006da:	2b00      	cmp	r3, #0
 80006dc:	f04f 0201 	mov.w	r2, #1
 80006e0:	4631      	mov	r1, r6
 80006e2:	4638      	mov	r0, r7
 80006e4:	f2c1 8768 	blt.w	80025b8 <send_cube+0x2070>
 80006e8:	f002 fc96 	bl	8003018 <HAL_GPIO_WritePin>
 80006ec:	6265      	str	r5, [r4, #36]	; 0x24
 80006ee:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80006f0:	2b01      	cmp	r3, #1
 80006f2:	d9fc      	bls.n	80006ee <send_cube+0x1a6>
 80006f4:	2200      	movs	r2, #0
 80006f6:	4631      	mov	r1, r6
 80006f8:	4638      	mov	r0, r7
 80006fa:	f002 fc8d 	bl	8003018 <HAL_GPIO_WritePin>
 80006fe:	6265      	str	r5, [r4, #36]	; 0x24
 8000700:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000702:	2b33      	cmp	r3, #51	; 0x33
 8000704:	d9fc      	bls.n	8000700 <send_cube+0x1b8>
 8000706:	6265      	str	r5, [r4, #36]	; 0x24
 8000708:	f818 3c0b 	ldrb.w	r3, [r8, #-11]
 800070c:	f013 0a01 	ands.w	sl, r3, #1
 8000710:	f04f 0201 	mov.w	r2, #1
 8000714:	4631      	mov	r1, r6
 8000716:	4638      	mov	r0, r7
 8000718:	f001 8688 	beq.w	800242c <send_cube+0x1ee4>
 800071c:	f002 fc7c 	bl	8003018 <HAL_GPIO_WritePin>
 8000720:	6265      	str	r5, [r4, #36]	; 0x24
 8000722:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000724:	2b33      	cmp	r3, #51	; 0x33
 8000726:	d9fc      	bls.n	8000722 <send_cube+0x1da>
 8000728:	6265      	str	r5, [r4, #36]	; 0x24
 800072a:	2200      	movs	r2, #0
 800072c:	4631      	mov	r1, r6
 800072e:	4638      	mov	r0, r7
 8000730:	f002 fc72 	bl	8003018 <HAL_GPIO_WritePin>
 8000734:	6265      	str	r5, [r4, #36]	; 0x24
 8000736:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000738:	2b01      	cmp	r3, #1
 800073a:	d9fc      	bls.n	8000736 <send_cube+0x1ee>
 800073c:	6265      	str	r5, [r4, #36]	; 0x24
 800073e:	f818 3c0b 	ldrb.w	r3, [r8, #-11]
 8000742:	f013 0a02 	ands.w	sl, r3, #2
 8000746:	f04f 0201 	mov.w	r2, #1
 800074a:	4631      	mov	r1, r6
 800074c:	4638      	mov	r0, r7
 800074e:	f001 865b 	beq.w	8002408 <send_cube+0x1ec0>
 8000752:	f002 fc61 	bl	8003018 <HAL_GPIO_WritePin>
 8000756:	6265      	str	r5, [r4, #36]	; 0x24
 8000758:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800075a:	2b33      	cmp	r3, #51	; 0x33
 800075c:	d9fc      	bls.n	8000758 <send_cube+0x210>
 800075e:	6265      	str	r5, [r4, #36]	; 0x24
 8000760:	2200      	movs	r2, #0
 8000762:	4631      	mov	r1, r6
 8000764:	4638      	mov	r0, r7
 8000766:	f002 fc57 	bl	8003018 <HAL_GPIO_WritePin>
 800076a:	6265      	str	r5, [r4, #36]	; 0x24
 800076c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800076e:	2b01      	cmp	r3, #1
 8000770:	d9fc      	bls.n	800076c <send_cube+0x224>
 8000772:	6265      	str	r5, [r4, #36]	; 0x24
 8000774:	f818 3c0b 	ldrb.w	r3, [r8, #-11]
 8000778:	f013 0a04 	ands.w	sl, r3, #4
 800077c:	f04f 0201 	mov.w	r2, #1
 8000780:	4631      	mov	r1, r6
 8000782:	4638      	mov	r0, r7
 8000784:	f001 862e 	beq.w	80023e4 <send_cube+0x1e9c>
 8000788:	f002 fc46 	bl	8003018 <HAL_GPIO_WritePin>
 800078c:	6265      	str	r5, [r4, #36]	; 0x24
 800078e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000790:	2b33      	cmp	r3, #51	; 0x33
 8000792:	d9fc      	bls.n	800078e <send_cube+0x246>
 8000794:	6265      	str	r5, [r4, #36]	; 0x24
 8000796:	2200      	movs	r2, #0
 8000798:	4631      	mov	r1, r6
 800079a:	4638      	mov	r0, r7
 800079c:	f002 fc3c 	bl	8003018 <HAL_GPIO_WritePin>
 80007a0:	6265      	str	r5, [r4, #36]	; 0x24
 80007a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80007a4:	2b01      	cmp	r3, #1
 80007a6:	d9fc      	bls.n	80007a2 <send_cube+0x25a>
 80007a8:	6265      	str	r5, [r4, #36]	; 0x24
 80007aa:	f818 3c0b 	ldrb.w	r3, [r8, #-11]
 80007ae:	f013 0a08 	ands.w	sl, r3, #8
 80007b2:	f04f 0201 	mov.w	r2, #1
 80007b6:	4631      	mov	r1, r6
 80007b8:	4638      	mov	r0, r7
 80007ba:	f001 8601 	beq.w	80023c0 <send_cube+0x1e78>
 80007be:	f002 fc2b 	bl	8003018 <HAL_GPIO_WritePin>
 80007c2:	6265      	str	r5, [r4, #36]	; 0x24
 80007c4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80007c6:	2b33      	cmp	r3, #51	; 0x33
 80007c8:	d9fc      	bls.n	80007c4 <send_cube+0x27c>
 80007ca:	6265      	str	r5, [r4, #36]	; 0x24
 80007cc:	2200      	movs	r2, #0
 80007ce:	4631      	mov	r1, r6
 80007d0:	4638      	mov	r0, r7
 80007d2:	f002 fc21 	bl	8003018 <HAL_GPIO_WritePin>
 80007d6:	6265      	str	r5, [r4, #36]	; 0x24
 80007d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80007da:	2b01      	cmp	r3, #1
 80007dc:	d9fc      	bls.n	80007d8 <send_cube+0x290>
 80007de:	6265      	str	r5, [r4, #36]	; 0x24
 80007e0:	f818 3c0b 	ldrb.w	r3, [r8, #-11]
 80007e4:	f013 0a10 	ands.w	sl, r3, #16
 80007e8:	f04f 0201 	mov.w	r2, #1
 80007ec:	4631      	mov	r1, r6
 80007ee:	4638      	mov	r0, r7
 80007f0:	f001 85d4 	beq.w	800239c <send_cube+0x1e54>
 80007f4:	f002 fc10 	bl	8003018 <HAL_GPIO_WritePin>
 80007f8:	6265      	str	r5, [r4, #36]	; 0x24
 80007fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80007fc:	2b33      	cmp	r3, #51	; 0x33
 80007fe:	d9fc      	bls.n	80007fa <send_cube+0x2b2>
 8000800:	6265      	str	r5, [r4, #36]	; 0x24
 8000802:	2200      	movs	r2, #0
 8000804:	4631      	mov	r1, r6
 8000806:	4638      	mov	r0, r7
 8000808:	f002 fc06 	bl	8003018 <HAL_GPIO_WritePin>
 800080c:	6265      	str	r5, [r4, #36]	; 0x24
 800080e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000810:	2b01      	cmp	r3, #1
 8000812:	d9fc      	bls.n	800080e <send_cube+0x2c6>
 8000814:	e004      	b.n	8000820 <send_cube+0x2d8>
 8000816:	bf00      	nop
 8000818:	40020000 	.word	0x40020000
 800081c:	40010000 	.word	0x40010000
 8000820:	6265      	str	r5, [r4, #36]	; 0x24
 8000822:	f818 3c0b 	ldrb.w	r3, [r8, #-11]
 8000826:	f013 0a20 	ands.w	sl, r3, #32
 800082a:	f04f 0201 	mov.w	r2, #1
 800082e:	4631      	mov	r1, r6
 8000830:	4638      	mov	r0, r7
 8000832:	f001 85a1 	beq.w	8002378 <send_cube+0x1e30>
 8000836:	f002 fbef 	bl	8003018 <HAL_GPIO_WritePin>
 800083a:	6265      	str	r5, [r4, #36]	; 0x24
 800083c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800083e:	2b33      	cmp	r3, #51	; 0x33
 8000840:	d9fc      	bls.n	800083c <send_cube+0x2f4>
 8000842:	6265      	str	r5, [r4, #36]	; 0x24
 8000844:	2200      	movs	r2, #0
 8000846:	4631      	mov	r1, r6
 8000848:	4638      	mov	r0, r7
 800084a:	f002 fbe5 	bl	8003018 <HAL_GPIO_WritePin>
 800084e:	6265      	str	r5, [r4, #36]	; 0x24
 8000850:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000852:	2b01      	cmp	r3, #1
 8000854:	d9fc      	bls.n	8000850 <send_cube+0x308>
 8000856:	6265      	str	r5, [r4, #36]	; 0x24
 8000858:	f818 3c0b 	ldrb.w	r3, [r8, #-11]
 800085c:	f013 0a40 	ands.w	sl, r3, #64	; 0x40
 8000860:	f04f 0201 	mov.w	r2, #1
 8000864:	4631      	mov	r1, r6
 8000866:	4638      	mov	r0, r7
 8000868:	f001 8574 	beq.w	8002354 <send_cube+0x1e0c>
 800086c:	f002 fbd4 	bl	8003018 <HAL_GPIO_WritePin>
 8000870:	6265      	str	r5, [r4, #36]	; 0x24
 8000872:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000874:	2b33      	cmp	r3, #51	; 0x33
 8000876:	d9fc      	bls.n	8000872 <send_cube+0x32a>
 8000878:	6265      	str	r5, [r4, #36]	; 0x24
 800087a:	2200      	movs	r2, #0
 800087c:	4631      	mov	r1, r6
 800087e:	4638      	mov	r0, r7
 8000880:	f002 fbca 	bl	8003018 <HAL_GPIO_WritePin>
 8000884:	6265      	str	r5, [r4, #36]	; 0x24
 8000886:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000888:	2b01      	cmp	r3, #1
 800088a:	d9fc      	bls.n	8000886 <send_cube+0x33e>
 800088c:	6265      	str	r5, [r4, #36]	; 0x24
 800088e:	f918 3c0b 	ldrsb.w	r3, [r8, #-11]
 8000892:	2b00      	cmp	r3, #0
 8000894:	f04f 0201 	mov.w	r2, #1
 8000898:	4631      	mov	r1, r6
 800089a:	4638      	mov	r0, r7
 800089c:	f2c1 867a 	blt.w	8002594 <send_cube+0x204c>
 80008a0:	f002 fbba 	bl	8003018 <HAL_GPIO_WritePin>
 80008a4:	6265      	str	r5, [r4, #36]	; 0x24
 80008a6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80008a8:	2b01      	cmp	r3, #1
 80008aa:	d9fc      	bls.n	80008a6 <send_cube+0x35e>
 80008ac:	2200      	movs	r2, #0
 80008ae:	4631      	mov	r1, r6
 80008b0:	4638      	mov	r0, r7
 80008b2:	f002 fbb1 	bl	8003018 <HAL_GPIO_WritePin>
 80008b6:	6265      	str	r5, [r4, #36]	; 0x24
 80008b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80008ba:	2b33      	cmp	r3, #51	; 0x33
 80008bc:	d9fc      	bls.n	80008b8 <send_cube+0x370>
 80008be:	6265      	str	r5, [r4, #36]	; 0x24
 80008c0:	f818 3c0a 	ldrb.w	r3, [r8, #-10]
 80008c4:	f013 0a01 	ands.w	sl, r3, #1
 80008c8:	f04f 0201 	mov.w	r2, #1
 80008cc:	4631      	mov	r1, r6
 80008ce:	4638      	mov	r0, r7
 80008d0:	f001 852e 	beq.w	8002330 <send_cube+0x1de8>
 80008d4:	f002 fba0 	bl	8003018 <HAL_GPIO_WritePin>
 80008d8:	6265      	str	r5, [r4, #36]	; 0x24
 80008da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80008dc:	2b33      	cmp	r3, #51	; 0x33
 80008de:	d9fc      	bls.n	80008da <send_cube+0x392>
 80008e0:	6265      	str	r5, [r4, #36]	; 0x24
 80008e2:	2200      	movs	r2, #0
 80008e4:	4631      	mov	r1, r6
 80008e6:	4638      	mov	r0, r7
 80008e8:	f002 fb96 	bl	8003018 <HAL_GPIO_WritePin>
 80008ec:	6265      	str	r5, [r4, #36]	; 0x24
 80008ee:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80008f0:	2b01      	cmp	r3, #1
 80008f2:	d9fc      	bls.n	80008ee <send_cube+0x3a6>
 80008f4:	6265      	str	r5, [r4, #36]	; 0x24
 80008f6:	f818 3c0a 	ldrb.w	r3, [r8, #-10]
 80008fa:	f013 0a02 	ands.w	sl, r3, #2
 80008fe:	f04f 0201 	mov.w	r2, #1
 8000902:	4631      	mov	r1, r6
 8000904:	4638      	mov	r0, r7
 8000906:	f001 8501 	beq.w	800230c <send_cube+0x1dc4>
 800090a:	f002 fb85 	bl	8003018 <HAL_GPIO_WritePin>
 800090e:	6265      	str	r5, [r4, #36]	; 0x24
 8000910:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000912:	2b33      	cmp	r3, #51	; 0x33
 8000914:	d9fc      	bls.n	8000910 <send_cube+0x3c8>
 8000916:	6265      	str	r5, [r4, #36]	; 0x24
 8000918:	2200      	movs	r2, #0
 800091a:	4631      	mov	r1, r6
 800091c:	4638      	mov	r0, r7
 800091e:	f002 fb7b 	bl	8003018 <HAL_GPIO_WritePin>
 8000922:	6265      	str	r5, [r4, #36]	; 0x24
 8000924:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000926:	2b01      	cmp	r3, #1
 8000928:	d9fc      	bls.n	8000924 <send_cube+0x3dc>
 800092a:	6265      	str	r5, [r4, #36]	; 0x24
 800092c:	f818 3c0a 	ldrb.w	r3, [r8, #-10]
 8000930:	f013 0a04 	ands.w	sl, r3, #4
 8000934:	f04f 0201 	mov.w	r2, #1
 8000938:	4631      	mov	r1, r6
 800093a:	4638      	mov	r0, r7
 800093c:	f001 84d4 	beq.w	80022e8 <send_cube+0x1da0>
 8000940:	f002 fb6a 	bl	8003018 <HAL_GPIO_WritePin>
 8000944:	6265      	str	r5, [r4, #36]	; 0x24
 8000946:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000948:	2b33      	cmp	r3, #51	; 0x33
 800094a:	d9fc      	bls.n	8000946 <send_cube+0x3fe>
 800094c:	6265      	str	r5, [r4, #36]	; 0x24
 800094e:	2200      	movs	r2, #0
 8000950:	4631      	mov	r1, r6
 8000952:	4638      	mov	r0, r7
 8000954:	f002 fb60 	bl	8003018 <HAL_GPIO_WritePin>
 8000958:	6265      	str	r5, [r4, #36]	; 0x24
 800095a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800095c:	2b01      	cmp	r3, #1
 800095e:	d9fc      	bls.n	800095a <send_cube+0x412>
 8000960:	6265      	str	r5, [r4, #36]	; 0x24
 8000962:	f818 3c0a 	ldrb.w	r3, [r8, #-10]
 8000966:	f013 0a08 	ands.w	sl, r3, #8
 800096a:	f04f 0201 	mov.w	r2, #1
 800096e:	4631      	mov	r1, r6
 8000970:	4638      	mov	r0, r7
 8000972:	f001 84a7 	beq.w	80022c4 <send_cube+0x1d7c>
 8000976:	f002 fb4f 	bl	8003018 <HAL_GPIO_WritePin>
 800097a:	6265      	str	r5, [r4, #36]	; 0x24
 800097c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800097e:	2b33      	cmp	r3, #51	; 0x33
 8000980:	d9fc      	bls.n	800097c <send_cube+0x434>
 8000982:	6265      	str	r5, [r4, #36]	; 0x24
 8000984:	2200      	movs	r2, #0
 8000986:	4631      	mov	r1, r6
 8000988:	4638      	mov	r0, r7
 800098a:	f002 fb45 	bl	8003018 <HAL_GPIO_WritePin>
 800098e:	6265      	str	r5, [r4, #36]	; 0x24
 8000990:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000992:	2b01      	cmp	r3, #1
 8000994:	d9fc      	bls.n	8000990 <send_cube+0x448>
 8000996:	6265      	str	r5, [r4, #36]	; 0x24
 8000998:	f818 3c0a 	ldrb.w	r3, [r8, #-10]
 800099c:	f013 0a10 	ands.w	sl, r3, #16
 80009a0:	f04f 0201 	mov.w	r2, #1
 80009a4:	4631      	mov	r1, r6
 80009a6:	4638      	mov	r0, r7
 80009a8:	f001 847a 	beq.w	80022a0 <send_cube+0x1d58>
 80009ac:	f002 fb34 	bl	8003018 <HAL_GPIO_WritePin>
 80009b0:	6265      	str	r5, [r4, #36]	; 0x24
 80009b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80009b4:	2b33      	cmp	r3, #51	; 0x33
 80009b6:	d9fc      	bls.n	80009b2 <send_cube+0x46a>
 80009b8:	6265      	str	r5, [r4, #36]	; 0x24
 80009ba:	2200      	movs	r2, #0
 80009bc:	4631      	mov	r1, r6
 80009be:	4638      	mov	r0, r7
 80009c0:	f002 fb2a 	bl	8003018 <HAL_GPIO_WritePin>
 80009c4:	6265      	str	r5, [r4, #36]	; 0x24
 80009c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80009c8:	2b01      	cmp	r3, #1
 80009ca:	d9fc      	bls.n	80009c6 <send_cube+0x47e>
 80009cc:	6265      	str	r5, [r4, #36]	; 0x24
 80009ce:	f818 3c0a 	ldrb.w	r3, [r8, #-10]
 80009d2:	f013 0a20 	ands.w	sl, r3, #32
 80009d6:	f04f 0201 	mov.w	r2, #1
 80009da:	4631      	mov	r1, r6
 80009dc:	4638      	mov	r0, r7
 80009de:	f001 844d 	beq.w	800227c <send_cube+0x1d34>
 80009e2:	f002 fb19 	bl	8003018 <HAL_GPIO_WritePin>
 80009e6:	6265      	str	r5, [r4, #36]	; 0x24
 80009e8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80009ea:	2b33      	cmp	r3, #51	; 0x33
 80009ec:	d9fc      	bls.n	80009e8 <send_cube+0x4a0>
 80009ee:	6265      	str	r5, [r4, #36]	; 0x24
 80009f0:	2200      	movs	r2, #0
 80009f2:	4631      	mov	r1, r6
 80009f4:	4638      	mov	r0, r7
 80009f6:	f002 fb0f 	bl	8003018 <HAL_GPIO_WritePin>
 80009fa:	6265      	str	r5, [r4, #36]	; 0x24
 80009fc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80009fe:	2b01      	cmp	r3, #1
 8000a00:	d9fc      	bls.n	80009fc <send_cube+0x4b4>
 8000a02:	6265      	str	r5, [r4, #36]	; 0x24
 8000a04:	f818 3c0a 	ldrb.w	r3, [r8, #-10]
 8000a08:	f013 0a40 	ands.w	sl, r3, #64	; 0x40
 8000a0c:	f04f 0201 	mov.w	r2, #1
 8000a10:	4631      	mov	r1, r6
 8000a12:	4638      	mov	r0, r7
 8000a14:	f001 8420 	beq.w	8002258 <send_cube+0x1d10>
 8000a18:	f002 fafe 	bl	8003018 <HAL_GPIO_WritePin>
 8000a1c:	6265      	str	r5, [r4, #36]	; 0x24
 8000a1e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000a20:	2b33      	cmp	r3, #51	; 0x33
 8000a22:	d9fc      	bls.n	8000a1e <send_cube+0x4d6>
 8000a24:	6265      	str	r5, [r4, #36]	; 0x24
 8000a26:	2200      	movs	r2, #0
 8000a28:	4631      	mov	r1, r6
 8000a2a:	4638      	mov	r0, r7
 8000a2c:	f002 faf4 	bl	8003018 <HAL_GPIO_WritePin>
 8000a30:	6265      	str	r5, [r4, #36]	; 0x24
 8000a32:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000a34:	2b01      	cmp	r3, #1
 8000a36:	d9fc      	bls.n	8000a32 <send_cube+0x4ea>
 8000a38:	6265      	str	r5, [r4, #36]	; 0x24
 8000a3a:	f918 3c0a 	ldrsb.w	r3, [r8, #-10]
 8000a3e:	2b00      	cmp	r3, #0
 8000a40:	f04f 0201 	mov.w	r2, #1
 8000a44:	4631      	mov	r1, r6
 8000a46:	4638      	mov	r0, r7
 8000a48:	f2c1 8592 	blt.w	8002570 <send_cube+0x2028>
 8000a4c:	f002 fae4 	bl	8003018 <HAL_GPIO_WritePin>
 8000a50:	6265      	str	r5, [r4, #36]	; 0x24
 8000a52:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000a54:	2b01      	cmp	r3, #1
 8000a56:	d9fc      	bls.n	8000a52 <send_cube+0x50a>
 8000a58:	2200      	movs	r2, #0
 8000a5a:	4631      	mov	r1, r6
 8000a5c:	4638      	mov	r0, r7
 8000a5e:	f002 fadb 	bl	8003018 <HAL_GPIO_WritePin>
 8000a62:	6265      	str	r5, [r4, #36]	; 0x24
 8000a64:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000a66:	2b33      	cmp	r3, #51	; 0x33
 8000a68:	d9fc      	bls.n	8000a64 <send_cube+0x51c>
 8000a6a:	6265      	str	r5, [r4, #36]	; 0x24
	  LOH();LOH();LOH();
 8000a6c:	f818 3c09 	ldrb.w	r3, [r8, #-9]
 8000a70:	f013 0a01 	ands.w	sl, r3, #1
 8000a74:	f04f 0201 	mov.w	r2, #1
 8000a78:	4631      	mov	r1, r6
 8000a7a:	4638      	mov	r0, r7
 8000a7c:	f001 83da 	beq.w	8002234 <send_cube+0x1cec>
 8000a80:	f002 faca 	bl	8003018 <HAL_GPIO_WritePin>
 8000a84:	6265      	str	r5, [r4, #36]	; 0x24
 8000a86:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000a88:	2b33      	cmp	r3, #51	; 0x33
 8000a8a:	d9fc      	bls.n	8000a86 <send_cube+0x53e>
 8000a8c:	6265      	str	r5, [r4, #36]	; 0x24
 8000a8e:	2200      	movs	r2, #0
 8000a90:	4631      	mov	r1, r6
 8000a92:	4638      	mov	r0, r7
 8000a94:	f002 fac0 	bl	8003018 <HAL_GPIO_WritePin>
 8000a98:	6265      	str	r5, [r4, #36]	; 0x24
 8000a9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000a9c:	2b01      	cmp	r3, #1
 8000a9e:	d9fc      	bls.n	8000a9a <send_cube+0x552>
 8000aa0:	6265      	str	r5, [r4, #36]	; 0x24
 8000aa2:	f818 3c09 	ldrb.w	r3, [r8, #-9]
 8000aa6:	f013 0a02 	ands.w	sl, r3, #2
 8000aaa:	f04f 0201 	mov.w	r2, #1
 8000aae:	4631      	mov	r1, r6
 8000ab0:	4638      	mov	r0, r7
 8000ab2:	f001 83ad 	beq.w	8002210 <send_cube+0x1cc8>
 8000ab6:	f002 faaf 	bl	8003018 <HAL_GPIO_WritePin>
 8000aba:	6265      	str	r5, [r4, #36]	; 0x24
 8000abc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000abe:	2b33      	cmp	r3, #51	; 0x33
 8000ac0:	d9fc      	bls.n	8000abc <send_cube+0x574>
 8000ac2:	6265      	str	r5, [r4, #36]	; 0x24
 8000ac4:	2200      	movs	r2, #0
 8000ac6:	4631      	mov	r1, r6
 8000ac8:	4638      	mov	r0, r7
 8000aca:	f002 faa5 	bl	8003018 <HAL_GPIO_WritePin>
 8000ace:	6265      	str	r5, [r4, #36]	; 0x24
 8000ad0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000ad2:	2b01      	cmp	r3, #1
 8000ad4:	d9fc      	bls.n	8000ad0 <send_cube+0x588>
 8000ad6:	6265      	str	r5, [r4, #36]	; 0x24
 8000ad8:	f818 3c09 	ldrb.w	r3, [r8, #-9]
 8000adc:	f013 0a04 	ands.w	sl, r3, #4
 8000ae0:	f04f 0201 	mov.w	r2, #1
 8000ae4:	4631      	mov	r1, r6
 8000ae6:	4638      	mov	r0, r7
 8000ae8:	f001 8380 	beq.w	80021ec <send_cube+0x1ca4>
 8000aec:	f002 fa94 	bl	8003018 <HAL_GPIO_WritePin>
 8000af0:	6265      	str	r5, [r4, #36]	; 0x24
 8000af2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000af4:	2b33      	cmp	r3, #51	; 0x33
 8000af6:	d9fc      	bls.n	8000af2 <send_cube+0x5aa>
 8000af8:	6265      	str	r5, [r4, #36]	; 0x24
 8000afa:	2200      	movs	r2, #0
 8000afc:	4631      	mov	r1, r6
 8000afe:	4638      	mov	r0, r7
 8000b00:	f002 fa8a 	bl	8003018 <HAL_GPIO_WritePin>
 8000b04:	6265      	str	r5, [r4, #36]	; 0x24
 8000b06:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000b08:	2b01      	cmp	r3, #1
 8000b0a:	d9fc      	bls.n	8000b06 <send_cube+0x5be>
 8000b0c:	6265      	str	r5, [r4, #36]	; 0x24
 8000b0e:	f818 3c09 	ldrb.w	r3, [r8, #-9]
 8000b12:	f013 0a08 	ands.w	sl, r3, #8
 8000b16:	f04f 0201 	mov.w	r2, #1
 8000b1a:	4631      	mov	r1, r6
 8000b1c:	4638      	mov	r0, r7
 8000b1e:	f001 8353 	beq.w	80021c8 <send_cube+0x1c80>
 8000b22:	f002 fa79 	bl	8003018 <HAL_GPIO_WritePin>
 8000b26:	6265      	str	r5, [r4, #36]	; 0x24
 8000b28:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000b2a:	2b33      	cmp	r3, #51	; 0x33
 8000b2c:	d9fc      	bls.n	8000b28 <send_cube+0x5e0>
 8000b2e:	6265      	str	r5, [r4, #36]	; 0x24
 8000b30:	2200      	movs	r2, #0
 8000b32:	4631      	mov	r1, r6
 8000b34:	4638      	mov	r0, r7
 8000b36:	f002 fa6f 	bl	8003018 <HAL_GPIO_WritePin>
 8000b3a:	6265      	str	r5, [r4, #36]	; 0x24
 8000b3c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000b3e:	2b01      	cmp	r3, #1
 8000b40:	d9fc      	bls.n	8000b3c <send_cube+0x5f4>
 8000b42:	6265      	str	r5, [r4, #36]	; 0x24
 8000b44:	f818 3c09 	ldrb.w	r3, [r8, #-9]
 8000b48:	f013 0a10 	ands.w	sl, r3, #16
 8000b4c:	f04f 0201 	mov.w	r2, #1
 8000b50:	4631      	mov	r1, r6
 8000b52:	4638      	mov	r0, r7
 8000b54:	f001 8326 	beq.w	80021a4 <send_cube+0x1c5c>
 8000b58:	f002 fa5e 	bl	8003018 <HAL_GPIO_WritePin>
 8000b5c:	6265      	str	r5, [r4, #36]	; 0x24
 8000b5e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000b60:	2b33      	cmp	r3, #51	; 0x33
 8000b62:	d9fc      	bls.n	8000b5e <send_cube+0x616>
 8000b64:	6265      	str	r5, [r4, #36]	; 0x24
 8000b66:	2200      	movs	r2, #0
 8000b68:	4631      	mov	r1, r6
 8000b6a:	4638      	mov	r0, r7
 8000b6c:	f002 fa54 	bl	8003018 <HAL_GPIO_WritePin>
 8000b70:	6265      	str	r5, [r4, #36]	; 0x24
 8000b72:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000b74:	2b01      	cmp	r3, #1
 8000b76:	d9fc      	bls.n	8000b72 <send_cube+0x62a>
 8000b78:	6265      	str	r5, [r4, #36]	; 0x24
 8000b7a:	f818 3c09 	ldrb.w	r3, [r8, #-9]
 8000b7e:	f013 0a20 	ands.w	sl, r3, #32
 8000b82:	f04f 0201 	mov.w	r2, #1
 8000b86:	4631      	mov	r1, r6
 8000b88:	4638      	mov	r0, r7
 8000b8a:	f001 82f9 	beq.w	8002180 <send_cube+0x1c38>
 8000b8e:	f002 fa43 	bl	8003018 <HAL_GPIO_WritePin>
 8000b92:	6265      	str	r5, [r4, #36]	; 0x24
 8000b94:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000b96:	2b33      	cmp	r3, #51	; 0x33
 8000b98:	d9fc      	bls.n	8000b94 <send_cube+0x64c>
 8000b9a:	6265      	str	r5, [r4, #36]	; 0x24
 8000b9c:	2200      	movs	r2, #0
 8000b9e:	4631      	mov	r1, r6
 8000ba0:	4638      	mov	r0, r7
 8000ba2:	f002 fa39 	bl	8003018 <HAL_GPIO_WritePin>
 8000ba6:	6265      	str	r5, [r4, #36]	; 0x24
 8000ba8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000baa:	2b01      	cmp	r3, #1
 8000bac:	d9fc      	bls.n	8000ba8 <send_cube+0x660>
 8000bae:	6265      	str	r5, [r4, #36]	; 0x24
 8000bb0:	f818 3c09 	ldrb.w	r3, [r8, #-9]
 8000bb4:	f013 0a40 	ands.w	sl, r3, #64	; 0x40
 8000bb8:	f04f 0201 	mov.w	r2, #1
 8000bbc:	4631      	mov	r1, r6
 8000bbe:	4638      	mov	r0, r7
 8000bc0:	f001 82cc 	beq.w	800215c <send_cube+0x1c14>
 8000bc4:	f002 fa28 	bl	8003018 <HAL_GPIO_WritePin>
 8000bc8:	6265      	str	r5, [r4, #36]	; 0x24
 8000bca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000bcc:	2b33      	cmp	r3, #51	; 0x33
 8000bce:	d9fc      	bls.n	8000bca <send_cube+0x682>
 8000bd0:	6265      	str	r5, [r4, #36]	; 0x24
 8000bd2:	2200      	movs	r2, #0
 8000bd4:	4631      	mov	r1, r6
 8000bd6:	4638      	mov	r0, r7
 8000bd8:	f002 fa1e 	bl	8003018 <HAL_GPIO_WritePin>
 8000bdc:	6265      	str	r5, [r4, #36]	; 0x24
 8000bde:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000be0:	2b01      	cmp	r3, #1
 8000be2:	d9fc      	bls.n	8000bde <send_cube+0x696>
 8000be4:	6265      	str	r5, [r4, #36]	; 0x24
 8000be6:	f918 3c09 	ldrsb.w	r3, [r8, #-9]
 8000bea:	2b00      	cmp	r3, #0
 8000bec:	f04f 0201 	mov.w	r2, #1
 8000bf0:	4631      	mov	r1, r6
 8000bf2:	4638      	mov	r0, r7
 8000bf4:	f2c1 84aa 	blt.w	800254c <send_cube+0x2004>
 8000bf8:	f002 fa0e 	bl	8003018 <HAL_GPIO_WritePin>
 8000bfc:	6265      	str	r5, [r4, #36]	; 0x24
 8000bfe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000c00:	2b01      	cmp	r3, #1
 8000c02:	d9fc      	bls.n	8000bfe <send_cube+0x6b6>
 8000c04:	2200      	movs	r2, #0
 8000c06:	4631      	mov	r1, r6
 8000c08:	4638      	mov	r0, r7
 8000c0a:	f002 fa05 	bl	8003018 <HAL_GPIO_WritePin>
 8000c0e:	6265      	str	r5, [r4, #36]	; 0x24
 8000c10:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000c12:	2b33      	cmp	r3, #51	; 0x33
 8000c14:	d9fc      	bls.n	8000c10 <send_cube+0x6c8>
 8000c16:	6265      	str	r5, [r4, #36]	; 0x24
 8000c18:	f818 3c08 	ldrb.w	r3, [r8, #-8]
 8000c1c:	f013 0a01 	ands.w	sl, r3, #1
 8000c20:	f04f 0201 	mov.w	r2, #1
 8000c24:	4631      	mov	r1, r6
 8000c26:	4638      	mov	r0, r7
 8000c28:	f001 8286 	beq.w	8002138 <send_cube+0x1bf0>
 8000c2c:	f002 f9f4 	bl	8003018 <HAL_GPIO_WritePin>
 8000c30:	6265      	str	r5, [r4, #36]	; 0x24
 8000c32:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000c34:	2b33      	cmp	r3, #51	; 0x33
 8000c36:	d9fc      	bls.n	8000c32 <send_cube+0x6ea>
 8000c38:	6265      	str	r5, [r4, #36]	; 0x24
 8000c3a:	2200      	movs	r2, #0
 8000c3c:	4631      	mov	r1, r6
 8000c3e:	4638      	mov	r0, r7
 8000c40:	f002 f9ea 	bl	8003018 <HAL_GPIO_WritePin>
 8000c44:	6265      	str	r5, [r4, #36]	; 0x24
 8000c46:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000c48:	2b01      	cmp	r3, #1
 8000c4a:	d9fc      	bls.n	8000c46 <send_cube+0x6fe>
 8000c4c:	6265      	str	r5, [r4, #36]	; 0x24
 8000c4e:	f818 3c08 	ldrb.w	r3, [r8, #-8]
 8000c52:	f013 0a02 	ands.w	sl, r3, #2
 8000c56:	f04f 0201 	mov.w	r2, #1
 8000c5a:	4631      	mov	r1, r6
 8000c5c:	4638      	mov	r0, r7
 8000c5e:	f001 8259 	beq.w	8002114 <send_cube+0x1bcc>
 8000c62:	f002 f9d9 	bl	8003018 <HAL_GPIO_WritePin>
 8000c66:	6265      	str	r5, [r4, #36]	; 0x24
 8000c68:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000c6a:	2b33      	cmp	r3, #51	; 0x33
 8000c6c:	d9fc      	bls.n	8000c68 <send_cube+0x720>
 8000c6e:	6265      	str	r5, [r4, #36]	; 0x24
 8000c70:	2200      	movs	r2, #0
 8000c72:	4631      	mov	r1, r6
 8000c74:	4638      	mov	r0, r7
 8000c76:	f002 f9cf 	bl	8003018 <HAL_GPIO_WritePin>
 8000c7a:	6265      	str	r5, [r4, #36]	; 0x24
 8000c7c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000c7e:	2b01      	cmp	r3, #1
 8000c80:	d9fc      	bls.n	8000c7c <send_cube+0x734>
 8000c82:	6265      	str	r5, [r4, #36]	; 0x24
 8000c84:	f818 3c08 	ldrb.w	r3, [r8, #-8]
 8000c88:	f013 0a04 	ands.w	sl, r3, #4
 8000c8c:	f04f 0201 	mov.w	r2, #1
 8000c90:	4631      	mov	r1, r6
 8000c92:	4638      	mov	r0, r7
 8000c94:	f001 822c 	beq.w	80020f0 <send_cube+0x1ba8>
 8000c98:	f002 f9be 	bl	8003018 <HAL_GPIO_WritePin>
 8000c9c:	6265      	str	r5, [r4, #36]	; 0x24
 8000c9e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000ca0:	2b33      	cmp	r3, #51	; 0x33
 8000ca2:	d9fc      	bls.n	8000c9e <send_cube+0x756>
 8000ca4:	6265      	str	r5, [r4, #36]	; 0x24
 8000ca6:	2200      	movs	r2, #0
 8000ca8:	4631      	mov	r1, r6
 8000caa:	4638      	mov	r0, r7
 8000cac:	f002 f9b4 	bl	8003018 <HAL_GPIO_WritePin>
 8000cb0:	6265      	str	r5, [r4, #36]	; 0x24
 8000cb2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000cb4:	2b01      	cmp	r3, #1
 8000cb6:	d9fc      	bls.n	8000cb2 <send_cube+0x76a>
 8000cb8:	6265      	str	r5, [r4, #36]	; 0x24
 8000cba:	f818 3c08 	ldrb.w	r3, [r8, #-8]
 8000cbe:	f013 0a08 	ands.w	sl, r3, #8
 8000cc2:	f04f 0201 	mov.w	r2, #1
 8000cc6:	4631      	mov	r1, r6
 8000cc8:	4638      	mov	r0, r7
 8000cca:	f001 81ff 	beq.w	80020cc <send_cube+0x1b84>
 8000cce:	f002 f9a3 	bl	8003018 <HAL_GPIO_WritePin>
 8000cd2:	6265      	str	r5, [r4, #36]	; 0x24
 8000cd4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000cd6:	2b33      	cmp	r3, #51	; 0x33
 8000cd8:	d9fc      	bls.n	8000cd4 <send_cube+0x78c>
 8000cda:	6265      	str	r5, [r4, #36]	; 0x24
 8000cdc:	2200      	movs	r2, #0
 8000cde:	4631      	mov	r1, r6
 8000ce0:	4638      	mov	r0, r7
 8000ce2:	f002 f999 	bl	8003018 <HAL_GPIO_WritePin>
 8000ce6:	6265      	str	r5, [r4, #36]	; 0x24
 8000ce8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000cea:	2b01      	cmp	r3, #1
 8000cec:	d9fc      	bls.n	8000ce8 <send_cube+0x7a0>
 8000cee:	6265      	str	r5, [r4, #36]	; 0x24
 8000cf0:	f818 3c08 	ldrb.w	r3, [r8, #-8]
 8000cf4:	f013 0a10 	ands.w	sl, r3, #16
 8000cf8:	f04f 0201 	mov.w	r2, #1
 8000cfc:	4631      	mov	r1, r6
 8000cfe:	4638      	mov	r0, r7
 8000d00:	f001 81d2 	beq.w	80020a8 <send_cube+0x1b60>
 8000d04:	f002 f988 	bl	8003018 <HAL_GPIO_WritePin>
 8000d08:	6265      	str	r5, [r4, #36]	; 0x24
 8000d0a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000d0c:	2b33      	cmp	r3, #51	; 0x33
 8000d0e:	d9fc      	bls.n	8000d0a <send_cube+0x7c2>
 8000d10:	6265      	str	r5, [r4, #36]	; 0x24
 8000d12:	2200      	movs	r2, #0
 8000d14:	4631      	mov	r1, r6
 8000d16:	4638      	mov	r0, r7
 8000d18:	f002 f97e 	bl	8003018 <HAL_GPIO_WritePin>
 8000d1c:	6265      	str	r5, [r4, #36]	; 0x24
 8000d1e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000d20:	2b01      	cmp	r3, #1
 8000d22:	d9fc      	bls.n	8000d1e <send_cube+0x7d6>
 8000d24:	6265      	str	r5, [r4, #36]	; 0x24
 8000d26:	f818 3c08 	ldrb.w	r3, [r8, #-8]
 8000d2a:	f013 0a20 	ands.w	sl, r3, #32
 8000d2e:	f04f 0201 	mov.w	r2, #1
 8000d32:	4631      	mov	r1, r6
 8000d34:	4638      	mov	r0, r7
 8000d36:	f001 81a5 	beq.w	8002084 <send_cube+0x1b3c>
 8000d3a:	f002 f96d 	bl	8003018 <HAL_GPIO_WritePin>
 8000d3e:	6265      	str	r5, [r4, #36]	; 0x24
 8000d40:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000d42:	2b33      	cmp	r3, #51	; 0x33
 8000d44:	d9fc      	bls.n	8000d40 <send_cube+0x7f8>
 8000d46:	6265      	str	r5, [r4, #36]	; 0x24
 8000d48:	2200      	movs	r2, #0
 8000d4a:	4631      	mov	r1, r6
 8000d4c:	4638      	mov	r0, r7
 8000d4e:	f002 f963 	bl	8003018 <HAL_GPIO_WritePin>
 8000d52:	6265      	str	r5, [r4, #36]	; 0x24
 8000d54:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000d56:	2b01      	cmp	r3, #1
 8000d58:	d9fc      	bls.n	8000d54 <send_cube+0x80c>
 8000d5a:	6265      	str	r5, [r4, #36]	; 0x24
 8000d5c:	f818 3c08 	ldrb.w	r3, [r8, #-8]
 8000d60:	f013 0a40 	ands.w	sl, r3, #64	; 0x40
 8000d64:	f04f 0201 	mov.w	r2, #1
 8000d68:	4631      	mov	r1, r6
 8000d6a:	4638      	mov	r0, r7
 8000d6c:	f001 8178 	beq.w	8002060 <send_cube+0x1b18>
 8000d70:	f002 f952 	bl	8003018 <HAL_GPIO_WritePin>
 8000d74:	6265      	str	r5, [r4, #36]	; 0x24
 8000d76:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000d78:	2b33      	cmp	r3, #51	; 0x33
 8000d7a:	d9fc      	bls.n	8000d76 <send_cube+0x82e>
 8000d7c:	6265      	str	r5, [r4, #36]	; 0x24
 8000d7e:	2200      	movs	r2, #0
 8000d80:	4631      	mov	r1, r6
 8000d82:	4638      	mov	r0, r7
 8000d84:	f002 f948 	bl	8003018 <HAL_GPIO_WritePin>
 8000d88:	6265      	str	r5, [r4, #36]	; 0x24
 8000d8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000d8c:	2b01      	cmp	r3, #1
 8000d8e:	d9fc      	bls.n	8000d8a <send_cube+0x842>
 8000d90:	6265      	str	r5, [r4, #36]	; 0x24
 8000d92:	f918 3c08 	ldrsb.w	r3, [r8, #-8]
 8000d96:	2b00      	cmp	r3, #0
 8000d98:	f04f 0201 	mov.w	r2, #1
 8000d9c:	4631      	mov	r1, r6
 8000d9e:	4638      	mov	r0, r7
 8000da0:	f2c1 849a 	blt.w	80026d8 <send_cube+0x2190>
 8000da4:	f002 f938 	bl	8003018 <HAL_GPIO_WritePin>
 8000da8:	6265      	str	r5, [r4, #36]	; 0x24
 8000daa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000dac:	2b01      	cmp	r3, #1
 8000dae:	d9fc      	bls.n	8000daa <send_cube+0x862>
 8000db0:	2200      	movs	r2, #0
 8000db2:	4631      	mov	r1, r6
 8000db4:	4638      	mov	r0, r7
 8000db6:	f002 f92f 	bl	8003018 <HAL_GPIO_WritePin>
 8000dba:	6265      	str	r5, [r4, #36]	; 0x24
 8000dbc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000dbe:	2b33      	cmp	r3, #51	; 0x33
 8000dc0:	d9fc      	bls.n	8000dbc <send_cube+0x874>
 8000dc2:	6265      	str	r5, [r4, #36]	; 0x24
 8000dc4:	f818 3c07 	ldrb.w	r3, [r8, #-7]
 8000dc8:	f013 0a01 	ands.w	sl, r3, #1
 8000dcc:	f04f 0201 	mov.w	r2, #1
 8000dd0:	4631      	mov	r1, r6
 8000dd2:	4638      	mov	r0, r7
 8000dd4:	f001 8132 	beq.w	800203c <send_cube+0x1af4>
 8000dd8:	f002 f91e 	bl	8003018 <HAL_GPIO_WritePin>
 8000ddc:	6265      	str	r5, [r4, #36]	; 0x24
 8000dde:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000de0:	2b33      	cmp	r3, #51	; 0x33
 8000de2:	d9fc      	bls.n	8000dde <send_cube+0x896>
 8000de4:	6265      	str	r5, [r4, #36]	; 0x24
 8000de6:	2200      	movs	r2, #0
 8000de8:	4631      	mov	r1, r6
 8000dea:	4638      	mov	r0, r7
 8000dec:	f002 f914 	bl	8003018 <HAL_GPIO_WritePin>
 8000df0:	6265      	str	r5, [r4, #36]	; 0x24
 8000df2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000df4:	2b01      	cmp	r3, #1
 8000df6:	d9fc      	bls.n	8000df2 <send_cube+0x8aa>
 8000df8:	6265      	str	r5, [r4, #36]	; 0x24
 8000dfa:	f818 3c07 	ldrb.w	r3, [r8, #-7]
 8000dfe:	f013 0a02 	ands.w	sl, r3, #2
 8000e02:	f04f 0201 	mov.w	r2, #1
 8000e06:	4631      	mov	r1, r6
 8000e08:	4638      	mov	r0, r7
 8000e0a:	f001 8105 	beq.w	8002018 <send_cube+0x1ad0>
 8000e0e:	f002 f903 	bl	8003018 <HAL_GPIO_WritePin>
 8000e12:	6265      	str	r5, [r4, #36]	; 0x24
 8000e14:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000e16:	2b33      	cmp	r3, #51	; 0x33
 8000e18:	d9fc      	bls.n	8000e14 <send_cube+0x8cc>
 8000e1a:	6265      	str	r5, [r4, #36]	; 0x24
 8000e1c:	2200      	movs	r2, #0
 8000e1e:	4631      	mov	r1, r6
 8000e20:	4638      	mov	r0, r7
 8000e22:	f002 f8f9 	bl	8003018 <HAL_GPIO_WritePin>
 8000e26:	6265      	str	r5, [r4, #36]	; 0x24
 8000e28:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000e2a:	2b01      	cmp	r3, #1
 8000e2c:	d9fc      	bls.n	8000e28 <send_cube+0x8e0>
 8000e2e:	6265      	str	r5, [r4, #36]	; 0x24
 8000e30:	f818 3c07 	ldrb.w	r3, [r8, #-7]
 8000e34:	f013 0a04 	ands.w	sl, r3, #4
 8000e38:	f04f 0201 	mov.w	r2, #1
 8000e3c:	4631      	mov	r1, r6
 8000e3e:	4638      	mov	r0, r7
 8000e40:	f001 80d8 	beq.w	8001ff4 <send_cube+0x1aac>
 8000e44:	f002 f8e8 	bl	8003018 <HAL_GPIO_WritePin>
 8000e48:	6265      	str	r5, [r4, #36]	; 0x24
 8000e4a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000e4c:	2b33      	cmp	r3, #51	; 0x33
 8000e4e:	d9fc      	bls.n	8000e4a <send_cube+0x902>
 8000e50:	6265      	str	r5, [r4, #36]	; 0x24
 8000e52:	2200      	movs	r2, #0
 8000e54:	4631      	mov	r1, r6
 8000e56:	4638      	mov	r0, r7
 8000e58:	f002 f8de 	bl	8003018 <HAL_GPIO_WritePin>
 8000e5c:	6265      	str	r5, [r4, #36]	; 0x24
 8000e5e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000e60:	2b01      	cmp	r3, #1
 8000e62:	d9fc      	bls.n	8000e5e <send_cube+0x916>
 8000e64:	6265      	str	r5, [r4, #36]	; 0x24
 8000e66:	f818 3c07 	ldrb.w	r3, [r8, #-7]
 8000e6a:	f013 0a08 	ands.w	sl, r3, #8
 8000e6e:	f04f 0201 	mov.w	r2, #1
 8000e72:	4631      	mov	r1, r6
 8000e74:	4638      	mov	r0, r7
 8000e76:	f001 80ab 	beq.w	8001fd0 <send_cube+0x1a88>
 8000e7a:	f002 f8cd 	bl	8003018 <HAL_GPIO_WritePin>
 8000e7e:	6265      	str	r5, [r4, #36]	; 0x24
 8000e80:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000e82:	2b33      	cmp	r3, #51	; 0x33
 8000e84:	d9fc      	bls.n	8000e80 <send_cube+0x938>
 8000e86:	6265      	str	r5, [r4, #36]	; 0x24
 8000e88:	2200      	movs	r2, #0
 8000e8a:	4631      	mov	r1, r6
 8000e8c:	4638      	mov	r0, r7
 8000e8e:	f002 f8c3 	bl	8003018 <HAL_GPIO_WritePin>
 8000e92:	6265      	str	r5, [r4, #36]	; 0x24
 8000e94:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000e96:	2b01      	cmp	r3, #1
 8000e98:	d9fc      	bls.n	8000e94 <send_cube+0x94c>
 8000e9a:	6265      	str	r5, [r4, #36]	; 0x24
 8000e9c:	f818 3c07 	ldrb.w	r3, [r8, #-7]
 8000ea0:	f013 0a10 	ands.w	sl, r3, #16
 8000ea4:	f04f 0201 	mov.w	r2, #1
 8000ea8:	4631      	mov	r1, r6
 8000eaa:	4638      	mov	r0, r7
 8000eac:	f001 807e 	beq.w	8001fac <send_cube+0x1a64>
 8000eb0:	f002 f8b2 	bl	8003018 <HAL_GPIO_WritePin>
 8000eb4:	6265      	str	r5, [r4, #36]	; 0x24
 8000eb6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000eb8:	2b33      	cmp	r3, #51	; 0x33
 8000eba:	d9fc      	bls.n	8000eb6 <send_cube+0x96e>
 8000ebc:	6265      	str	r5, [r4, #36]	; 0x24
 8000ebe:	2200      	movs	r2, #0
 8000ec0:	4631      	mov	r1, r6
 8000ec2:	4638      	mov	r0, r7
 8000ec4:	f002 f8a8 	bl	8003018 <HAL_GPIO_WritePin>
 8000ec8:	6265      	str	r5, [r4, #36]	; 0x24
 8000eca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000ecc:	2b01      	cmp	r3, #1
 8000ece:	d9fc      	bls.n	8000eca <send_cube+0x982>
 8000ed0:	6265      	str	r5, [r4, #36]	; 0x24
 8000ed2:	f818 3c07 	ldrb.w	r3, [r8, #-7]
 8000ed6:	f013 0a20 	ands.w	sl, r3, #32
 8000eda:	f04f 0201 	mov.w	r2, #1
 8000ede:	4631      	mov	r1, r6
 8000ee0:	4638      	mov	r0, r7
 8000ee2:	f001 8051 	beq.w	8001f88 <send_cube+0x1a40>
 8000ee6:	f002 f897 	bl	8003018 <HAL_GPIO_WritePin>
 8000eea:	6265      	str	r5, [r4, #36]	; 0x24
 8000eec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000eee:	2b33      	cmp	r3, #51	; 0x33
 8000ef0:	d9fc      	bls.n	8000eec <send_cube+0x9a4>
 8000ef2:	6265      	str	r5, [r4, #36]	; 0x24
 8000ef4:	2200      	movs	r2, #0
 8000ef6:	4631      	mov	r1, r6
 8000ef8:	4638      	mov	r0, r7
 8000efa:	f002 f88d 	bl	8003018 <HAL_GPIO_WritePin>
 8000efe:	6265      	str	r5, [r4, #36]	; 0x24
 8000f00:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000f02:	2b01      	cmp	r3, #1
 8000f04:	d9fc      	bls.n	8000f00 <send_cube+0x9b8>
 8000f06:	6265      	str	r5, [r4, #36]	; 0x24
 8000f08:	f818 3c07 	ldrb.w	r3, [r8, #-7]
 8000f0c:	f013 0a40 	ands.w	sl, r3, #64	; 0x40
 8000f10:	f04f 0201 	mov.w	r2, #1
 8000f14:	4631      	mov	r1, r6
 8000f16:	4638      	mov	r0, r7
 8000f18:	f001 8024 	beq.w	8001f64 <send_cube+0x1a1c>
 8000f1c:	f002 f87c 	bl	8003018 <HAL_GPIO_WritePin>
 8000f20:	6265      	str	r5, [r4, #36]	; 0x24
 8000f22:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000f24:	2b33      	cmp	r3, #51	; 0x33
 8000f26:	d9fc      	bls.n	8000f22 <send_cube+0x9da>
 8000f28:	6265      	str	r5, [r4, #36]	; 0x24
 8000f2a:	2200      	movs	r2, #0
 8000f2c:	4631      	mov	r1, r6
 8000f2e:	4638      	mov	r0, r7
 8000f30:	f002 f872 	bl	8003018 <HAL_GPIO_WritePin>
 8000f34:	6265      	str	r5, [r4, #36]	; 0x24
 8000f36:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000f38:	2b01      	cmp	r3, #1
 8000f3a:	d9fc      	bls.n	8000f36 <send_cube+0x9ee>
 8000f3c:	6265      	str	r5, [r4, #36]	; 0x24
 8000f3e:	f918 3c07 	ldrsb.w	r3, [r8, #-7]
 8000f42:	2b00      	cmp	r3, #0
 8000f44:	f04f 0201 	mov.w	r2, #1
 8000f48:	4631      	mov	r1, r6
 8000f4a:	4638      	mov	r0, r7
 8000f4c:	f2c1 83b2 	blt.w	80026b4 <send_cube+0x216c>
 8000f50:	f002 f862 	bl	8003018 <HAL_GPIO_WritePin>
 8000f54:	6265      	str	r5, [r4, #36]	; 0x24
 8000f56:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000f58:	2b01      	cmp	r3, #1
 8000f5a:	d9fc      	bls.n	8000f56 <send_cube+0xa0e>
 8000f5c:	2200      	movs	r2, #0
 8000f5e:	4631      	mov	r1, r6
 8000f60:	4638      	mov	r0, r7
 8000f62:	f002 f859 	bl	8003018 <HAL_GPIO_WritePin>
 8000f66:	6265      	str	r5, [r4, #36]	; 0x24
 8000f68:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000f6a:	2b33      	cmp	r3, #51	; 0x33
 8000f6c:	d9fc      	bls.n	8000f68 <send_cube+0xa20>
 8000f6e:	6265      	str	r5, [r4, #36]	; 0x24
	  LOH();LOH();LOH();
 8000f70:	f818 3c06 	ldrb.w	r3, [r8, #-6]
 8000f74:	f013 0a01 	ands.w	sl, r3, #1
 8000f78:	f04f 0201 	mov.w	r2, #1
 8000f7c:	4631      	mov	r1, r6
 8000f7e:	4638      	mov	r0, r7
 8000f80:	f000 87de 	beq.w	8001f40 <send_cube+0x19f8>
 8000f84:	f002 f848 	bl	8003018 <HAL_GPIO_WritePin>
 8000f88:	6265      	str	r5, [r4, #36]	; 0x24
 8000f8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000f8c:	2b33      	cmp	r3, #51	; 0x33
 8000f8e:	d9fc      	bls.n	8000f8a <send_cube+0xa42>
 8000f90:	6265      	str	r5, [r4, #36]	; 0x24
 8000f92:	2200      	movs	r2, #0
 8000f94:	4631      	mov	r1, r6
 8000f96:	4638      	mov	r0, r7
 8000f98:	f002 f83e 	bl	8003018 <HAL_GPIO_WritePin>
 8000f9c:	6265      	str	r5, [r4, #36]	; 0x24
 8000f9e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000fa0:	2b01      	cmp	r3, #1
 8000fa2:	d9fc      	bls.n	8000f9e <send_cube+0xa56>
 8000fa4:	6265      	str	r5, [r4, #36]	; 0x24
 8000fa6:	f818 3c06 	ldrb.w	r3, [r8, #-6]
 8000faa:	f013 0a02 	ands.w	sl, r3, #2
 8000fae:	f04f 0201 	mov.w	r2, #1
 8000fb2:	4631      	mov	r1, r6
 8000fb4:	4638      	mov	r0, r7
 8000fb6:	f000 87b1 	beq.w	8001f1c <send_cube+0x19d4>
 8000fba:	f002 f82d 	bl	8003018 <HAL_GPIO_WritePin>
 8000fbe:	6265      	str	r5, [r4, #36]	; 0x24
 8000fc0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000fc2:	2b33      	cmp	r3, #51	; 0x33
 8000fc4:	d9fc      	bls.n	8000fc0 <send_cube+0xa78>
 8000fc6:	6265      	str	r5, [r4, #36]	; 0x24
 8000fc8:	2200      	movs	r2, #0
 8000fca:	4631      	mov	r1, r6
 8000fcc:	4638      	mov	r0, r7
 8000fce:	f002 f823 	bl	8003018 <HAL_GPIO_WritePin>
 8000fd2:	6265      	str	r5, [r4, #36]	; 0x24
 8000fd4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000fd6:	2b01      	cmp	r3, #1
 8000fd8:	d9fc      	bls.n	8000fd4 <send_cube+0xa8c>
 8000fda:	6265      	str	r5, [r4, #36]	; 0x24
 8000fdc:	f818 3c06 	ldrb.w	r3, [r8, #-6]
 8000fe0:	f013 0a04 	ands.w	sl, r3, #4
 8000fe4:	f04f 0201 	mov.w	r2, #1
 8000fe8:	4631      	mov	r1, r6
 8000fea:	4638      	mov	r0, r7
 8000fec:	f000 8784 	beq.w	8001ef8 <send_cube+0x19b0>
 8000ff0:	f002 f812 	bl	8003018 <HAL_GPIO_WritePin>
 8000ff4:	6265      	str	r5, [r4, #36]	; 0x24
 8000ff6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000ff8:	2b33      	cmp	r3, #51	; 0x33
 8000ffa:	d9fc      	bls.n	8000ff6 <send_cube+0xaae>
 8000ffc:	6265      	str	r5, [r4, #36]	; 0x24
 8000ffe:	2200      	movs	r2, #0
 8001000:	4631      	mov	r1, r6
 8001002:	4638      	mov	r0, r7
 8001004:	f002 f808 	bl	8003018 <HAL_GPIO_WritePin>
 8001008:	6265      	str	r5, [r4, #36]	; 0x24
 800100a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800100c:	2b01      	cmp	r3, #1
 800100e:	d9fc      	bls.n	800100a <send_cube+0xac2>
 8001010:	6265      	str	r5, [r4, #36]	; 0x24
 8001012:	f818 3c06 	ldrb.w	r3, [r8, #-6]
 8001016:	f013 0a08 	ands.w	sl, r3, #8
 800101a:	f04f 0201 	mov.w	r2, #1
 800101e:	4631      	mov	r1, r6
 8001020:	4638      	mov	r0, r7
 8001022:	f000 8757 	beq.w	8001ed4 <send_cube+0x198c>
 8001026:	f001 fff7 	bl	8003018 <HAL_GPIO_WritePin>
 800102a:	6265      	str	r5, [r4, #36]	; 0x24
 800102c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800102e:	2b33      	cmp	r3, #51	; 0x33
 8001030:	d9fc      	bls.n	800102c <send_cube+0xae4>
 8001032:	6265      	str	r5, [r4, #36]	; 0x24
 8001034:	2200      	movs	r2, #0
 8001036:	4631      	mov	r1, r6
 8001038:	4638      	mov	r0, r7
 800103a:	f001 ffed 	bl	8003018 <HAL_GPIO_WritePin>
 800103e:	6265      	str	r5, [r4, #36]	; 0x24
 8001040:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001042:	2b01      	cmp	r3, #1
 8001044:	d9fc      	bls.n	8001040 <send_cube+0xaf8>
 8001046:	6265      	str	r5, [r4, #36]	; 0x24
 8001048:	f818 3c06 	ldrb.w	r3, [r8, #-6]
 800104c:	f013 0a10 	ands.w	sl, r3, #16
 8001050:	f04f 0201 	mov.w	r2, #1
 8001054:	4631      	mov	r1, r6
 8001056:	4638      	mov	r0, r7
 8001058:	f000 872a 	beq.w	8001eb0 <send_cube+0x1968>
 800105c:	f001 ffdc 	bl	8003018 <HAL_GPIO_WritePin>
 8001060:	6265      	str	r5, [r4, #36]	; 0x24
 8001062:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001064:	2b33      	cmp	r3, #51	; 0x33
 8001066:	d9fc      	bls.n	8001062 <send_cube+0xb1a>
 8001068:	6265      	str	r5, [r4, #36]	; 0x24
 800106a:	2200      	movs	r2, #0
 800106c:	4631      	mov	r1, r6
 800106e:	4638      	mov	r0, r7
 8001070:	f001 ffd2 	bl	8003018 <HAL_GPIO_WritePin>
 8001074:	6265      	str	r5, [r4, #36]	; 0x24
 8001076:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001078:	2b01      	cmp	r3, #1
 800107a:	d9fc      	bls.n	8001076 <send_cube+0xb2e>
 800107c:	6265      	str	r5, [r4, #36]	; 0x24
 800107e:	f818 3c06 	ldrb.w	r3, [r8, #-6]
 8001082:	f013 0a20 	ands.w	sl, r3, #32
 8001086:	f04f 0201 	mov.w	r2, #1
 800108a:	4631      	mov	r1, r6
 800108c:	4638      	mov	r0, r7
 800108e:	f000 86fd 	beq.w	8001e8c <send_cube+0x1944>
 8001092:	f001 ffc1 	bl	8003018 <HAL_GPIO_WritePin>
 8001096:	6265      	str	r5, [r4, #36]	; 0x24
 8001098:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800109a:	2b33      	cmp	r3, #51	; 0x33
 800109c:	d9fc      	bls.n	8001098 <send_cube+0xb50>
 800109e:	6265      	str	r5, [r4, #36]	; 0x24
 80010a0:	2200      	movs	r2, #0
 80010a2:	4631      	mov	r1, r6
 80010a4:	4638      	mov	r0, r7
 80010a6:	f001 ffb7 	bl	8003018 <HAL_GPIO_WritePin>
 80010aa:	6265      	str	r5, [r4, #36]	; 0x24
 80010ac:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80010ae:	2b01      	cmp	r3, #1
 80010b0:	d9fc      	bls.n	80010ac <send_cube+0xb64>
 80010b2:	6265      	str	r5, [r4, #36]	; 0x24
 80010b4:	f818 3c06 	ldrb.w	r3, [r8, #-6]
 80010b8:	f013 0a40 	ands.w	sl, r3, #64	; 0x40
 80010bc:	f04f 0201 	mov.w	r2, #1
 80010c0:	4631      	mov	r1, r6
 80010c2:	4638      	mov	r0, r7
 80010c4:	f000 86d0 	beq.w	8001e68 <send_cube+0x1920>
 80010c8:	f001 ffa6 	bl	8003018 <HAL_GPIO_WritePin>
 80010cc:	6265      	str	r5, [r4, #36]	; 0x24
 80010ce:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80010d0:	2b33      	cmp	r3, #51	; 0x33
 80010d2:	d9fc      	bls.n	80010ce <send_cube+0xb86>
 80010d4:	6265      	str	r5, [r4, #36]	; 0x24
 80010d6:	2200      	movs	r2, #0
 80010d8:	4631      	mov	r1, r6
 80010da:	4638      	mov	r0, r7
 80010dc:	f001 ff9c 	bl	8003018 <HAL_GPIO_WritePin>
 80010e0:	6265      	str	r5, [r4, #36]	; 0x24
 80010e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80010e4:	2b01      	cmp	r3, #1
 80010e6:	d9fc      	bls.n	80010e2 <send_cube+0xb9a>
 80010e8:	6265      	str	r5, [r4, #36]	; 0x24
 80010ea:	f918 3c06 	ldrsb.w	r3, [r8, #-6]
 80010ee:	2b00      	cmp	r3, #0
 80010f0:	f04f 0201 	mov.w	r2, #1
 80010f4:	4631      	mov	r1, r6
 80010f6:	4638      	mov	r0, r7
 80010f8:	f2c1 82ca 	blt.w	8002690 <send_cube+0x2148>
 80010fc:	f001 ff8c 	bl	8003018 <HAL_GPIO_WritePin>
 8001100:	6265      	str	r5, [r4, #36]	; 0x24
 8001102:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001104:	2b01      	cmp	r3, #1
 8001106:	d9fc      	bls.n	8001102 <send_cube+0xbba>
 8001108:	2200      	movs	r2, #0
 800110a:	4631      	mov	r1, r6
 800110c:	4638      	mov	r0, r7
 800110e:	f001 ff83 	bl	8003018 <HAL_GPIO_WritePin>
 8001112:	6265      	str	r5, [r4, #36]	; 0x24
 8001114:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001116:	2b33      	cmp	r3, #51	; 0x33
 8001118:	d9fc      	bls.n	8001114 <send_cube+0xbcc>
 800111a:	6265      	str	r5, [r4, #36]	; 0x24
 800111c:	f818 3c05 	ldrb.w	r3, [r8, #-5]
 8001120:	f013 0a01 	ands.w	sl, r3, #1
 8001124:	f04f 0201 	mov.w	r2, #1
 8001128:	4631      	mov	r1, r6
 800112a:	4638      	mov	r0, r7
 800112c:	f000 868a 	beq.w	8001e44 <send_cube+0x18fc>
 8001130:	f001 ff72 	bl	8003018 <HAL_GPIO_WritePin>
 8001134:	6265      	str	r5, [r4, #36]	; 0x24
 8001136:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001138:	2b33      	cmp	r3, #51	; 0x33
 800113a:	d9fc      	bls.n	8001136 <send_cube+0xbee>
 800113c:	6265      	str	r5, [r4, #36]	; 0x24
 800113e:	2200      	movs	r2, #0
 8001140:	4631      	mov	r1, r6
 8001142:	4638      	mov	r0, r7
 8001144:	f001 ff68 	bl	8003018 <HAL_GPIO_WritePin>
 8001148:	6265      	str	r5, [r4, #36]	; 0x24
 800114a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800114c:	2b01      	cmp	r3, #1
 800114e:	d9fc      	bls.n	800114a <send_cube+0xc02>
 8001150:	6265      	str	r5, [r4, #36]	; 0x24
 8001152:	f818 3c05 	ldrb.w	r3, [r8, #-5]
 8001156:	f013 0a02 	ands.w	sl, r3, #2
 800115a:	f04f 0201 	mov.w	r2, #1
 800115e:	4631      	mov	r1, r6
 8001160:	4638      	mov	r0, r7
 8001162:	f000 865d 	beq.w	8001e20 <send_cube+0x18d8>
 8001166:	f001 ff57 	bl	8003018 <HAL_GPIO_WritePin>
 800116a:	6265      	str	r5, [r4, #36]	; 0x24
 800116c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800116e:	2b33      	cmp	r3, #51	; 0x33
 8001170:	d9fc      	bls.n	800116c <send_cube+0xc24>
 8001172:	6265      	str	r5, [r4, #36]	; 0x24
 8001174:	2200      	movs	r2, #0
 8001176:	4631      	mov	r1, r6
 8001178:	4638      	mov	r0, r7
 800117a:	f001 ff4d 	bl	8003018 <HAL_GPIO_WritePin>
 800117e:	6265      	str	r5, [r4, #36]	; 0x24
 8001180:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001182:	2b01      	cmp	r3, #1
 8001184:	d9fc      	bls.n	8001180 <send_cube+0xc38>
 8001186:	6265      	str	r5, [r4, #36]	; 0x24
 8001188:	f818 3c05 	ldrb.w	r3, [r8, #-5]
 800118c:	f013 0a04 	ands.w	sl, r3, #4
 8001190:	f04f 0201 	mov.w	r2, #1
 8001194:	4631      	mov	r1, r6
 8001196:	4638      	mov	r0, r7
 8001198:	f000 8630 	beq.w	8001dfc <send_cube+0x18b4>
 800119c:	f001 ff3c 	bl	8003018 <HAL_GPIO_WritePin>
 80011a0:	6265      	str	r5, [r4, #36]	; 0x24
 80011a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80011a4:	2b33      	cmp	r3, #51	; 0x33
 80011a6:	d9fc      	bls.n	80011a2 <send_cube+0xc5a>
 80011a8:	6265      	str	r5, [r4, #36]	; 0x24
 80011aa:	2200      	movs	r2, #0
 80011ac:	4631      	mov	r1, r6
 80011ae:	4638      	mov	r0, r7
 80011b0:	f001 ff32 	bl	8003018 <HAL_GPIO_WritePin>
 80011b4:	6265      	str	r5, [r4, #36]	; 0x24
 80011b6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80011b8:	2b01      	cmp	r3, #1
 80011ba:	d9fc      	bls.n	80011b6 <send_cube+0xc6e>
 80011bc:	6265      	str	r5, [r4, #36]	; 0x24
 80011be:	f818 3c05 	ldrb.w	r3, [r8, #-5]
 80011c2:	f013 0a08 	ands.w	sl, r3, #8
 80011c6:	f04f 0201 	mov.w	r2, #1
 80011ca:	4631      	mov	r1, r6
 80011cc:	4638      	mov	r0, r7
 80011ce:	f000 8603 	beq.w	8001dd8 <send_cube+0x1890>
 80011d2:	f001 ff21 	bl	8003018 <HAL_GPIO_WritePin>
 80011d6:	6265      	str	r5, [r4, #36]	; 0x24
 80011d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80011da:	2b33      	cmp	r3, #51	; 0x33
 80011dc:	d9fc      	bls.n	80011d8 <send_cube+0xc90>
 80011de:	6265      	str	r5, [r4, #36]	; 0x24
 80011e0:	2200      	movs	r2, #0
 80011e2:	4631      	mov	r1, r6
 80011e4:	4638      	mov	r0, r7
 80011e6:	f001 ff17 	bl	8003018 <HAL_GPIO_WritePin>
 80011ea:	6265      	str	r5, [r4, #36]	; 0x24
 80011ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80011ee:	2b01      	cmp	r3, #1
 80011f0:	d9fc      	bls.n	80011ec <send_cube+0xca4>
 80011f2:	6265      	str	r5, [r4, #36]	; 0x24
 80011f4:	f818 3c05 	ldrb.w	r3, [r8, #-5]
 80011f8:	f013 0a10 	ands.w	sl, r3, #16
 80011fc:	f04f 0201 	mov.w	r2, #1
 8001200:	4631      	mov	r1, r6
 8001202:	4638      	mov	r0, r7
 8001204:	f000 85d6 	beq.w	8001db4 <send_cube+0x186c>
 8001208:	f001 ff06 	bl	8003018 <HAL_GPIO_WritePin>
 800120c:	6265      	str	r5, [r4, #36]	; 0x24
 800120e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001210:	2b33      	cmp	r3, #51	; 0x33
 8001212:	d9fc      	bls.n	800120e <send_cube+0xcc6>
 8001214:	6265      	str	r5, [r4, #36]	; 0x24
 8001216:	2200      	movs	r2, #0
 8001218:	4631      	mov	r1, r6
 800121a:	4638      	mov	r0, r7
 800121c:	f001 fefc 	bl	8003018 <HAL_GPIO_WritePin>
 8001220:	6265      	str	r5, [r4, #36]	; 0x24
 8001222:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001224:	2b01      	cmp	r3, #1
 8001226:	d9fc      	bls.n	8001222 <send_cube+0xcda>
 8001228:	6265      	str	r5, [r4, #36]	; 0x24
 800122a:	f818 3c05 	ldrb.w	r3, [r8, #-5]
 800122e:	f013 0a20 	ands.w	sl, r3, #32
 8001232:	f04f 0201 	mov.w	r2, #1
 8001236:	4631      	mov	r1, r6
 8001238:	4638      	mov	r0, r7
 800123a:	f000 85a9 	beq.w	8001d90 <send_cube+0x1848>
 800123e:	f001 feeb 	bl	8003018 <HAL_GPIO_WritePin>
 8001242:	6265      	str	r5, [r4, #36]	; 0x24
 8001244:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001246:	2b33      	cmp	r3, #51	; 0x33
 8001248:	d9fc      	bls.n	8001244 <send_cube+0xcfc>
 800124a:	6265      	str	r5, [r4, #36]	; 0x24
 800124c:	2200      	movs	r2, #0
 800124e:	4631      	mov	r1, r6
 8001250:	4638      	mov	r0, r7
 8001252:	f001 fee1 	bl	8003018 <HAL_GPIO_WritePin>
 8001256:	6265      	str	r5, [r4, #36]	; 0x24
 8001258:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800125a:	2b01      	cmp	r3, #1
 800125c:	d9fc      	bls.n	8001258 <send_cube+0xd10>
 800125e:	6265      	str	r5, [r4, #36]	; 0x24
 8001260:	f818 3c05 	ldrb.w	r3, [r8, #-5]
 8001264:	f013 0a40 	ands.w	sl, r3, #64	; 0x40
 8001268:	f04f 0201 	mov.w	r2, #1
 800126c:	4631      	mov	r1, r6
 800126e:	4638      	mov	r0, r7
 8001270:	f000 857c 	beq.w	8001d6c <send_cube+0x1824>
 8001274:	f001 fed0 	bl	8003018 <HAL_GPIO_WritePin>
 8001278:	6265      	str	r5, [r4, #36]	; 0x24
 800127a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800127c:	2b33      	cmp	r3, #51	; 0x33
 800127e:	d9fc      	bls.n	800127a <send_cube+0xd32>
 8001280:	6265      	str	r5, [r4, #36]	; 0x24
 8001282:	2200      	movs	r2, #0
 8001284:	4631      	mov	r1, r6
 8001286:	4638      	mov	r0, r7
 8001288:	f001 fec6 	bl	8003018 <HAL_GPIO_WritePin>
 800128c:	6265      	str	r5, [r4, #36]	; 0x24
 800128e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001290:	2b01      	cmp	r3, #1
 8001292:	d9fc      	bls.n	800128e <send_cube+0xd46>
 8001294:	6265      	str	r5, [r4, #36]	; 0x24
 8001296:	f918 3c05 	ldrsb.w	r3, [r8, #-5]
 800129a:	2b00      	cmp	r3, #0
 800129c:	f04f 0201 	mov.w	r2, #1
 80012a0:	4631      	mov	r1, r6
 80012a2:	4638      	mov	r0, r7
 80012a4:	f2c1 81e2 	blt.w	800266c <send_cube+0x2124>
 80012a8:	f001 feb6 	bl	8003018 <HAL_GPIO_WritePin>
 80012ac:	6265      	str	r5, [r4, #36]	; 0x24
 80012ae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80012b0:	2b01      	cmp	r3, #1
 80012b2:	d9fc      	bls.n	80012ae <send_cube+0xd66>
 80012b4:	2200      	movs	r2, #0
 80012b6:	4631      	mov	r1, r6
 80012b8:	4638      	mov	r0, r7
 80012ba:	f001 fead 	bl	8003018 <HAL_GPIO_WritePin>
 80012be:	6265      	str	r5, [r4, #36]	; 0x24
 80012c0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80012c2:	2b33      	cmp	r3, #51	; 0x33
 80012c4:	d9fc      	bls.n	80012c0 <send_cube+0xd78>
 80012c6:	6265      	str	r5, [r4, #36]	; 0x24
 80012c8:	f818 3c04 	ldrb.w	r3, [r8, #-4]
 80012cc:	f013 0a01 	ands.w	sl, r3, #1
 80012d0:	f04f 0201 	mov.w	r2, #1
 80012d4:	4631      	mov	r1, r6
 80012d6:	4638      	mov	r0, r7
 80012d8:	f000 8536 	beq.w	8001d48 <send_cube+0x1800>
 80012dc:	f001 fe9c 	bl	8003018 <HAL_GPIO_WritePin>
 80012e0:	6265      	str	r5, [r4, #36]	; 0x24
 80012e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80012e4:	2b33      	cmp	r3, #51	; 0x33
 80012e6:	d9fc      	bls.n	80012e2 <send_cube+0xd9a>
 80012e8:	6265      	str	r5, [r4, #36]	; 0x24
 80012ea:	2200      	movs	r2, #0
 80012ec:	4631      	mov	r1, r6
 80012ee:	4638      	mov	r0, r7
 80012f0:	f001 fe92 	bl	8003018 <HAL_GPIO_WritePin>
 80012f4:	6265      	str	r5, [r4, #36]	; 0x24
 80012f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80012f8:	2b01      	cmp	r3, #1
 80012fa:	d9fc      	bls.n	80012f6 <send_cube+0xdae>
 80012fc:	6265      	str	r5, [r4, #36]	; 0x24
 80012fe:	f818 3c04 	ldrb.w	r3, [r8, #-4]
 8001302:	f013 0a02 	ands.w	sl, r3, #2
 8001306:	f04f 0201 	mov.w	r2, #1
 800130a:	4631      	mov	r1, r6
 800130c:	4638      	mov	r0, r7
 800130e:	f000 8509 	beq.w	8001d24 <send_cube+0x17dc>
 8001312:	f001 fe81 	bl	8003018 <HAL_GPIO_WritePin>
 8001316:	6265      	str	r5, [r4, #36]	; 0x24
 8001318:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800131a:	2b33      	cmp	r3, #51	; 0x33
 800131c:	d9fc      	bls.n	8001318 <send_cube+0xdd0>
 800131e:	6265      	str	r5, [r4, #36]	; 0x24
 8001320:	2200      	movs	r2, #0
 8001322:	4631      	mov	r1, r6
 8001324:	4638      	mov	r0, r7
 8001326:	f001 fe77 	bl	8003018 <HAL_GPIO_WritePin>
 800132a:	6265      	str	r5, [r4, #36]	; 0x24
 800132c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800132e:	2b01      	cmp	r3, #1
 8001330:	d9fc      	bls.n	800132c <send_cube+0xde4>
 8001332:	6265      	str	r5, [r4, #36]	; 0x24
 8001334:	f818 3c04 	ldrb.w	r3, [r8, #-4]
 8001338:	f013 0a04 	ands.w	sl, r3, #4
 800133c:	f04f 0201 	mov.w	r2, #1
 8001340:	4631      	mov	r1, r6
 8001342:	4638      	mov	r0, r7
 8001344:	f000 84dc 	beq.w	8001d00 <send_cube+0x17b8>
 8001348:	f001 fe66 	bl	8003018 <HAL_GPIO_WritePin>
 800134c:	6265      	str	r5, [r4, #36]	; 0x24
 800134e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001350:	2b33      	cmp	r3, #51	; 0x33
 8001352:	d9fc      	bls.n	800134e <send_cube+0xe06>
 8001354:	6265      	str	r5, [r4, #36]	; 0x24
 8001356:	2200      	movs	r2, #0
 8001358:	4631      	mov	r1, r6
 800135a:	4638      	mov	r0, r7
 800135c:	f001 fe5c 	bl	8003018 <HAL_GPIO_WritePin>
 8001360:	6265      	str	r5, [r4, #36]	; 0x24
 8001362:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001364:	2b01      	cmp	r3, #1
 8001366:	d9fc      	bls.n	8001362 <send_cube+0xe1a>
 8001368:	6265      	str	r5, [r4, #36]	; 0x24
 800136a:	f818 3c04 	ldrb.w	r3, [r8, #-4]
 800136e:	f013 0a08 	ands.w	sl, r3, #8
 8001372:	f04f 0201 	mov.w	r2, #1
 8001376:	4631      	mov	r1, r6
 8001378:	4638      	mov	r0, r7
 800137a:	f000 84af 	beq.w	8001cdc <send_cube+0x1794>
 800137e:	f001 fe4b 	bl	8003018 <HAL_GPIO_WritePin>
 8001382:	6265      	str	r5, [r4, #36]	; 0x24
 8001384:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001386:	2b33      	cmp	r3, #51	; 0x33
 8001388:	d9fc      	bls.n	8001384 <send_cube+0xe3c>
 800138a:	6265      	str	r5, [r4, #36]	; 0x24
 800138c:	2200      	movs	r2, #0
 800138e:	4631      	mov	r1, r6
 8001390:	4638      	mov	r0, r7
 8001392:	f001 fe41 	bl	8003018 <HAL_GPIO_WritePin>
 8001396:	6265      	str	r5, [r4, #36]	; 0x24
 8001398:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800139a:	2b01      	cmp	r3, #1
 800139c:	d9fc      	bls.n	8001398 <send_cube+0xe50>
 800139e:	6265      	str	r5, [r4, #36]	; 0x24
 80013a0:	f818 3c04 	ldrb.w	r3, [r8, #-4]
 80013a4:	f013 0a10 	ands.w	sl, r3, #16
 80013a8:	f04f 0201 	mov.w	r2, #1
 80013ac:	4631      	mov	r1, r6
 80013ae:	4638      	mov	r0, r7
 80013b0:	f000 8482 	beq.w	8001cb8 <send_cube+0x1770>
 80013b4:	f001 fe30 	bl	8003018 <HAL_GPIO_WritePin>
 80013b8:	6265      	str	r5, [r4, #36]	; 0x24
 80013ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80013bc:	2b33      	cmp	r3, #51	; 0x33
 80013be:	d9fc      	bls.n	80013ba <send_cube+0xe72>
 80013c0:	6265      	str	r5, [r4, #36]	; 0x24
 80013c2:	2200      	movs	r2, #0
 80013c4:	4631      	mov	r1, r6
 80013c6:	4638      	mov	r0, r7
 80013c8:	f001 fe26 	bl	8003018 <HAL_GPIO_WritePin>
 80013cc:	6265      	str	r5, [r4, #36]	; 0x24
 80013ce:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80013d0:	2b01      	cmp	r3, #1
 80013d2:	d9fc      	bls.n	80013ce <send_cube+0xe86>
 80013d4:	6265      	str	r5, [r4, #36]	; 0x24
 80013d6:	f818 3c04 	ldrb.w	r3, [r8, #-4]
 80013da:	f013 0a20 	ands.w	sl, r3, #32
 80013de:	f04f 0201 	mov.w	r2, #1
 80013e2:	4631      	mov	r1, r6
 80013e4:	4638      	mov	r0, r7
 80013e6:	f000 8455 	beq.w	8001c94 <send_cube+0x174c>
 80013ea:	f001 fe15 	bl	8003018 <HAL_GPIO_WritePin>
 80013ee:	6265      	str	r5, [r4, #36]	; 0x24
 80013f0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80013f2:	2b33      	cmp	r3, #51	; 0x33
 80013f4:	d9fc      	bls.n	80013f0 <send_cube+0xea8>
 80013f6:	6265      	str	r5, [r4, #36]	; 0x24
 80013f8:	2200      	movs	r2, #0
 80013fa:	4631      	mov	r1, r6
 80013fc:	4638      	mov	r0, r7
 80013fe:	f001 fe0b 	bl	8003018 <HAL_GPIO_WritePin>
 8001402:	6265      	str	r5, [r4, #36]	; 0x24
 8001404:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001406:	2b01      	cmp	r3, #1
 8001408:	d9fc      	bls.n	8001404 <send_cube+0xebc>
 800140a:	6265      	str	r5, [r4, #36]	; 0x24
 800140c:	f818 3c04 	ldrb.w	r3, [r8, #-4]
 8001410:	f013 0a40 	ands.w	sl, r3, #64	; 0x40
 8001414:	f04f 0201 	mov.w	r2, #1
 8001418:	4631      	mov	r1, r6
 800141a:	4638      	mov	r0, r7
 800141c:	f000 8428 	beq.w	8001c70 <send_cube+0x1728>
 8001420:	f001 fdfa 	bl	8003018 <HAL_GPIO_WritePin>
 8001424:	6265      	str	r5, [r4, #36]	; 0x24
 8001426:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001428:	2b33      	cmp	r3, #51	; 0x33
 800142a:	d9fc      	bls.n	8001426 <send_cube+0xede>
 800142c:	6265      	str	r5, [r4, #36]	; 0x24
 800142e:	2200      	movs	r2, #0
 8001430:	4631      	mov	r1, r6
 8001432:	4638      	mov	r0, r7
 8001434:	f001 fdf0 	bl	8003018 <HAL_GPIO_WritePin>
 8001438:	6265      	str	r5, [r4, #36]	; 0x24
 800143a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800143c:	2b01      	cmp	r3, #1
 800143e:	d9fc      	bls.n	800143a <send_cube+0xef2>
 8001440:	6265      	str	r5, [r4, #36]	; 0x24
 8001442:	f918 3c04 	ldrsb.w	r3, [r8, #-4]
 8001446:	2b00      	cmp	r3, #0
 8001448:	f04f 0201 	mov.w	r2, #1
 800144c:	4631      	mov	r1, r6
 800144e:	4638      	mov	r0, r7
 8001450:	f2c1 80fa 	blt.w	8002648 <send_cube+0x2100>
 8001454:	f001 fde0 	bl	8003018 <HAL_GPIO_WritePin>
 8001458:	6265      	str	r5, [r4, #36]	; 0x24
 800145a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800145c:	2b01      	cmp	r3, #1
 800145e:	d9fc      	bls.n	800145a <send_cube+0xf12>
 8001460:	2200      	movs	r2, #0
 8001462:	4631      	mov	r1, r6
 8001464:	4638      	mov	r0, r7
 8001466:	f001 fdd7 	bl	8003018 <HAL_GPIO_WritePin>
 800146a:	6265      	str	r5, [r4, #36]	; 0x24
 800146c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800146e:	2b33      	cmp	r3, #51	; 0x33
 8001470:	d9fc      	bls.n	800146c <send_cube+0xf24>
 8001472:	6265      	str	r5, [r4, #36]	; 0x24
	  LOH();LOH();LOH();
 8001474:	f818 3c03 	ldrb.w	r3, [r8, #-3]
 8001478:	f013 0a01 	ands.w	sl, r3, #1
 800147c:	f04f 0201 	mov.w	r2, #1
 8001480:	4631      	mov	r1, r6
 8001482:	4638      	mov	r0, r7
 8001484:	f000 83e3 	beq.w	8001c4e <send_cube+0x1706>
 8001488:	f001 fdc6 	bl	8003018 <HAL_GPIO_WritePin>
 800148c:	6265      	str	r5, [r4, #36]	; 0x24
 800148e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001490:	2b33      	cmp	r3, #51	; 0x33
 8001492:	d9fc      	bls.n	800148e <send_cube+0xf46>
 8001494:	6265      	str	r5, [r4, #36]	; 0x24
 8001496:	2200      	movs	r2, #0
 8001498:	4631      	mov	r1, r6
 800149a:	4638      	mov	r0, r7
 800149c:	f001 fdbc 	bl	8003018 <HAL_GPIO_WritePin>
 80014a0:	6265      	str	r5, [r4, #36]	; 0x24
 80014a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80014a4:	2b01      	cmp	r3, #1
 80014a6:	d9fc      	bls.n	80014a2 <send_cube+0xf5a>
 80014a8:	6265      	str	r5, [r4, #36]	; 0x24
 80014aa:	f818 3c03 	ldrb.w	r3, [r8, #-3]
 80014ae:	f013 0a02 	ands.w	sl, r3, #2
 80014b2:	f04f 0201 	mov.w	r2, #1
 80014b6:	4631      	mov	r1, r6
 80014b8:	4638      	mov	r0, r7
 80014ba:	f000 83b7 	beq.w	8001c2c <send_cube+0x16e4>
 80014be:	f001 fdab 	bl	8003018 <HAL_GPIO_WritePin>
 80014c2:	6265      	str	r5, [r4, #36]	; 0x24
 80014c4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80014c6:	2b33      	cmp	r3, #51	; 0x33
 80014c8:	d9fc      	bls.n	80014c4 <send_cube+0xf7c>
 80014ca:	6265      	str	r5, [r4, #36]	; 0x24
 80014cc:	2200      	movs	r2, #0
 80014ce:	4631      	mov	r1, r6
 80014d0:	4638      	mov	r0, r7
 80014d2:	f001 fda1 	bl	8003018 <HAL_GPIO_WritePin>
 80014d6:	6265      	str	r5, [r4, #36]	; 0x24
 80014d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80014da:	2b01      	cmp	r3, #1
 80014dc:	d9fc      	bls.n	80014d8 <send_cube+0xf90>
 80014de:	6265      	str	r5, [r4, #36]	; 0x24
 80014e0:	f818 3c03 	ldrb.w	r3, [r8, #-3]
 80014e4:	f013 0a04 	ands.w	sl, r3, #4
 80014e8:	f04f 0201 	mov.w	r2, #1
 80014ec:	4631      	mov	r1, r6
 80014ee:	4638      	mov	r0, r7
 80014f0:	f000 8388 	beq.w	8001c04 <send_cube+0x16bc>
 80014f4:	f001 fd90 	bl	8003018 <HAL_GPIO_WritePin>
 80014f8:	6265      	str	r5, [r4, #36]	; 0x24
 80014fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80014fc:	2b33      	cmp	r3, #51	; 0x33
 80014fe:	d9fc      	bls.n	80014fa <send_cube+0xfb2>
 8001500:	6265      	str	r5, [r4, #36]	; 0x24
 8001502:	2200      	movs	r2, #0
 8001504:	4631      	mov	r1, r6
 8001506:	4638      	mov	r0, r7
 8001508:	f001 fd86 	bl	8003018 <HAL_GPIO_WritePin>
 800150c:	6265      	str	r5, [r4, #36]	; 0x24
 800150e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001510:	2b01      	cmp	r3, #1
 8001512:	d9fc      	bls.n	800150e <send_cube+0xfc6>
 8001514:	6265      	str	r5, [r4, #36]	; 0x24
 8001516:	f818 3c03 	ldrb.w	r3, [r8, #-3]
 800151a:	f013 0a08 	ands.w	sl, r3, #8
 800151e:	f04f 0201 	mov.w	r2, #1
 8001522:	4631      	mov	r1, r6
 8001524:	4638      	mov	r0, r7
 8001526:	f000 835c 	beq.w	8001be2 <send_cube+0x169a>
 800152a:	f001 fd75 	bl	8003018 <HAL_GPIO_WritePin>
 800152e:	6265      	str	r5, [r4, #36]	; 0x24
 8001530:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001532:	2b33      	cmp	r3, #51	; 0x33
 8001534:	d9fc      	bls.n	8001530 <send_cube+0xfe8>
 8001536:	6265      	str	r5, [r4, #36]	; 0x24
 8001538:	2200      	movs	r2, #0
 800153a:	4631      	mov	r1, r6
 800153c:	4638      	mov	r0, r7
 800153e:	f001 fd6b 	bl	8003018 <HAL_GPIO_WritePin>
 8001542:	6265      	str	r5, [r4, #36]	; 0x24
 8001544:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001546:	2b01      	cmp	r3, #1
 8001548:	d9fc      	bls.n	8001544 <send_cube+0xffc>
 800154a:	6265      	str	r5, [r4, #36]	; 0x24
 800154c:	f818 3c03 	ldrb.w	r3, [r8, #-3]
 8001550:	f013 0a10 	ands.w	sl, r3, #16
 8001554:	f04f 0201 	mov.w	r2, #1
 8001558:	4631      	mov	r1, r6
 800155a:	4638      	mov	r0, r7
 800155c:	f000 8330 	beq.w	8001bc0 <send_cube+0x1678>
 8001560:	f001 fd5a 	bl	8003018 <HAL_GPIO_WritePin>
 8001564:	6265      	str	r5, [r4, #36]	; 0x24
 8001566:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001568:	2b33      	cmp	r3, #51	; 0x33
 800156a:	d9fc      	bls.n	8001566 <send_cube+0x101e>
 800156c:	6265      	str	r5, [r4, #36]	; 0x24
 800156e:	2200      	movs	r2, #0
 8001570:	4631      	mov	r1, r6
 8001572:	4638      	mov	r0, r7
 8001574:	f001 fd50 	bl	8003018 <HAL_GPIO_WritePin>
 8001578:	6265      	str	r5, [r4, #36]	; 0x24
 800157a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800157c:	2b01      	cmp	r3, #1
 800157e:	d9fc      	bls.n	800157a <send_cube+0x1032>
 8001580:	6265      	str	r5, [r4, #36]	; 0x24
 8001582:	f818 3c03 	ldrb.w	r3, [r8, #-3]
 8001586:	f013 0a20 	ands.w	sl, r3, #32
 800158a:	f04f 0201 	mov.w	r2, #1
 800158e:	4631      	mov	r1, r6
 8001590:	4638      	mov	r0, r7
 8001592:	f000 8304 	beq.w	8001b9e <send_cube+0x1656>
 8001596:	f001 fd3f 	bl	8003018 <HAL_GPIO_WritePin>
 800159a:	6265      	str	r5, [r4, #36]	; 0x24
 800159c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800159e:	2b33      	cmp	r3, #51	; 0x33
 80015a0:	d9fc      	bls.n	800159c <send_cube+0x1054>
 80015a2:	6265      	str	r5, [r4, #36]	; 0x24
 80015a4:	2200      	movs	r2, #0
 80015a6:	4631      	mov	r1, r6
 80015a8:	4638      	mov	r0, r7
 80015aa:	f001 fd35 	bl	8003018 <HAL_GPIO_WritePin>
 80015ae:	6265      	str	r5, [r4, #36]	; 0x24
 80015b0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80015b2:	2b01      	cmp	r3, #1
 80015b4:	d9fc      	bls.n	80015b0 <send_cube+0x1068>
 80015b6:	6265      	str	r5, [r4, #36]	; 0x24
 80015b8:	f818 3c03 	ldrb.w	r3, [r8, #-3]
 80015bc:	f013 0a40 	ands.w	sl, r3, #64	; 0x40
 80015c0:	f04f 0201 	mov.w	r2, #1
 80015c4:	4631      	mov	r1, r6
 80015c6:	4638      	mov	r0, r7
 80015c8:	f000 82d8 	beq.w	8001b7c <send_cube+0x1634>
 80015cc:	f001 fd24 	bl	8003018 <HAL_GPIO_WritePin>
 80015d0:	6265      	str	r5, [r4, #36]	; 0x24
 80015d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80015d4:	2b33      	cmp	r3, #51	; 0x33
 80015d6:	d9fc      	bls.n	80015d2 <send_cube+0x108a>
 80015d8:	6265      	str	r5, [r4, #36]	; 0x24
 80015da:	2200      	movs	r2, #0
 80015dc:	4631      	mov	r1, r6
 80015de:	4638      	mov	r0, r7
 80015e0:	f001 fd1a 	bl	8003018 <HAL_GPIO_WritePin>
 80015e4:	6265      	str	r5, [r4, #36]	; 0x24
 80015e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80015e8:	2b01      	cmp	r3, #1
 80015ea:	d9fc      	bls.n	80015e6 <send_cube+0x109e>
 80015ec:	6265      	str	r5, [r4, #36]	; 0x24
 80015ee:	f918 3c03 	ldrsb.w	r3, [r8, #-3]
 80015f2:	2b00      	cmp	r3, #0
 80015f4:	f04f 0201 	mov.w	r2, #1
 80015f8:	4631      	mov	r1, r6
 80015fa:	4638      	mov	r0, r7
 80015fc:	f2c1 8012 	blt.w	8002624 <send_cube+0x20dc>
 8001600:	f001 fd0a 	bl	8003018 <HAL_GPIO_WritePin>
 8001604:	6265      	str	r5, [r4, #36]	; 0x24
 8001606:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001608:	2b01      	cmp	r3, #1
 800160a:	d9fc      	bls.n	8001606 <send_cube+0x10be>
 800160c:	2200      	movs	r2, #0
 800160e:	4631      	mov	r1, r6
 8001610:	4638      	mov	r0, r7
 8001612:	f001 fd01 	bl	8003018 <HAL_GPIO_WritePin>
 8001616:	6265      	str	r5, [r4, #36]	; 0x24
 8001618:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800161a:	2b33      	cmp	r3, #51	; 0x33
 800161c:	d9fc      	bls.n	8001618 <send_cube+0x10d0>
 800161e:	6265      	str	r5, [r4, #36]	; 0x24
 8001620:	f818 3c02 	ldrb.w	r3, [r8, #-2]
 8001624:	f013 0a01 	ands.w	sl, r3, #1
 8001628:	f04f 0201 	mov.w	r2, #1
 800162c:	4631      	mov	r1, r6
 800162e:	4638      	mov	r0, r7
 8001630:	f000 8293 	beq.w	8001b5a <send_cube+0x1612>
 8001634:	f001 fcf0 	bl	8003018 <HAL_GPIO_WritePin>
 8001638:	6265      	str	r5, [r4, #36]	; 0x24
 800163a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800163c:	2b33      	cmp	r3, #51	; 0x33
 800163e:	d9fc      	bls.n	800163a <send_cube+0x10f2>
 8001640:	6265      	str	r5, [r4, #36]	; 0x24
 8001642:	2200      	movs	r2, #0
 8001644:	4631      	mov	r1, r6
 8001646:	4638      	mov	r0, r7
 8001648:	f001 fce6 	bl	8003018 <HAL_GPIO_WritePin>
 800164c:	6265      	str	r5, [r4, #36]	; 0x24
 800164e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001650:	2b01      	cmp	r3, #1
 8001652:	d9fc      	bls.n	800164e <send_cube+0x1106>
 8001654:	6265      	str	r5, [r4, #36]	; 0x24
 8001656:	f818 3c02 	ldrb.w	r3, [r8, #-2]
 800165a:	f013 0a02 	ands.w	sl, r3, #2
 800165e:	f04f 0201 	mov.w	r2, #1
 8001662:	4631      	mov	r1, r6
 8001664:	4638      	mov	r0, r7
 8001666:	f000 8267 	beq.w	8001b38 <send_cube+0x15f0>
 800166a:	f001 fcd5 	bl	8003018 <HAL_GPIO_WritePin>
 800166e:	6265      	str	r5, [r4, #36]	; 0x24
 8001670:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001672:	2b33      	cmp	r3, #51	; 0x33
 8001674:	d9fc      	bls.n	8001670 <send_cube+0x1128>
 8001676:	6265      	str	r5, [r4, #36]	; 0x24
 8001678:	2200      	movs	r2, #0
 800167a:	4631      	mov	r1, r6
 800167c:	4638      	mov	r0, r7
 800167e:	f001 fccb 	bl	8003018 <HAL_GPIO_WritePin>
 8001682:	6265      	str	r5, [r4, #36]	; 0x24
 8001684:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001686:	2b01      	cmp	r3, #1
 8001688:	d9fc      	bls.n	8001684 <send_cube+0x113c>
 800168a:	6265      	str	r5, [r4, #36]	; 0x24
 800168c:	f818 3c02 	ldrb.w	r3, [r8, #-2]
 8001690:	f013 0a04 	ands.w	sl, r3, #4
 8001694:	f04f 0201 	mov.w	r2, #1
 8001698:	4631      	mov	r1, r6
 800169a:	4638      	mov	r0, r7
 800169c:	f000 823b 	beq.w	8001b16 <send_cube+0x15ce>
 80016a0:	f001 fcba 	bl	8003018 <HAL_GPIO_WritePin>
 80016a4:	6265      	str	r5, [r4, #36]	; 0x24
 80016a6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80016a8:	2b33      	cmp	r3, #51	; 0x33
 80016aa:	d9fc      	bls.n	80016a6 <send_cube+0x115e>
 80016ac:	6265      	str	r5, [r4, #36]	; 0x24
 80016ae:	2200      	movs	r2, #0
 80016b0:	4631      	mov	r1, r6
 80016b2:	4638      	mov	r0, r7
 80016b4:	f001 fcb0 	bl	8003018 <HAL_GPIO_WritePin>
 80016b8:	6265      	str	r5, [r4, #36]	; 0x24
 80016ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80016bc:	2b01      	cmp	r3, #1
 80016be:	d9fc      	bls.n	80016ba <send_cube+0x1172>
 80016c0:	6265      	str	r5, [r4, #36]	; 0x24
 80016c2:	f818 3c02 	ldrb.w	r3, [r8, #-2]
 80016c6:	f013 0a08 	ands.w	sl, r3, #8
 80016ca:	f04f 0201 	mov.w	r2, #1
 80016ce:	4631      	mov	r1, r6
 80016d0:	4638      	mov	r0, r7
 80016d2:	f000 820f 	beq.w	8001af4 <send_cube+0x15ac>
 80016d6:	f001 fc9f 	bl	8003018 <HAL_GPIO_WritePin>
 80016da:	6265      	str	r5, [r4, #36]	; 0x24
 80016dc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80016de:	2b33      	cmp	r3, #51	; 0x33
 80016e0:	d9fc      	bls.n	80016dc <send_cube+0x1194>
 80016e2:	6265      	str	r5, [r4, #36]	; 0x24
 80016e4:	2200      	movs	r2, #0
 80016e6:	4631      	mov	r1, r6
 80016e8:	4638      	mov	r0, r7
 80016ea:	f001 fc95 	bl	8003018 <HAL_GPIO_WritePin>
 80016ee:	6265      	str	r5, [r4, #36]	; 0x24
 80016f0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80016f2:	2b01      	cmp	r3, #1
 80016f4:	d9fc      	bls.n	80016f0 <send_cube+0x11a8>
 80016f6:	6265      	str	r5, [r4, #36]	; 0x24
 80016f8:	f818 3c02 	ldrb.w	r3, [r8, #-2]
 80016fc:	f013 0a10 	ands.w	sl, r3, #16
 8001700:	f04f 0201 	mov.w	r2, #1
 8001704:	4631      	mov	r1, r6
 8001706:	4638      	mov	r0, r7
 8001708:	f000 81e3 	beq.w	8001ad2 <send_cube+0x158a>
 800170c:	f001 fc84 	bl	8003018 <HAL_GPIO_WritePin>
 8001710:	6265      	str	r5, [r4, #36]	; 0x24
 8001712:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001714:	2b33      	cmp	r3, #51	; 0x33
 8001716:	d9fc      	bls.n	8001712 <send_cube+0x11ca>
 8001718:	6265      	str	r5, [r4, #36]	; 0x24
 800171a:	2200      	movs	r2, #0
 800171c:	4631      	mov	r1, r6
 800171e:	4638      	mov	r0, r7
 8001720:	f001 fc7a 	bl	8003018 <HAL_GPIO_WritePin>
 8001724:	6265      	str	r5, [r4, #36]	; 0x24
 8001726:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001728:	2b01      	cmp	r3, #1
 800172a:	d9fc      	bls.n	8001726 <send_cube+0x11de>
 800172c:	6265      	str	r5, [r4, #36]	; 0x24
 800172e:	f818 3c02 	ldrb.w	r3, [r8, #-2]
 8001732:	f013 0a20 	ands.w	sl, r3, #32
 8001736:	f04f 0201 	mov.w	r2, #1
 800173a:	4631      	mov	r1, r6
 800173c:	4638      	mov	r0, r7
 800173e:	f000 81b7 	beq.w	8001ab0 <send_cube+0x1568>
 8001742:	f001 fc69 	bl	8003018 <HAL_GPIO_WritePin>
 8001746:	6265      	str	r5, [r4, #36]	; 0x24
 8001748:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800174a:	2b33      	cmp	r3, #51	; 0x33
 800174c:	d9fc      	bls.n	8001748 <send_cube+0x1200>
 800174e:	6265      	str	r5, [r4, #36]	; 0x24
 8001750:	2200      	movs	r2, #0
 8001752:	4631      	mov	r1, r6
 8001754:	4638      	mov	r0, r7
 8001756:	f001 fc5f 	bl	8003018 <HAL_GPIO_WritePin>
 800175a:	6265      	str	r5, [r4, #36]	; 0x24
 800175c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800175e:	2b01      	cmp	r3, #1
 8001760:	d9fc      	bls.n	800175c <send_cube+0x1214>
 8001762:	6265      	str	r5, [r4, #36]	; 0x24
 8001764:	f818 3c02 	ldrb.w	r3, [r8, #-2]
 8001768:	f013 0a40 	ands.w	sl, r3, #64	; 0x40
 800176c:	f04f 0201 	mov.w	r2, #1
 8001770:	4631      	mov	r1, r6
 8001772:	4638      	mov	r0, r7
 8001774:	f000 818b 	beq.w	8001a8e <send_cube+0x1546>
 8001778:	f001 fc4e 	bl	8003018 <HAL_GPIO_WritePin>
 800177c:	6265      	str	r5, [r4, #36]	; 0x24
 800177e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001780:	2b33      	cmp	r3, #51	; 0x33
 8001782:	d9fc      	bls.n	800177e <send_cube+0x1236>
 8001784:	6265      	str	r5, [r4, #36]	; 0x24
 8001786:	2200      	movs	r2, #0
 8001788:	4631      	mov	r1, r6
 800178a:	4638      	mov	r0, r7
 800178c:	f001 fc44 	bl	8003018 <HAL_GPIO_WritePin>
 8001790:	6265      	str	r5, [r4, #36]	; 0x24
 8001792:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001794:	2b01      	cmp	r3, #1
 8001796:	d9fc      	bls.n	8001792 <send_cube+0x124a>
 8001798:	6265      	str	r5, [r4, #36]	; 0x24
 800179a:	f918 3c02 	ldrsb.w	r3, [r8, #-2]
 800179e:	2b00      	cmp	r3, #0
 80017a0:	f04f 0201 	mov.w	r2, #1
 80017a4:	4631      	mov	r1, r6
 80017a6:	4638      	mov	r0, r7
 80017a8:	f2c0 872a 	blt.w	8002600 <send_cube+0x20b8>
 80017ac:	f001 fc34 	bl	8003018 <HAL_GPIO_WritePin>
 80017b0:	6265      	str	r5, [r4, #36]	; 0x24
 80017b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80017b4:	2b01      	cmp	r3, #1
 80017b6:	d9fc      	bls.n	80017b2 <send_cube+0x126a>
 80017b8:	2200      	movs	r2, #0
 80017ba:	4631      	mov	r1, r6
 80017bc:	4638      	mov	r0, r7
 80017be:	f001 fc2b 	bl	8003018 <HAL_GPIO_WritePin>
 80017c2:	6265      	str	r5, [r4, #36]	; 0x24
 80017c4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80017c6:	2b33      	cmp	r3, #51	; 0x33
 80017c8:	d9fc      	bls.n	80017c4 <send_cube+0x127c>
 80017ca:	6265      	str	r5, [r4, #36]	; 0x24
 80017cc:	f818 3c01 	ldrb.w	r3, [r8, #-1]
 80017d0:	f013 0a01 	ands.w	sl, r3, #1
 80017d4:	f04f 0201 	mov.w	r2, #1
 80017d8:	4631      	mov	r1, r6
 80017da:	4638      	mov	r0, r7
 80017dc:	f000 8146 	beq.w	8001a6c <send_cube+0x1524>
 80017e0:	f001 fc1a 	bl	8003018 <HAL_GPIO_WritePin>
 80017e4:	6265      	str	r5, [r4, #36]	; 0x24
 80017e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80017e8:	2b33      	cmp	r3, #51	; 0x33
 80017ea:	d9fc      	bls.n	80017e6 <send_cube+0x129e>
 80017ec:	6265      	str	r5, [r4, #36]	; 0x24
 80017ee:	2200      	movs	r2, #0
 80017f0:	4631      	mov	r1, r6
 80017f2:	4638      	mov	r0, r7
 80017f4:	f001 fc10 	bl	8003018 <HAL_GPIO_WritePin>
 80017f8:	6265      	str	r5, [r4, #36]	; 0x24
 80017fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80017fc:	2b01      	cmp	r3, #1
 80017fe:	d9fc      	bls.n	80017fa <send_cube+0x12b2>
 8001800:	6265      	str	r5, [r4, #36]	; 0x24
 8001802:	f818 3c01 	ldrb.w	r3, [r8, #-1]
 8001806:	f013 0a02 	ands.w	sl, r3, #2
 800180a:	f04f 0201 	mov.w	r2, #1
 800180e:	4631      	mov	r1, r6
 8001810:	4638      	mov	r0, r7
 8001812:	f000 811a 	beq.w	8001a4a <send_cube+0x1502>
 8001816:	f001 fbff 	bl	8003018 <HAL_GPIO_WritePin>
 800181a:	6265      	str	r5, [r4, #36]	; 0x24
 800181c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800181e:	2b33      	cmp	r3, #51	; 0x33
 8001820:	d9fc      	bls.n	800181c <send_cube+0x12d4>
 8001822:	6265      	str	r5, [r4, #36]	; 0x24
 8001824:	2200      	movs	r2, #0
 8001826:	4631      	mov	r1, r6
 8001828:	4638      	mov	r0, r7
 800182a:	f001 fbf5 	bl	8003018 <HAL_GPIO_WritePin>
 800182e:	6265      	str	r5, [r4, #36]	; 0x24
 8001830:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001832:	2b01      	cmp	r3, #1
 8001834:	d9fc      	bls.n	8001830 <send_cube+0x12e8>
 8001836:	6265      	str	r5, [r4, #36]	; 0x24
 8001838:	f818 3c01 	ldrb.w	r3, [r8, #-1]
 800183c:	f013 0a04 	ands.w	sl, r3, #4
 8001840:	f04f 0201 	mov.w	r2, #1
 8001844:	4631      	mov	r1, r6
 8001846:	4638      	mov	r0, r7
 8001848:	f000 80ee 	beq.w	8001a28 <send_cube+0x14e0>
 800184c:	f001 fbe4 	bl	8003018 <HAL_GPIO_WritePin>
 8001850:	6265      	str	r5, [r4, #36]	; 0x24
 8001852:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001854:	2b33      	cmp	r3, #51	; 0x33
 8001856:	d9fc      	bls.n	8001852 <send_cube+0x130a>
 8001858:	6265      	str	r5, [r4, #36]	; 0x24
 800185a:	2200      	movs	r2, #0
 800185c:	4631      	mov	r1, r6
 800185e:	4638      	mov	r0, r7
 8001860:	f001 fbda 	bl	8003018 <HAL_GPIO_WritePin>
 8001864:	6265      	str	r5, [r4, #36]	; 0x24
 8001866:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001868:	2b01      	cmp	r3, #1
 800186a:	d9fc      	bls.n	8001866 <send_cube+0x131e>
 800186c:	6265      	str	r5, [r4, #36]	; 0x24
 800186e:	f818 3c01 	ldrb.w	r3, [r8, #-1]
 8001872:	f013 0a08 	ands.w	sl, r3, #8
 8001876:	f04f 0201 	mov.w	r2, #1
 800187a:	4631      	mov	r1, r6
 800187c:	4638      	mov	r0, r7
 800187e:	f000 80c2 	beq.w	8001a06 <send_cube+0x14be>
 8001882:	f001 fbc9 	bl	8003018 <HAL_GPIO_WritePin>
 8001886:	6265      	str	r5, [r4, #36]	; 0x24
 8001888:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800188a:	2b33      	cmp	r3, #51	; 0x33
 800188c:	d9fc      	bls.n	8001888 <send_cube+0x1340>
 800188e:	6265      	str	r5, [r4, #36]	; 0x24
 8001890:	2200      	movs	r2, #0
 8001892:	4631      	mov	r1, r6
 8001894:	4638      	mov	r0, r7
 8001896:	f001 fbbf 	bl	8003018 <HAL_GPIO_WritePin>
 800189a:	6265      	str	r5, [r4, #36]	; 0x24
 800189c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800189e:	2b01      	cmp	r3, #1
 80018a0:	d9fc      	bls.n	800189c <send_cube+0x1354>
 80018a2:	6265      	str	r5, [r4, #36]	; 0x24
 80018a4:	f818 3c01 	ldrb.w	r3, [r8, #-1]
 80018a8:	f013 0a10 	ands.w	sl, r3, #16
 80018ac:	f04f 0201 	mov.w	r2, #1
 80018b0:	4631      	mov	r1, r6
 80018b2:	4638      	mov	r0, r7
 80018b4:	f000 8096 	beq.w	80019e4 <send_cube+0x149c>
 80018b8:	f001 fbae 	bl	8003018 <HAL_GPIO_WritePin>
 80018bc:	6265      	str	r5, [r4, #36]	; 0x24
 80018be:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80018c0:	2b33      	cmp	r3, #51	; 0x33
 80018c2:	d9fc      	bls.n	80018be <send_cube+0x1376>
 80018c4:	6265      	str	r5, [r4, #36]	; 0x24
 80018c6:	2200      	movs	r2, #0
 80018c8:	4631      	mov	r1, r6
 80018ca:	4638      	mov	r0, r7
 80018cc:	f001 fba4 	bl	8003018 <HAL_GPIO_WritePin>
 80018d0:	6265      	str	r5, [r4, #36]	; 0x24
 80018d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80018d4:	2b01      	cmp	r3, #1
 80018d6:	d9fc      	bls.n	80018d2 <send_cube+0x138a>
 80018d8:	6265      	str	r5, [r4, #36]	; 0x24
 80018da:	f818 3c01 	ldrb.w	r3, [r8, #-1]
 80018de:	f013 0a20 	ands.w	sl, r3, #32
 80018e2:	f04f 0201 	mov.w	r2, #1
 80018e6:	4631      	mov	r1, r6
 80018e8:	4638      	mov	r0, r7
 80018ea:	d06a      	beq.n	80019c2 <send_cube+0x147a>
 80018ec:	f001 fb94 	bl	8003018 <HAL_GPIO_WritePin>
 80018f0:	6265      	str	r5, [r4, #36]	; 0x24
 80018f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80018f4:	2b33      	cmp	r3, #51	; 0x33
 80018f6:	d9fc      	bls.n	80018f2 <send_cube+0x13aa>
 80018f8:	6265      	str	r5, [r4, #36]	; 0x24
 80018fa:	2200      	movs	r2, #0
 80018fc:	4631      	mov	r1, r6
 80018fe:	4638      	mov	r0, r7
 8001900:	f001 fb8a 	bl	8003018 <HAL_GPIO_WritePin>
 8001904:	6265      	str	r5, [r4, #36]	; 0x24
 8001906:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001908:	2b01      	cmp	r3, #1
 800190a:	d9fc      	bls.n	8001906 <send_cube+0x13be>
 800190c:	6265      	str	r5, [r4, #36]	; 0x24
 800190e:	f818 3c01 	ldrb.w	r3, [r8, #-1]
 8001912:	f013 0a40 	ands.w	sl, r3, #64	; 0x40
 8001916:	f04f 0201 	mov.w	r2, #1
 800191a:	4631      	mov	r1, r6
 800191c:	4638      	mov	r0, r7
 800191e:	d03f      	beq.n	80019a0 <send_cube+0x1458>
 8001920:	f001 fb7a 	bl	8003018 <HAL_GPIO_WritePin>
 8001924:	6265      	str	r5, [r4, #36]	; 0x24
 8001926:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001928:	2b33      	cmp	r3, #51	; 0x33
 800192a:	d9fc      	bls.n	8001926 <send_cube+0x13de>
 800192c:	6265      	str	r5, [r4, #36]	; 0x24
 800192e:	2200      	movs	r2, #0
 8001930:	4631      	mov	r1, r6
 8001932:	4638      	mov	r0, r7
 8001934:	f001 fb70 	bl	8003018 <HAL_GPIO_WritePin>
 8001938:	6265      	str	r5, [r4, #36]	; 0x24
 800193a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800193c:	2b01      	cmp	r3, #1
 800193e:	d9fc      	bls.n	800193a <send_cube+0x13f2>
 8001940:	6265      	str	r5, [r4, #36]	; 0x24
 8001942:	f918 3c01 	ldrsb.w	r3, [r8, #-1]
 8001946:	2b00      	cmp	r3, #0
 8001948:	f04f 0201 	mov.w	r2, #1
 800194c:	4631      	mov	r1, r6
 800194e:	4638      	mov	r0, r7
 8001950:	f2c0 8644 	blt.w	80025dc <send_cube+0x2094>
 8001954:	f001 fb60 	bl	8003018 <HAL_GPIO_WritePin>
 8001958:	6265      	str	r5, [r4, #36]	; 0x24
 800195a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800195c:	2b01      	cmp	r3, #1
 800195e:	d9fc      	bls.n	800195a <send_cube+0x1412>
 8001960:	2200      	movs	r2, #0
 8001962:	4631      	mov	r1, r6
 8001964:	4638      	mov	r0, r7
 8001966:	f001 fb57 	bl	8003018 <HAL_GPIO_WritePin>
 800196a:	6265      	str	r5, [r4, #36]	; 0x24
 800196c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800196e:	2b33      	cmp	r3, #51	; 0x33
 8001970:	d9fc      	bls.n	800196c <send_cube+0x1424>

	  HAL_GPIO_WritePin(GPIOA, pin, GPIO_PIN_RESET);
 8001972:	4631      	mov	r1, r6
	  LOH();LOH();LOH();
 8001974:	6265      	str	r5, [r4, #36]	; 0x24
	  HAL_GPIO_WritePin(GPIOA, pin, GPIO_PIN_RESET);
 8001976:	2200      	movs	r2, #0
 8001978:	4638      	mov	r0, r7
  for (pin = GPIO_PIN_0; pin < GPIO_PIN_7; pin *= 2) {
 800197a:	f108 080c 	add.w	r8, r8, #12
	  HAL_GPIO_WritePin(GPIOA, pin, GPIO_PIN_RESET);
 800197e:	f001 fb4b 	bl	8003018 <HAL_GPIO_WritePin>
  for (pin = GPIO_PIN_0; pin < GPIO_PIN_7; pin *= 2) {
 8001982:	0076      	lsls	r6, r6, #1
 8001984:	45c1      	cmp	r9, r8
 8001986:	b2b6      	uxth	r6, r6
 8001988:	f47e ade8 	bne.w	800055c <send_cube+0x14>

  }
  TIM1->CNT= 0;
 800198c:	4aa6      	ldr	r2, [pc, #664]	; (8001c28 <send_cube+0x16e0>)
 800198e:	2300      	movs	r3, #0
 8001990:	6253      	str	r3, [r2, #36]	; 0x24
  while(TIM1->CNT < 0xfff0) {};
 8001992:	f64f 71ef 	movw	r1, #65519	; 0xffef
 8001996:	6a53      	ldr	r3, [r2, #36]	; 0x24
 8001998:	428b      	cmp	r3, r1
 800199a:	d9fc      	bls.n	8001996 <send_cube+0x144e>
//      }
//    }
//    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, GPIO_PIN_RESET);
//    TIM1->CNT= 0;
//    while(TIM1->CNT < 0xff00) {};
}
 800199c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	  LOH();LOH();LOH();
 80019a0:	f001 fb3a 	bl	8003018 <HAL_GPIO_WritePin>
 80019a4:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80019a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80019aa:	2b01      	cmp	r3, #1
 80019ac:	d9fc      	bls.n	80019a8 <send_cube+0x1460>
 80019ae:	2200      	movs	r2, #0
 80019b0:	4631      	mov	r1, r6
 80019b2:	4638      	mov	r0, r7
 80019b4:	f001 fb30 	bl	8003018 <HAL_GPIO_WritePin>
 80019b8:	6265      	str	r5, [r4, #36]	; 0x24
 80019ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80019bc:	2b33      	cmp	r3, #51	; 0x33
 80019be:	d9fc      	bls.n	80019ba <send_cube+0x1472>
 80019c0:	e7be      	b.n	8001940 <send_cube+0x13f8>
 80019c2:	f001 fb29 	bl	8003018 <HAL_GPIO_WritePin>
 80019c6:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80019ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80019cc:	2b01      	cmp	r3, #1
 80019ce:	d9fc      	bls.n	80019ca <send_cube+0x1482>
 80019d0:	2200      	movs	r2, #0
 80019d2:	4631      	mov	r1, r6
 80019d4:	4638      	mov	r0, r7
 80019d6:	f001 fb1f 	bl	8003018 <HAL_GPIO_WritePin>
 80019da:	6265      	str	r5, [r4, #36]	; 0x24
 80019dc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80019de:	2b33      	cmp	r3, #51	; 0x33
 80019e0:	d9fc      	bls.n	80019dc <send_cube+0x1494>
 80019e2:	e793      	b.n	800190c <send_cube+0x13c4>
 80019e4:	f001 fb18 	bl	8003018 <HAL_GPIO_WritePin>
 80019e8:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80019ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80019ee:	2b01      	cmp	r3, #1
 80019f0:	d9fc      	bls.n	80019ec <send_cube+0x14a4>
 80019f2:	2200      	movs	r2, #0
 80019f4:	4631      	mov	r1, r6
 80019f6:	4638      	mov	r0, r7
 80019f8:	f001 fb0e 	bl	8003018 <HAL_GPIO_WritePin>
 80019fc:	6265      	str	r5, [r4, #36]	; 0x24
 80019fe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001a00:	2b33      	cmp	r3, #51	; 0x33
 8001a02:	d9fc      	bls.n	80019fe <send_cube+0x14b6>
 8001a04:	e768      	b.n	80018d8 <send_cube+0x1390>
 8001a06:	f001 fb07 	bl	8003018 <HAL_GPIO_WritePin>
 8001a0a:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001a0e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001a10:	2b01      	cmp	r3, #1
 8001a12:	d9fc      	bls.n	8001a0e <send_cube+0x14c6>
 8001a14:	2200      	movs	r2, #0
 8001a16:	4631      	mov	r1, r6
 8001a18:	4638      	mov	r0, r7
 8001a1a:	f001 fafd 	bl	8003018 <HAL_GPIO_WritePin>
 8001a1e:	6265      	str	r5, [r4, #36]	; 0x24
 8001a20:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001a22:	2b33      	cmp	r3, #51	; 0x33
 8001a24:	d9fc      	bls.n	8001a20 <send_cube+0x14d8>
 8001a26:	e73c      	b.n	80018a2 <send_cube+0x135a>
 8001a28:	f001 faf6 	bl	8003018 <HAL_GPIO_WritePin>
 8001a2c:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001a30:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001a32:	2b01      	cmp	r3, #1
 8001a34:	d9fc      	bls.n	8001a30 <send_cube+0x14e8>
 8001a36:	2200      	movs	r2, #0
 8001a38:	4631      	mov	r1, r6
 8001a3a:	4638      	mov	r0, r7
 8001a3c:	f001 faec 	bl	8003018 <HAL_GPIO_WritePin>
 8001a40:	6265      	str	r5, [r4, #36]	; 0x24
 8001a42:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001a44:	2b33      	cmp	r3, #51	; 0x33
 8001a46:	d9fc      	bls.n	8001a42 <send_cube+0x14fa>
 8001a48:	e710      	b.n	800186c <send_cube+0x1324>
 8001a4a:	f001 fae5 	bl	8003018 <HAL_GPIO_WritePin>
 8001a4e:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001a52:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001a54:	2b01      	cmp	r3, #1
 8001a56:	d9fc      	bls.n	8001a52 <send_cube+0x150a>
 8001a58:	2200      	movs	r2, #0
 8001a5a:	4631      	mov	r1, r6
 8001a5c:	4638      	mov	r0, r7
 8001a5e:	f001 fadb 	bl	8003018 <HAL_GPIO_WritePin>
 8001a62:	6265      	str	r5, [r4, #36]	; 0x24
 8001a64:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001a66:	2b33      	cmp	r3, #51	; 0x33
 8001a68:	d9fc      	bls.n	8001a64 <send_cube+0x151c>
 8001a6a:	e6e4      	b.n	8001836 <send_cube+0x12ee>
 8001a6c:	f001 fad4 	bl	8003018 <HAL_GPIO_WritePin>
 8001a70:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001a74:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001a76:	2b01      	cmp	r3, #1
 8001a78:	d9fc      	bls.n	8001a74 <send_cube+0x152c>
 8001a7a:	2200      	movs	r2, #0
 8001a7c:	4631      	mov	r1, r6
 8001a7e:	4638      	mov	r0, r7
 8001a80:	f001 faca 	bl	8003018 <HAL_GPIO_WritePin>
 8001a84:	6265      	str	r5, [r4, #36]	; 0x24
 8001a86:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001a88:	2b33      	cmp	r3, #51	; 0x33
 8001a8a:	d9fc      	bls.n	8001a86 <send_cube+0x153e>
 8001a8c:	e6b8      	b.n	8001800 <send_cube+0x12b8>
 8001a8e:	f001 fac3 	bl	8003018 <HAL_GPIO_WritePin>
 8001a92:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001a96:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001a98:	2b01      	cmp	r3, #1
 8001a9a:	d9fc      	bls.n	8001a96 <send_cube+0x154e>
 8001a9c:	2200      	movs	r2, #0
 8001a9e:	4631      	mov	r1, r6
 8001aa0:	4638      	mov	r0, r7
 8001aa2:	f001 fab9 	bl	8003018 <HAL_GPIO_WritePin>
 8001aa6:	6265      	str	r5, [r4, #36]	; 0x24
 8001aa8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001aaa:	2b33      	cmp	r3, #51	; 0x33
 8001aac:	d9fc      	bls.n	8001aa8 <send_cube+0x1560>
 8001aae:	e673      	b.n	8001798 <send_cube+0x1250>
 8001ab0:	f001 fab2 	bl	8003018 <HAL_GPIO_WritePin>
 8001ab4:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001ab8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001aba:	2b01      	cmp	r3, #1
 8001abc:	d9fc      	bls.n	8001ab8 <send_cube+0x1570>
 8001abe:	2200      	movs	r2, #0
 8001ac0:	4631      	mov	r1, r6
 8001ac2:	4638      	mov	r0, r7
 8001ac4:	f001 faa8 	bl	8003018 <HAL_GPIO_WritePin>
 8001ac8:	6265      	str	r5, [r4, #36]	; 0x24
 8001aca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001acc:	2b33      	cmp	r3, #51	; 0x33
 8001ace:	d9fc      	bls.n	8001aca <send_cube+0x1582>
 8001ad0:	e647      	b.n	8001762 <send_cube+0x121a>
 8001ad2:	f001 faa1 	bl	8003018 <HAL_GPIO_WritePin>
 8001ad6:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001ada:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001adc:	2b01      	cmp	r3, #1
 8001ade:	d9fc      	bls.n	8001ada <send_cube+0x1592>
 8001ae0:	2200      	movs	r2, #0
 8001ae2:	4631      	mov	r1, r6
 8001ae4:	4638      	mov	r0, r7
 8001ae6:	f001 fa97 	bl	8003018 <HAL_GPIO_WritePin>
 8001aea:	6265      	str	r5, [r4, #36]	; 0x24
 8001aec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001aee:	2b33      	cmp	r3, #51	; 0x33
 8001af0:	d9fc      	bls.n	8001aec <send_cube+0x15a4>
 8001af2:	e61b      	b.n	800172c <send_cube+0x11e4>
 8001af4:	f001 fa90 	bl	8003018 <HAL_GPIO_WritePin>
 8001af8:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001afc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001afe:	2b01      	cmp	r3, #1
 8001b00:	d9fc      	bls.n	8001afc <send_cube+0x15b4>
 8001b02:	2200      	movs	r2, #0
 8001b04:	4631      	mov	r1, r6
 8001b06:	4638      	mov	r0, r7
 8001b08:	f001 fa86 	bl	8003018 <HAL_GPIO_WritePin>
 8001b0c:	6265      	str	r5, [r4, #36]	; 0x24
 8001b0e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001b10:	2b33      	cmp	r3, #51	; 0x33
 8001b12:	d9fc      	bls.n	8001b0e <send_cube+0x15c6>
 8001b14:	e5ef      	b.n	80016f6 <send_cube+0x11ae>
 8001b16:	f001 fa7f 	bl	8003018 <HAL_GPIO_WritePin>
 8001b1a:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001b1e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001b20:	2b01      	cmp	r3, #1
 8001b22:	d9fc      	bls.n	8001b1e <send_cube+0x15d6>
 8001b24:	2200      	movs	r2, #0
 8001b26:	4631      	mov	r1, r6
 8001b28:	4638      	mov	r0, r7
 8001b2a:	f001 fa75 	bl	8003018 <HAL_GPIO_WritePin>
 8001b2e:	6265      	str	r5, [r4, #36]	; 0x24
 8001b30:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001b32:	2b33      	cmp	r3, #51	; 0x33
 8001b34:	d9fc      	bls.n	8001b30 <send_cube+0x15e8>
 8001b36:	e5c3      	b.n	80016c0 <send_cube+0x1178>
 8001b38:	f001 fa6e 	bl	8003018 <HAL_GPIO_WritePin>
 8001b3c:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001b40:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001b42:	2b01      	cmp	r3, #1
 8001b44:	d9fc      	bls.n	8001b40 <send_cube+0x15f8>
 8001b46:	2200      	movs	r2, #0
 8001b48:	4631      	mov	r1, r6
 8001b4a:	4638      	mov	r0, r7
 8001b4c:	f001 fa64 	bl	8003018 <HAL_GPIO_WritePin>
 8001b50:	6265      	str	r5, [r4, #36]	; 0x24
 8001b52:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001b54:	2b33      	cmp	r3, #51	; 0x33
 8001b56:	d9fc      	bls.n	8001b52 <send_cube+0x160a>
 8001b58:	e597      	b.n	800168a <send_cube+0x1142>
 8001b5a:	f001 fa5d 	bl	8003018 <HAL_GPIO_WritePin>
 8001b5e:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001b62:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001b64:	2b01      	cmp	r3, #1
 8001b66:	d9fc      	bls.n	8001b62 <send_cube+0x161a>
 8001b68:	2200      	movs	r2, #0
 8001b6a:	4631      	mov	r1, r6
 8001b6c:	4638      	mov	r0, r7
 8001b6e:	f001 fa53 	bl	8003018 <HAL_GPIO_WritePin>
 8001b72:	6265      	str	r5, [r4, #36]	; 0x24
 8001b74:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001b76:	2b33      	cmp	r3, #51	; 0x33
 8001b78:	d9fc      	bls.n	8001b74 <send_cube+0x162c>
 8001b7a:	e56b      	b.n	8001654 <send_cube+0x110c>
 8001b7c:	f001 fa4c 	bl	8003018 <HAL_GPIO_WritePin>
 8001b80:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001b84:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001b86:	2b01      	cmp	r3, #1
 8001b88:	d9fc      	bls.n	8001b84 <send_cube+0x163c>
 8001b8a:	2200      	movs	r2, #0
 8001b8c:	4631      	mov	r1, r6
 8001b8e:	4638      	mov	r0, r7
 8001b90:	f001 fa42 	bl	8003018 <HAL_GPIO_WritePin>
 8001b94:	6265      	str	r5, [r4, #36]	; 0x24
 8001b96:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001b98:	2b33      	cmp	r3, #51	; 0x33
 8001b9a:	d9fc      	bls.n	8001b96 <send_cube+0x164e>
 8001b9c:	e526      	b.n	80015ec <send_cube+0x10a4>
 8001b9e:	f001 fa3b 	bl	8003018 <HAL_GPIO_WritePin>
 8001ba2:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001ba6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001ba8:	2b01      	cmp	r3, #1
 8001baa:	d9fc      	bls.n	8001ba6 <send_cube+0x165e>
 8001bac:	2200      	movs	r2, #0
 8001bae:	4631      	mov	r1, r6
 8001bb0:	4638      	mov	r0, r7
 8001bb2:	f001 fa31 	bl	8003018 <HAL_GPIO_WritePin>
 8001bb6:	6265      	str	r5, [r4, #36]	; 0x24
 8001bb8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001bba:	2b33      	cmp	r3, #51	; 0x33
 8001bbc:	d9fc      	bls.n	8001bb8 <send_cube+0x1670>
 8001bbe:	e4fa      	b.n	80015b6 <send_cube+0x106e>
 8001bc0:	f001 fa2a 	bl	8003018 <HAL_GPIO_WritePin>
 8001bc4:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001bc8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001bca:	2b01      	cmp	r3, #1
 8001bcc:	d9fc      	bls.n	8001bc8 <send_cube+0x1680>
 8001bce:	2200      	movs	r2, #0
 8001bd0:	4631      	mov	r1, r6
 8001bd2:	4638      	mov	r0, r7
 8001bd4:	f001 fa20 	bl	8003018 <HAL_GPIO_WritePin>
 8001bd8:	6265      	str	r5, [r4, #36]	; 0x24
 8001bda:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001bdc:	2b33      	cmp	r3, #51	; 0x33
 8001bde:	d9fc      	bls.n	8001bda <send_cube+0x1692>
 8001be0:	e4ce      	b.n	8001580 <send_cube+0x1038>
 8001be2:	f001 fa19 	bl	8003018 <HAL_GPIO_WritePin>
 8001be6:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001bea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001bec:	2b01      	cmp	r3, #1
 8001bee:	d9fc      	bls.n	8001bea <send_cube+0x16a2>
 8001bf0:	2200      	movs	r2, #0
 8001bf2:	4631      	mov	r1, r6
 8001bf4:	4638      	mov	r0, r7
 8001bf6:	f001 fa0f 	bl	8003018 <HAL_GPIO_WritePin>
 8001bfa:	6265      	str	r5, [r4, #36]	; 0x24
 8001bfc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001bfe:	2b33      	cmp	r3, #51	; 0x33
 8001c00:	d9fc      	bls.n	8001bfc <send_cube+0x16b4>
 8001c02:	e4a2      	b.n	800154a <send_cube+0x1002>
 8001c04:	f001 fa08 	bl	8003018 <HAL_GPIO_WritePin>
 8001c08:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001c0c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001c0e:	2b01      	cmp	r3, #1
 8001c10:	d9fc      	bls.n	8001c0c <send_cube+0x16c4>
 8001c12:	2200      	movs	r2, #0
 8001c14:	4631      	mov	r1, r6
 8001c16:	4638      	mov	r0, r7
 8001c18:	f001 f9fe 	bl	8003018 <HAL_GPIO_WritePin>
 8001c1c:	6265      	str	r5, [r4, #36]	; 0x24
 8001c1e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001c20:	2b33      	cmp	r3, #51	; 0x33
 8001c22:	d9fc      	bls.n	8001c1e <send_cube+0x16d6>
 8001c24:	e476      	b.n	8001514 <send_cube+0xfcc>
 8001c26:	bf00      	nop
 8001c28:	40010000 	.word	0x40010000
 8001c2c:	f001 f9f4 	bl	8003018 <HAL_GPIO_WritePin>
 8001c30:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001c34:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001c36:	2b01      	cmp	r3, #1
 8001c38:	d9fc      	bls.n	8001c34 <send_cube+0x16ec>
 8001c3a:	2200      	movs	r2, #0
 8001c3c:	4631      	mov	r1, r6
 8001c3e:	4638      	mov	r0, r7
 8001c40:	f001 f9ea 	bl	8003018 <HAL_GPIO_WritePin>
 8001c44:	6265      	str	r5, [r4, #36]	; 0x24
 8001c46:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001c48:	2b33      	cmp	r3, #51	; 0x33
 8001c4a:	d9fc      	bls.n	8001c46 <send_cube+0x16fe>
 8001c4c:	e447      	b.n	80014de <send_cube+0xf96>
 8001c4e:	f001 f9e3 	bl	8003018 <HAL_GPIO_WritePin>
 8001c52:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001c56:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001c58:	2b01      	cmp	r3, #1
 8001c5a:	d9fc      	bls.n	8001c56 <send_cube+0x170e>
 8001c5c:	2200      	movs	r2, #0
 8001c5e:	4631      	mov	r1, r6
 8001c60:	4638      	mov	r0, r7
 8001c62:	f001 f9d9 	bl	8003018 <HAL_GPIO_WritePin>
 8001c66:	6265      	str	r5, [r4, #36]	; 0x24
 8001c68:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001c6a:	2b33      	cmp	r3, #51	; 0x33
 8001c6c:	d9fc      	bls.n	8001c68 <send_cube+0x1720>
 8001c6e:	e41b      	b.n	80014a8 <send_cube+0xf60>
	  LOH();LOH();LOH();
 8001c70:	f001 f9d2 	bl	8003018 <HAL_GPIO_WritePin>
 8001c74:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001c78:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001c7a:	2b01      	cmp	r3, #1
 8001c7c:	d9fc      	bls.n	8001c78 <send_cube+0x1730>
 8001c7e:	2200      	movs	r2, #0
 8001c80:	4631      	mov	r1, r6
 8001c82:	4638      	mov	r0, r7
 8001c84:	f001 f9c8 	bl	8003018 <HAL_GPIO_WritePin>
 8001c88:	6265      	str	r5, [r4, #36]	; 0x24
 8001c8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001c8c:	2b33      	cmp	r3, #51	; 0x33
 8001c8e:	d9fc      	bls.n	8001c8a <send_cube+0x1742>
 8001c90:	f7ff bbd6 	b.w	8001440 <send_cube+0xef8>
 8001c94:	f001 f9c0 	bl	8003018 <HAL_GPIO_WritePin>
 8001c98:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001c9c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001c9e:	2b01      	cmp	r3, #1
 8001ca0:	d9fc      	bls.n	8001c9c <send_cube+0x1754>
 8001ca2:	2200      	movs	r2, #0
 8001ca4:	4631      	mov	r1, r6
 8001ca6:	4638      	mov	r0, r7
 8001ca8:	f001 f9b6 	bl	8003018 <HAL_GPIO_WritePin>
 8001cac:	6265      	str	r5, [r4, #36]	; 0x24
 8001cae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001cb0:	2b33      	cmp	r3, #51	; 0x33
 8001cb2:	d9fc      	bls.n	8001cae <send_cube+0x1766>
 8001cb4:	f7ff bba9 	b.w	800140a <send_cube+0xec2>
 8001cb8:	f001 f9ae 	bl	8003018 <HAL_GPIO_WritePin>
 8001cbc:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001cc0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001cc2:	2b01      	cmp	r3, #1
 8001cc4:	d9fc      	bls.n	8001cc0 <send_cube+0x1778>
 8001cc6:	2200      	movs	r2, #0
 8001cc8:	4631      	mov	r1, r6
 8001cca:	4638      	mov	r0, r7
 8001ccc:	f001 f9a4 	bl	8003018 <HAL_GPIO_WritePin>
 8001cd0:	6265      	str	r5, [r4, #36]	; 0x24
 8001cd2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001cd4:	2b33      	cmp	r3, #51	; 0x33
 8001cd6:	d9fc      	bls.n	8001cd2 <send_cube+0x178a>
 8001cd8:	f7ff bb7c 	b.w	80013d4 <send_cube+0xe8c>
 8001cdc:	f001 f99c 	bl	8003018 <HAL_GPIO_WritePin>
 8001ce0:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001ce4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001ce6:	2b01      	cmp	r3, #1
 8001ce8:	d9fc      	bls.n	8001ce4 <send_cube+0x179c>
 8001cea:	2200      	movs	r2, #0
 8001cec:	4631      	mov	r1, r6
 8001cee:	4638      	mov	r0, r7
 8001cf0:	f001 f992 	bl	8003018 <HAL_GPIO_WritePin>
 8001cf4:	6265      	str	r5, [r4, #36]	; 0x24
 8001cf6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001cf8:	2b33      	cmp	r3, #51	; 0x33
 8001cfa:	d9fc      	bls.n	8001cf6 <send_cube+0x17ae>
 8001cfc:	f7ff bb4f 	b.w	800139e <send_cube+0xe56>
 8001d00:	f001 f98a 	bl	8003018 <HAL_GPIO_WritePin>
 8001d04:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001d08:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001d0a:	2b01      	cmp	r3, #1
 8001d0c:	d9fc      	bls.n	8001d08 <send_cube+0x17c0>
 8001d0e:	2200      	movs	r2, #0
 8001d10:	4631      	mov	r1, r6
 8001d12:	4638      	mov	r0, r7
 8001d14:	f001 f980 	bl	8003018 <HAL_GPIO_WritePin>
 8001d18:	6265      	str	r5, [r4, #36]	; 0x24
 8001d1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001d1c:	2b33      	cmp	r3, #51	; 0x33
 8001d1e:	d9fc      	bls.n	8001d1a <send_cube+0x17d2>
 8001d20:	f7ff bb22 	b.w	8001368 <send_cube+0xe20>
 8001d24:	f001 f978 	bl	8003018 <HAL_GPIO_WritePin>
 8001d28:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001d2c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001d2e:	2b01      	cmp	r3, #1
 8001d30:	d9fc      	bls.n	8001d2c <send_cube+0x17e4>
 8001d32:	2200      	movs	r2, #0
 8001d34:	4631      	mov	r1, r6
 8001d36:	4638      	mov	r0, r7
 8001d38:	f001 f96e 	bl	8003018 <HAL_GPIO_WritePin>
 8001d3c:	6265      	str	r5, [r4, #36]	; 0x24
 8001d3e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001d40:	2b33      	cmp	r3, #51	; 0x33
 8001d42:	d9fc      	bls.n	8001d3e <send_cube+0x17f6>
 8001d44:	f7ff baf5 	b.w	8001332 <send_cube+0xdea>
 8001d48:	f001 f966 	bl	8003018 <HAL_GPIO_WritePin>
 8001d4c:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001d50:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001d52:	2b01      	cmp	r3, #1
 8001d54:	d9fc      	bls.n	8001d50 <send_cube+0x1808>
 8001d56:	2200      	movs	r2, #0
 8001d58:	4631      	mov	r1, r6
 8001d5a:	4638      	mov	r0, r7
 8001d5c:	f001 f95c 	bl	8003018 <HAL_GPIO_WritePin>
 8001d60:	6265      	str	r5, [r4, #36]	; 0x24
 8001d62:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001d64:	2b33      	cmp	r3, #51	; 0x33
 8001d66:	d9fc      	bls.n	8001d62 <send_cube+0x181a>
 8001d68:	f7ff bac8 	b.w	80012fc <send_cube+0xdb4>
 8001d6c:	f001 f954 	bl	8003018 <HAL_GPIO_WritePin>
 8001d70:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001d74:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001d76:	2b01      	cmp	r3, #1
 8001d78:	d9fc      	bls.n	8001d74 <send_cube+0x182c>
 8001d7a:	2200      	movs	r2, #0
 8001d7c:	4631      	mov	r1, r6
 8001d7e:	4638      	mov	r0, r7
 8001d80:	f001 f94a 	bl	8003018 <HAL_GPIO_WritePin>
 8001d84:	6265      	str	r5, [r4, #36]	; 0x24
 8001d86:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001d88:	2b33      	cmp	r3, #51	; 0x33
 8001d8a:	d9fc      	bls.n	8001d86 <send_cube+0x183e>
 8001d8c:	f7ff ba82 	b.w	8001294 <send_cube+0xd4c>
 8001d90:	f001 f942 	bl	8003018 <HAL_GPIO_WritePin>
 8001d94:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001d98:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001d9a:	2b01      	cmp	r3, #1
 8001d9c:	d9fc      	bls.n	8001d98 <send_cube+0x1850>
 8001d9e:	2200      	movs	r2, #0
 8001da0:	4631      	mov	r1, r6
 8001da2:	4638      	mov	r0, r7
 8001da4:	f001 f938 	bl	8003018 <HAL_GPIO_WritePin>
 8001da8:	6265      	str	r5, [r4, #36]	; 0x24
 8001daa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001dac:	2b33      	cmp	r3, #51	; 0x33
 8001dae:	d9fc      	bls.n	8001daa <send_cube+0x1862>
 8001db0:	f7ff ba55 	b.w	800125e <send_cube+0xd16>
 8001db4:	f001 f930 	bl	8003018 <HAL_GPIO_WritePin>
 8001db8:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001dbc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001dbe:	2b01      	cmp	r3, #1
 8001dc0:	d9fc      	bls.n	8001dbc <send_cube+0x1874>
 8001dc2:	2200      	movs	r2, #0
 8001dc4:	4631      	mov	r1, r6
 8001dc6:	4638      	mov	r0, r7
 8001dc8:	f001 f926 	bl	8003018 <HAL_GPIO_WritePin>
 8001dcc:	6265      	str	r5, [r4, #36]	; 0x24
 8001dce:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001dd0:	2b33      	cmp	r3, #51	; 0x33
 8001dd2:	d9fc      	bls.n	8001dce <send_cube+0x1886>
 8001dd4:	f7ff ba28 	b.w	8001228 <send_cube+0xce0>
 8001dd8:	f001 f91e 	bl	8003018 <HAL_GPIO_WritePin>
 8001ddc:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001de0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001de2:	2b01      	cmp	r3, #1
 8001de4:	d9fc      	bls.n	8001de0 <send_cube+0x1898>
 8001de6:	2200      	movs	r2, #0
 8001de8:	4631      	mov	r1, r6
 8001dea:	4638      	mov	r0, r7
 8001dec:	f001 f914 	bl	8003018 <HAL_GPIO_WritePin>
 8001df0:	6265      	str	r5, [r4, #36]	; 0x24
 8001df2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001df4:	2b33      	cmp	r3, #51	; 0x33
 8001df6:	d9fc      	bls.n	8001df2 <send_cube+0x18aa>
 8001df8:	f7ff b9fb 	b.w	80011f2 <send_cube+0xcaa>
 8001dfc:	f001 f90c 	bl	8003018 <HAL_GPIO_WritePin>
 8001e00:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001e04:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001e06:	2b01      	cmp	r3, #1
 8001e08:	d9fc      	bls.n	8001e04 <send_cube+0x18bc>
 8001e0a:	2200      	movs	r2, #0
 8001e0c:	4631      	mov	r1, r6
 8001e0e:	4638      	mov	r0, r7
 8001e10:	f001 f902 	bl	8003018 <HAL_GPIO_WritePin>
 8001e14:	6265      	str	r5, [r4, #36]	; 0x24
 8001e16:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001e18:	2b33      	cmp	r3, #51	; 0x33
 8001e1a:	d9fc      	bls.n	8001e16 <send_cube+0x18ce>
 8001e1c:	f7ff b9ce 	b.w	80011bc <send_cube+0xc74>
 8001e20:	f001 f8fa 	bl	8003018 <HAL_GPIO_WritePin>
 8001e24:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001e28:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001e2a:	2b01      	cmp	r3, #1
 8001e2c:	d9fc      	bls.n	8001e28 <send_cube+0x18e0>
 8001e2e:	2200      	movs	r2, #0
 8001e30:	4631      	mov	r1, r6
 8001e32:	4638      	mov	r0, r7
 8001e34:	f001 f8f0 	bl	8003018 <HAL_GPIO_WritePin>
 8001e38:	6265      	str	r5, [r4, #36]	; 0x24
 8001e3a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001e3c:	2b33      	cmp	r3, #51	; 0x33
 8001e3e:	d9fc      	bls.n	8001e3a <send_cube+0x18f2>
 8001e40:	f7ff b9a1 	b.w	8001186 <send_cube+0xc3e>
 8001e44:	f001 f8e8 	bl	8003018 <HAL_GPIO_WritePin>
 8001e48:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001e4c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001e4e:	2b01      	cmp	r3, #1
 8001e50:	d9fc      	bls.n	8001e4c <send_cube+0x1904>
 8001e52:	2200      	movs	r2, #0
 8001e54:	4631      	mov	r1, r6
 8001e56:	4638      	mov	r0, r7
 8001e58:	f001 f8de 	bl	8003018 <HAL_GPIO_WritePin>
 8001e5c:	6265      	str	r5, [r4, #36]	; 0x24
 8001e5e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001e60:	2b33      	cmp	r3, #51	; 0x33
 8001e62:	d9fc      	bls.n	8001e5e <send_cube+0x1916>
 8001e64:	f7ff b974 	b.w	8001150 <send_cube+0xc08>
 8001e68:	f001 f8d6 	bl	8003018 <HAL_GPIO_WritePin>
 8001e6c:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001e70:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001e72:	2b01      	cmp	r3, #1
 8001e74:	d9fc      	bls.n	8001e70 <send_cube+0x1928>
 8001e76:	2200      	movs	r2, #0
 8001e78:	4631      	mov	r1, r6
 8001e7a:	4638      	mov	r0, r7
 8001e7c:	f001 f8cc 	bl	8003018 <HAL_GPIO_WritePin>
 8001e80:	6265      	str	r5, [r4, #36]	; 0x24
 8001e82:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001e84:	2b33      	cmp	r3, #51	; 0x33
 8001e86:	d9fc      	bls.n	8001e82 <send_cube+0x193a>
 8001e88:	f7ff b92e 	b.w	80010e8 <send_cube+0xba0>
 8001e8c:	f001 f8c4 	bl	8003018 <HAL_GPIO_WritePin>
 8001e90:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001e94:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001e96:	2b01      	cmp	r3, #1
 8001e98:	d9fc      	bls.n	8001e94 <send_cube+0x194c>
 8001e9a:	2200      	movs	r2, #0
 8001e9c:	4631      	mov	r1, r6
 8001e9e:	4638      	mov	r0, r7
 8001ea0:	f001 f8ba 	bl	8003018 <HAL_GPIO_WritePin>
 8001ea4:	6265      	str	r5, [r4, #36]	; 0x24
 8001ea6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001ea8:	2b33      	cmp	r3, #51	; 0x33
 8001eaa:	d9fc      	bls.n	8001ea6 <send_cube+0x195e>
 8001eac:	f7ff b901 	b.w	80010b2 <send_cube+0xb6a>
 8001eb0:	f001 f8b2 	bl	8003018 <HAL_GPIO_WritePin>
 8001eb4:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001eb8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001eba:	2b01      	cmp	r3, #1
 8001ebc:	d9fc      	bls.n	8001eb8 <send_cube+0x1970>
 8001ebe:	2200      	movs	r2, #0
 8001ec0:	4631      	mov	r1, r6
 8001ec2:	4638      	mov	r0, r7
 8001ec4:	f001 f8a8 	bl	8003018 <HAL_GPIO_WritePin>
 8001ec8:	6265      	str	r5, [r4, #36]	; 0x24
 8001eca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001ecc:	2b33      	cmp	r3, #51	; 0x33
 8001ece:	d9fc      	bls.n	8001eca <send_cube+0x1982>
 8001ed0:	f7ff b8d4 	b.w	800107c <send_cube+0xb34>
 8001ed4:	f001 f8a0 	bl	8003018 <HAL_GPIO_WritePin>
 8001ed8:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001edc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001ede:	2b01      	cmp	r3, #1
 8001ee0:	d9fc      	bls.n	8001edc <send_cube+0x1994>
 8001ee2:	2200      	movs	r2, #0
 8001ee4:	4631      	mov	r1, r6
 8001ee6:	4638      	mov	r0, r7
 8001ee8:	f001 f896 	bl	8003018 <HAL_GPIO_WritePin>
 8001eec:	6265      	str	r5, [r4, #36]	; 0x24
 8001eee:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001ef0:	2b33      	cmp	r3, #51	; 0x33
 8001ef2:	d9fc      	bls.n	8001eee <send_cube+0x19a6>
 8001ef4:	f7ff b8a7 	b.w	8001046 <send_cube+0xafe>
 8001ef8:	f001 f88e 	bl	8003018 <HAL_GPIO_WritePin>
 8001efc:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001f00:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001f02:	2b01      	cmp	r3, #1
 8001f04:	d9fc      	bls.n	8001f00 <send_cube+0x19b8>
 8001f06:	2200      	movs	r2, #0
 8001f08:	4631      	mov	r1, r6
 8001f0a:	4638      	mov	r0, r7
 8001f0c:	f001 f884 	bl	8003018 <HAL_GPIO_WritePin>
 8001f10:	6265      	str	r5, [r4, #36]	; 0x24
 8001f12:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001f14:	2b33      	cmp	r3, #51	; 0x33
 8001f16:	d9fc      	bls.n	8001f12 <send_cube+0x19ca>
 8001f18:	f7ff b87a 	b.w	8001010 <send_cube+0xac8>
 8001f1c:	f001 f87c 	bl	8003018 <HAL_GPIO_WritePin>
 8001f20:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001f24:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001f26:	2b01      	cmp	r3, #1
 8001f28:	d9fc      	bls.n	8001f24 <send_cube+0x19dc>
 8001f2a:	2200      	movs	r2, #0
 8001f2c:	4631      	mov	r1, r6
 8001f2e:	4638      	mov	r0, r7
 8001f30:	f001 f872 	bl	8003018 <HAL_GPIO_WritePin>
 8001f34:	6265      	str	r5, [r4, #36]	; 0x24
 8001f36:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001f38:	2b33      	cmp	r3, #51	; 0x33
 8001f3a:	d9fc      	bls.n	8001f36 <send_cube+0x19ee>
 8001f3c:	f7ff b84d 	b.w	8000fda <send_cube+0xa92>
 8001f40:	f001 f86a 	bl	8003018 <HAL_GPIO_WritePin>
 8001f44:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001f48:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001f4a:	2b01      	cmp	r3, #1
 8001f4c:	d9fc      	bls.n	8001f48 <send_cube+0x1a00>
 8001f4e:	2200      	movs	r2, #0
 8001f50:	4631      	mov	r1, r6
 8001f52:	4638      	mov	r0, r7
 8001f54:	f001 f860 	bl	8003018 <HAL_GPIO_WritePin>
 8001f58:	6265      	str	r5, [r4, #36]	; 0x24
 8001f5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001f5c:	2b33      	cmp	r3, #51	; 0x33
 8001f5e:	d9fc      	bls.n	8001f5a <send_cube+0x1a12>
 8001f60:	f7ff b820 	b.w	8000fa4 <send_cube+0xa5c>
	  LOH();LOH();LOH();
 8001f64:	f001 f858 	bl	8003018 <HAL_GPIO_WritePin>
 8001f68:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001f6c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001f6e:	2b01      	cmp	r3, #1
 8001f70:	d9fc      	bls.n	8001f6c <send_cube+0x1a24>
 8001f72:	2200      	movs	r2, #0
 8001f74:	4631      	mov	r1, r6
 8001f76:	4638      	mov	r0, r7
 8001f78:	f001 f84e 	bl	8003018 <HAL_GPIO_WritePin>
 8001f7c:	6265      	str	r5, [r4, #36]	; 0x24
 8001f7e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001f80:	2b33      	cmp	r3, #51	; 0x33
 8001f82:	d9fc      	bls.n	8001f7e <send_cube+0x1a36>
 8001f84:	f7fe bfda 	b.w	8000f3c <send_cube+0x9f4>
 8001f88:	f001 f846 	bl	8003018 <HAL_GPIO_WritePin>
 8001f8c:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001f90:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001f92:	2b01      	cmp	r3, #1
 8001f94:	d9fc      	bls.n	8001f90 <send_cube+0x1a48>
 8001f96:	2200      	movs	r2, #0
 8001f98:	4631      	mov	r1, r6
 8001f9a:	4638      	mov	r0, r7
 8001f9c:	f001 f83c 	bl	8003018 <HAL_GPIO_WritePin>
 8001fa0:	6265      	str	r5, [r4, #36]	; 0x24
 8001fa2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001fa4:	2b33      	cmp	r3, #51	; 0x33
 8001fa6:	d9fc      	bls.n	8001fa2 <send_cube+0x1a5a>
 8001fa8:	f7fe bfad 	b.w	8000f06 <send_cube+0x9be>
 8001fac:	f001 f834 	bl	8003018 <HAL_GPIO_WritePin>
 8001fb0:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001fb4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001fb6:	2b01      	cmp	r3, #1
 8001fb8:	d9fc      	bls.n	8001fb4 <send_cube+0x1a6c>
 8001fba:	2200      	movs	r2, #0
 8001fbc:	4631      	mov	r1, r6
 8001fbe:	4638      	mov	r0, r7
 8001fc0:	f001 f82a 	bl	8003018 <HAL_GPIO_WritePin>
 8001fc4:	6265      	str	r5, [r4, #36]	; 0x24
 8001fc6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001fc8:	2b33      	cmp	r3, #51	; 0x33
 8001fca:	d9fc      	bls.n	8001fc6 <send_cube+0x1a7e>
 8001fcc:	f7fe bf80 	b.w	8000ed0 <send_cube+0x988>
 8001fd0:	f001 f822 	bl	8003018 <HAL_GPIO_WritePin>
 8001fd4:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001fd8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001fda:	2b01      	cmp	r3, #1
 8001fdc:	d9fc      	bls.n	8001fd8 <send_cube+0x1a90>
 8001fde:	2200      	movs	r2, #0
 8001fe0:	4631      	mov	r1, r6
 8001fe2:	4638      	mov	r0, r7
 8001fe4:	f001 f818 	bl	8003018 <HAL_GPIO_WritePin>
 8001fe8:	6265      	str	r5, [r4, #36]	; 0x24
 8001fea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001fec:	2b33      	cmp	r3, #51	; 0x33
 8001fee:	d9fc      	bls.n	8001fea <send_cube+0x1aa2>
 8001ff0:	f7fe bf53 	b.w	8000e9a <send_cube+0x952>
 8001ff4:	f001 f810 	bl	8003018 <HAL_GPIO_WritePin>
 8001ff8:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8001ffc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8001ffe:	2b01      	cmp	r3, #1
 8002000:	d9fc      	bls.n	8001ffc <send_cube+0x1ab4>
 8002002:	2200      	movs	r2, #0
 8002004:	4631      	mov	r1, r6
 8002006:	4638      	mov	r0, r7
 8002008:	f001 f806 	bl	8003018 <HAL_GPIO_WritePin>
 800200c:	6265      	str	r5, [r4, #36]	; 0x24
 800200e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002010:	2b33      	cmp	r3, #51	; 0x33
 8002012:	d9fc      	bls.n	800200e <send_cube+0x1ac6>
 8002014:	f7fe bf26 	b.w	8000e64 <send_cube+0x91c>
 8002018:	f000 fffe 	bl	8003018 <HAL_GPIO_WritePin>
 800201c:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8002020:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002022:	2b01      	cmp	r3, #1
 8002024:	d9fc      	bls.n	8002020 <send_cube+0x1ad8>
 8002026:	2200      	movs	r2, #0
 8002028:	4631      	mov	r1, r6
 800202a:	4638      	mov	r0, r7
 800202c:	f000 fff4 	bl	8003018 <HAL_GPIO_WritePin>
 8002030:	6265      	str	r5, [r4, #36]	; 0x24
 8002032:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002034:	2b33      	cmp	r3, #51	; 0x33
 8002036:	d9fc      	bls.n	8002032 <send_cube+0x1aea>
 8002038:	f7fe bef9 	b.w	8000e2e <send_cube+0x8e6>
 800203c:	f000 ffec 	bl	8003018 <HAL_GPIO_WritePin>
 8002040:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8002044:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002046:	2b01      	cmp	r3, #1
 8002048:	d9fc      	bls.n	8002044 <send_cube+0x1afc>
 800204a:	2200      	movs	r2, #0
 800204c:	4631      	mov	r1, r6
 800204e:	4638      	mov	r0, r7
 8002050:	f000 ffe2 	bl	8003018 <HAL_GPIO_WritePin>
 8002054:	6265      	str	r5, [r4, #36]	; 0x24
 8002056:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002058:	2b33      	cmp	r3, #51	; 0x33
 800205a:	d9fc      	bls.n	8002056 <send_cube+0x1b0e>
 800205c:	f7fe becc 	b.w	8000df8 <send_cube+0x8b0>
 8002060:	f000 ffda 	bl	8003018 <HAL_GPIO_WritePin>
 8002064:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8002068:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800206a:	2b01      	cmp	r3, #1
 800206c:	d9fc      	bls.n	8002068 <send_cube+0x1b20>
 800206e:	2200      	movs	r2, #0
 8002070:	4631      	mov	r1, r6
 8002072:	4638      	mov	r0, r7
 8002074:	f000 ffd0 	bl	8003018 <HAL_GPIO_WritePin>
 8002078:	6265      	str	r5, [r4, #36]	; 0x24
 800207a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800207c:	2b33      	cmp	r3, #51	; 0x33
 800207e:	d9fc      	bls.n	800207a <send_cube+0x1b32>
 8002080:	f7fe be86 	b.w	8000d90 <send_cube+0x848>
 8002084:	f000 ffc8 	bl	8003018 <HAL_GPIO_WritePin>
 8002088:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 800208c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800208e:	2b01      	cmp	r3, #1
 8002090:	d9fc      	bls.n	800208c <send_cube+0x1b44>
 8002092:	2200      	movs	r2, #0
 8002094:	4631      	mov	r1, r6
 8002096:	4638      	mov	r0, r7
 8002098:	f000 ffbe 	bl	8003018 <HAL_GPIO_WritePin>
 800209c:	6265      	str	r5, [r4, #36]	; 0x24
 800209e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80020a0:	2b33      	cmp	r3, #51	; 0x33
 80020a2:	d9fc      	bls.n	800209e <send_cube+0x1b56>
 80020a4:	f7fe be59 	b.w	8000d5a <send_cube+0x812>
 80020a8:	f000 ffb6 	bl	8003018 <HAL_GPIO_WritePin>
 80020ac:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80020b0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80020b2:	2b01      	cmp	r3, #1
 80020b4:	d9fc      	bls.n	80020b0 <send_cube+0x1b68>
 80020b6:	2200      	movs	r2, #0
 80020b8:	4631      	mov	r1, r6
 80020ba:	4638      	mov	r0, r7
 80020bc:	f000 ffac 	bl	8003018 <HAL_GPIO_WritePin>
 80020c0:	6265      	str	r5, [r4, #36]	; 0x24
 80020c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80020c4:	2b33      	cmp	r3, #51	; 0x33
 80020c6:	d9fc      	bls.n	80020c2 <send_cube+0x1b7a>
 80020c8:	f7fe be2c 	b.w	8000d24 <send_cube+0x7dc>
 80020cc:	f000 ffa4 	bl	8003018 <HAL_GPIO_WritePin>
 80020d0:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80020d4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80020d6:	2b01      	cmp	r3, #1
 80020d8:	d9fc      	bls.n	80020d4 <send_cube+0x1b8c>
 80020da:	2200      	movs	r2, #0
 80020dc:	4631      	mov	r1, r6
 80020de:	4638      	mov	r0, r7
 80020e0:	f000 ff9a 	bl	8003018 <HAL_GPIO_WritePin>
 80020e4:	6265      	str	r5, [r4, #36]	; 0x24
 80020e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80020e8:	2b33      	cmp	r3, #51	; 0x33
 80020ea:	d9fc      	bls.n	80020e6 <send_cube+0x1b9e>
 80020ec:	f7fe bdff 	b.w	8000cee <send_cube+0x7a6>
 80020f0:	f000 ff92 	bl	8003018 <HAL_GPIO_WritePin>
 80020f4:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80020f8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80020fa:	2b01      	cmp	r3, #1
 80020fc:	d9fc      	bls.n	80020f8 <send_cube+0x1bb0>
 80020fe:	2200      	movs	r2, #0
 8002100:	4631      	mov	r1, r6
 8002102:	4638      	mov	r0, r7
 8002104:	f000 ff88 	bl	8003018 <HAL_GPIO_WritePin>
 8002108:	6265      	str	r5, [r4, #36]	; 0x24
 800210a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800210c:	2b33      	cmp	r3, #51	; 0x33
 800210e:	d9fc      	bls.n	800210a <send_cube+0x1bc2>
 8002110:	f7fe bdd2 	b.w	8000cb8 <send_cube+0x770>
 8002114:	f000 ff80 	bl	8003018 <HAL_GPIO_WritePin>
 8002118:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 800211c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800211e:	2b01      	cmp	r3, #1
 8002120:	d9fc      	bls.n	800211c <send_cube+0x1bd4>
 8002122:	2200      	movs	r2, #0
 8002124:	4631      	mov	r1, r6
 8002126:	4638      	mov	r0, r7
 8002128:	f000 ff76 	bl	8003018 <HAL_GPIO_WritePin>
 800212c:	6265      	str	r5, [r4, #36]	; 0x24
 800212e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002130:	2b33      	cmp	r3, #51	; 0x33
 8002132:	d9fc      	bls.n	800212e <send_cube+0x1be6>
 8002134:	f7fe bda5 	b.w	8000c82 <send_cube+0x73a>
 8002138:	f000 ff6e 	bl	8003018 <HAL_GPIO_WritePin>
 800213c:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8002140:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002142:	2b01      	cmp	r3, #1
 8002144:	d9fc      	bls.n	8002140 <send_cube+0x1bf8>
 8002146:	2200      	movs	r2, #0
 8002148:	4631      	mov	r1, r6
 800214a:	4638      	mov	r0, r7
 800214c:	f000 ff64 	bl	8003018 <HAL_GPIO_WritePin>
 8002150:	6265      	str	r5, [r4, #36]	; 0x24
 8002152:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002154:	2b33      	cmp	r3, #51	; 0x33
 8002156:	d9fc      	bls.n	8002152 <send_cube+0x1c0a>
 8002158:	f7fe bd78 	b.w	8000c4c <send_cube+0x704>
 800215c:	f000 ff5c 	bl	8003018 <HAL_GPIO_WritePin>
 8002160:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8002164:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002166:	2b01      	cmp	r3, #1
 8002168:	d9fc      	bls.n	8002164 <send_cube+0x1c1c>
 800216a:	2200      	movs	r2, #0
 800216c:	4631      	mov	r1, r6
 800216e:	4638      	mov	r0, r7
 8002170:	f000 ff52 	bl	8003018 <HAL_GPIO_WritePin>
 8002174:	6265      	str	r5, [r4, #36]	; 0x24
 8002176:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002178:	2b33      	cmp	r3, #51	; 0x33
 800217a:	d9fc      	bls.n	8002176 <send_cube+0x1c2e>
 800217c:	f7fe bd32 	b.w	8000be4 <send_cube+0x69c>
 8002180:	f000 ff4a 	bl	8003018 <HAL_GPIO_WritePin>
 8002184:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8002188:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800218a:	2b01      	cmp	r3, #1
 800218c:	d9fc      	bls.n	8002188 <send_cube+0x1c40>
 800218e:	2200      	movs	r2, #0
 8002190:	4631      	mov	r1, r6
 8002192:	4638      	mov	r0, r7
 8002194:	f000 ff40 	bl	8003018 <HAL_GPIO_WritePin>
 8002198:	6265      	str	r5, [r4, #36]	; 0x24
 800219a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800219c:	2b33      	cmp	r3, #51	; 0x33
 800219e:	d9fc      	bls.n	800219a <send_cube+0x1c52>
 80021a0:	f7fe bd05 	b.w	8000bae <send_cube+0x666>
 80021a4:	f000 ff38 	bl	8003018 <HAL_GPIO_WritePin>
 80021a8:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80021ac:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80021ae:	2b01      	cmp	r3, #1
 80021b0:	d9fc      	bls.n	80021ac <send_cube+0x1c64>
 80021b2:	2200      	movs	r2, #0
 80021b4:	4631      	mov	r1, r6
 80021b6:	4638      	mov	r0, r7
 80021b8:	f000 ff2e 	bl	8003018 <HAL_GPIO_WritePin>
 80021bc:	6265      	str	r5, [r4, #36]	; 0x24
 80021be:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80021c0:	2b33      	cmp	r3, #51	; 0x33
 80021c2:	d9fc      	bls.n	80021be <send_cube+0x1c76>
 80021c4:	f7fe bcd8 	b.w	8000b78 <send_cube+0x630>
 80021c8:	f000 ff26 	bl	8003018 <HAL_GPIO_WritePin>
 80021cc:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80021d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80021d2:	2b01      	cmp	r3, #1
 80021d4:	d9fc      	bls.n	80021d0 <send_cube+0x1c88>
 80021d6:	2200      	movs	r2, #0
 80021d8:	4631      	mov	r1, r6
 80021da:	4638      	mov	r0, r7
 80021dc:	f000 ff1c 	bl	8003018 <HAL_GPIO_WritePin>
 80021e0:	6265      	str	r5, [r4, #36]	; 0x24
 80021e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80021e4:	2b33      	cmp	r3, #51	; 0x33
 80021e6:	d9fc      	bls.n	80021e2 <send_cube+0x1c9a>
 80021e8:	f7fe bcab 	b.w	8000b42 <send_cube+0x5fa>
 80021ec:	f000 ff14 	bl	8003018 <HAL_GPIO_WritePin>
 80021f0:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80021f4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80021f6:	2b01      	cmp	r3, #1
 80021f8:	d9fc      	bls.n	80021f4 <send_cube+0x1cac>
 80021fa:	2200      	movs	r2, #0
 80021fc:	4631      	mov	r1, r6
 80021fe:	4638      	mov	r0, r7
 8002200:	f000 ff0a 	bl	8003018 <HAL_GPIO_WritePin>
 8002204:	6265      	str	r5, [r4, #36]	; 0x24
 8002206:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002208:	2b33      	cmp	r3, #51	; 0x33
 800220a:	d9fc      	bls.n	8002206 <send_cube+0x1cbe>
 800220c:	f7fe bc7e 	b.w	8000b0c <send_cube+0x5c4>
 8002210:	f000 ff02 	bl	8003018 <HAL_GPIO_WritePin>
 8002214:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8002218:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800221a:	2b01      	cmp	r3, #1
 800221c:	d9fc      	bls.n	8002218 <send_cube+0x1cd0>
 800221e:	2200      	movs	r2, #0
 8002220:	4631      	mov	r1, r6
 8002222:	4638      	mov	r0, r7
 8002224:	f000 fef8 	bl	8003018 <HAL_GPIO_WritePin>
 8002228:	6265      	str	r5, [r4, #36]	; 0x24
 800222a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800222c:	2b33      	cmp	r3, #51	; 0x33
 800222e:	d9fc      	bls.n	800222a <send_cube+0x1ce2>
 8002230:	f7fe bc51 	b.w	8000ad6 <send_cube+0x58e>
 8002234:	f000 fef0 	bl	8003018 <HAL_GPIO_WritePin>
 8002238:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 800223c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800223e:	2b01      	cmp	r3, #1
 8002240:	d9fc      	bls.n	800223c <send_cube+0x1cf4>
 8002242:	2200      	movs	r2, #0
 8002244:	4631      	mov	r1, r6
 8002246:	4638      	mov	r0, r7
 8002248:	f000 fee6 	bl	8003018 <HAL_GPIO_WritePin>
 800224c:	6265      	str	r5, [r4, #36]	; 0x24
 800224e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002250:	2b33      	cmp	r3, #51	; 0x33
 8002252:	d9fc      	bls.n	800224e <send_cube+0x1d06>
 8002254:	f7fe bc24 	b.w	8000aa0 <send_cube+0x558>
	  LOH();LOH();LOH();
 8002258:	f000 fede 	bl	8003018 <HAL_GPIO_WritePin>
 800225c:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8002260:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002262:	2b01      	cmp	r3, #1
 8002264:	d9fc      	bls.n	8002260 <send_cube+0x1d18>
 8002266:	2200      	movs	r2, #0
 8002268:	4631      	mov	r1, r6
 800226a:	4638      	mov	r0, r7
 800226c:	f000 fed4 	bl	8003018 <HAL_GPIO_WritePin>
 8002270:	6265      	str	r5, [r4, #36]	; 0x24
 8002272:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002274:	2b33      	cmp	r3, #51	; 0x33
 8002276:	d9fc      	bls.n	8002272 <send_cube+0x1d2a>
 8002278:	f7fe bbde 	b.w	8000a38 <send_cube+0x4f0>
 800227c:	f000 fecc 	bl	8003018 <HAL_GPIO_WritePin>
 8002280:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8002284:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002286:	2b01      	cmp	r3, #1
 8002288:	d9fc      	bls.n	8002284 <send_cube+0x1d3c>
 800228a:	2200      	movs	r2, #0
 800228c:	4631      	mov	r1, r6
 800228e:	4638      	mov	r0, r7
 8002290:	f000 fec2 	bl	8003018 <HAL_GPIO_WritePin>
 8002294:	6265      	str	r5, [r4, #36]	; 0x24
 8002296:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002298:	2b33      	cmp	r3, #51	; 0x33
 800229a:	d9fc      	bls.n	8002296 <send_cube+0x1d4e>
 800229c:	f7fe bbb1 	b.w	8000a02 <send_cube+0x4ba>
 80022a0:	f000 feba 	bl	8003018 <HAL_GPIO_WritePin>
 80022a4:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80022a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80022aa:	2b01      	cmp	r3, #1
 80022ac:	d9fc      	bls.n	80022a8 <send_cube+0x1d60>
 80022ae:	2200      	movs	r2, #0
 80022b0:	4631      	mov	r1, r6
 80022b2:	4638      	mov	r0, r7
 80022b4:	f000 feb0 	bl	8003018 <HAL_GPIO_WritePin>
 80022b8:	6265      	str	r5, [r4, #36]	; 0x24
 80022ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80022bc:	2b33      	cmp	r3, #51	; 0x33
 80022be:	d9fc      	bls.n	80022ba <send_cube+0x1d72>
 80022c0:	f7fe bb84 	b.w	80009cc <send_cube+0x484>
 80022c4:	f000 fea8 	bl	8003018 <HAL_GPIO_WritePin>
 80022c8:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80022cc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80022ce:	2b01      	cmp	r3, #1
 80022d0:	d9fc      	bls.n	80022cc <send_cube+0x1d84>
 80022d2:	2200      	movs	r2, #0
 80022d4:	4631      	mov	r1, r6
 80022d6:	4638      	mov	r0, r7
 80022d8:	f000 fe9e 	bl	8003018 <HAL_GPIO_WritePin>
 80022dc:	6265      	str	r5, [r4, #36]	; 0x24
 80022de:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80022e0:	2b33      	cmp	r3, #51	; 0x33
 80022e2:	d9fc      	bls.n	80022de <send_cube+0x1d96>
 80022e4:	f7fe bb57 	b.w	8000996 <send_cube+0x44e>
 80022e8:	f000 fe96 	bl	8003018 <HAL_GPIO_WritePin>
 80022ec:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80022f0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80022f2:	2b01      	cmp	r3, #1
 80022f4:	d9fc      	bls.n	80022f0 <send_cube+0x1da8>
 80022f6:	2200      	movs	r2, #0
 80022f8:	4631      	mov	r1, r6
 80022fa:	4638      	mov	r0, r7
 80022fc:	f000 fe8c 	bl	8003018 <HAL_GPIO_WritePin>
 8002300:	6265      	str	r5, [r4, #36]	; 0x24
 8002302:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002304:	2b33      	cmp	r3, #51	; 0x33
 8002306:	d9fc      	bls.n	8002302 <send_cube+0x1dba>
 8002308:	f7fe bb2a 	b.w	8000960 <send_cube+0x418>
 800230c:	f000 fe84 	bl	8003018 <HAL_GPIO_WritePin>
 8002310:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8002314:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002316:	2b01      	cmp	r3, #1
 8002318:	d9fc      	bls.n	8002314 <send_cube+0x1dcc>
 800231a:	2200      	movs	r2, #0
 800231c:	4631      	mov	r1, r6
 800231e:	4638      	mov	r0, r7
 8002320:	f000 fe7a 	bl	8003018 <HAL_GPIO_WritePin>
 8002324:	6265      	str	r5, [r4, #36]	; 0x24
 8002326:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002328:	2b33      	cmp	r3, #51	; 0x33
 800232a:	d9fc      	bls.n	8002326 <send_cube+0x1dde>
 800232c:	f7fe bafd 	b.w	800092a <send_cube+0x3e2>
 8002330:	f000 fe72 	bl	8003018 <HAL_GPIO_WritePin>
 8002334:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8002338:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800233a:	2b01      	cmp	r3, #1
 800233c:	d9fc      	bls.n	8002338 <send_cube+0x1df0>
 800233e:	2200      	movs	r2, #0
 8002340:	4631      	mov	r1, r6
 8002342:	4638      	mov	r0, r7
 8002344:	f000 fe68 	bl	8003018 <HAL_GPIO_WritePin>
 8002348:	6265      	str	r5, [r4, #36]	; 0x24
 800234a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800234c:	2b33      	cmp	r3, #51	; 0x33
 800234e:	d9fc      	bls.n	800234a <send_cube+0x1e02>
 8002350:	f7fe bad0 	b.w	80008f4 <send_cube+0x3ac>
 8002354:	f000 fe60 	bl	8003018 <HAL_GPIO_WritePin>
 8002358:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 800235c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800235e:	2b01      	cmp	r3, #1
 8002360:	d9fc      	bls.n	800235c <send_cube+0x1e14>
 8002362:	2200      	movs	r2, #0
 8002364:	4631      	mov	r1, r6
 8002366:	4638      	mov	r0, r7
 8002368:	f000 fe56 	bl	8003018 <HAL_GPIO_WritePin>
 800236c:	6265      	str	r5, [r4, #36]	; 0x24
 800236e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002370:	2b33      	cmp	r3, #51	; 0x33
 8002372:	d9fc      	bls.n	800236e <send_cube+0x1e26>
 8002374:	f7fe ba8a 	b.w	800088c <send_cube+0x344>
 8002378:	f000 fe4e 	bl	8003018 <HAL_GPIO_WritePin>
 800237c:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8002380:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002382:	2b01      	cmp	r3, #1
 8002384:	d9fc      	bls.n	8002380 <send_cube+0x1e38>
 8002386:	2200      	movs	r2, #0
 8002388:	4631      	mov	r1, r6
 800238a:	4638      	mov	r0, r7
 800238c:	f000 fe44 	bl	8003018 <HAL_GPIO_WritePin>
 8002390:	6265      	str	r5, [r4, #36]	; 0x24
 8002392:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002394:	2b33      	cmp	r3, #51	; 0x33
 8002396:	d9fc      	bls.n	8002392 <send_cube+0x1e4a>
 8002398:	f7fe ba5d 	b.w	8000856 <send_cube+0x30e>
 800239c:	f000 fe3c 	bl	8003018 <HAL_GPIO_WritePin>
 80023a0:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80023a4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80023a6:	2b01      	cmp	r3, #1
 80023a8:	d9fc      	bls.n	80023a4 <send_cube+0x1e5c>
 80023aa:	2200      	movs	r2, #0
 80023ac:	4631      	mov	r1, r6
 80023ae:	4638      	mov	r0, r7
 80023b0:	f000 fe32 	bl	8003018 <HAL_GPIO_WritePin>
 80023b4:	6265      	str	r5, [r4, #36]	; 0x24
 80023b6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80023b8:	2b33      	cmp	r3, #51	; 0x33
 80023ba:	d9fc      	bls.n	80023b6 <send_cube+0x1e6e>
 80023bc:	f7fe ba30 	b.w	8000820 <send_cube+0x2d8>
 80023c0:	f000 fe2a 	bl	8003018 <HAL_GPIO_WritePin>
 80023c4:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80023c8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80023ca:	2b01      	cmp	r3, #1
 80023cc:	d9fc      	bls.n	80023c8 <send_cube+0x1e80>
 80023ce:	2200      	movs	r2, #0
 80023d0:	4631      	mov	r1, r6
 80023d2:	4638      	mov	r0, r7
 80023d4:	f000 fe20 	bl	8003018 <HAL_GPIO_WritePin>
 80023d8:	6265      	str	r5, [r4, #36]	; 0x24
 80023da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80023dc:	2b33      	cmp	r3, #51	; 0x33
 80023de:	d9fc      	bls.n	80023da <send_cube+0x1e92>
 80023e0:	f7fe b9fd 	b.w	80007de <send_cube+0x296>
 80023e4:	f000 fe18 	bl	8003018 <HAL_GPIO_WritePin>
 80023e8:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80023ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80023ee:	2b01      	cmp	r3, #1
 80023f0:	d9fc      	bls.n	80023ec <send_cube+0x1ea4>
 80023f2:	2200      	movs	r2, #0
 80023f4:	4631      	mov	r1, r6
 80023f6:	4638      	mov	r0, r7
 80023f8:	f000 fe0e 	bl	8003018 <HAL_GPIO_WritePin>
 80023fc:	6265      	str	r5, [r4, #36]	; 0x24
 80023fe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002400:	2b33      	cmp	r3, #51	; 0x33
 8002402:	d9fc      	bls.n	80023fe <send_cube+0x1eb6>
 8002404:	f7fe b9d0 	b.w	80007a8 <send_cube+0x260>
 8002408:	f000 fe06 	bl	8003018 <HAL_GPIO_WritePin>
 800240c:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8002410:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002412:	2b01      	cmp	r3, #1
 8002414:	d9fc      	bls.n	8002410 <send_cube+0x1ec8>
 8002416:	2200      	movs	r2, #0
 8002418:	4631      	mov	r1, r6
 800241a:	4638      	mov	r0, r7
 800241c:	f000 fdfc 	bl	8003018 <HAL_GPIO_WritePin>
 8002420:	6265      	str	r5, [r4, #36]	; 0x24
 8002422:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002424:	2b33      	cmp	r3, #51	; 0x33
 8002426:	d9fc      	bls.n	8002422 <send_cube+0x1eda>
 8002428:	f7fe b9a3 	b.w	8000772 <send_cube+0x22a>
 800242c:	f000 fdf4 	bl	8003018 <HAL_GPIO_WritePin>
 8002430:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8002434:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002436:	2b01      	cmp	r3, #1
 8002438:	d9fc      	bls.n	8002434 <send_cube+0x1eec>
 800243a:	2200      	movs	r2, #0
 800243c:	4631      	mov	r1, r6
 800243e:	4638      	mov	r0, r7
 8002440:	f000 fdea 	bl	8003018 <HAL_GPIO_WritePin>
 8002444:	6265      	str	r5, [r4, #36]	; 0x24
 8002446:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002448:	2b33      	cmp	r3, #51	; 0x33
 800244a:	d9fc      	bls.n	8002446 <send_cube+0x1efe>
 800244c:	f7fe b976 	b.w	800073c <send_cube+0x1f4>
 8002450:	f000 fde2 	bl	8003018 <HAL_GPIO_WritePin>
 8002454:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8002458:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800245a:	2b01      	cmp	r3, #1
 800245c:	d9fc      	bls.n	8002458 <send_cube+0x1f10>
 800245e:	2200      	movs	r2, #0
 8002460:	4631      	mov	r1, r6
 8002462:	4638      	mov	r0, r7
 8002464:	f000 fdd8 	bl	8003018 <HAL_GPIO_WritePin>
 8002468:	6265      	str	r5, [r4, #36]	; 0x24
 800246a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800246c:	2b33      	cmp	r3, #51	; 0x33
 800246e:	d9fc      	bls.n	800246a <send_cube+0x1f22>
 8002470:	f7fe b930 	b.w	80006d4 <send_cube+0x18c>
 8002474:	f000 fdd0 	bl	8003018 <HAL_GPIO_WritePin>
 8002478:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 800247c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800247e:	2b01      	cmp	r3, #1
 8002480:	d9fc      	bls.n	800247c <send_cube+0x1f34>
 8002482:	2200      	movs	r2, #0
 8002484:	4631      	mov	r1, r6
 8002486:	4638      	mov	r0, r7
 8002488:	f000 fdc6 	bl	8003018 <HAL_GPIO_WritePin>
 800248c:	6265      	str	r5, [r4, #36]	; 0x24
 800248e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002490:	2b33      	cmp	r3, #51	; 0x33
 8002492:	d9fc      	bls.n	800248e <send_cube+0x1f46>
 8002494:	f7fe b903 	b.w	800069e <send_cube+0x156>
 8002498:	f000 fdbe 	bl	8003018 <HAL_GPIO_WritePin>
 800249c:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80024a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80024a2:	2b01      	cmp	r3, #1
 80024a4:	d9fc      	bls.n	80024a0 <send_cube+0x1f58>
 80024a6:	2200      	movs	r2, #0
 80024a8:	4631      	mov	r1, r6
 80024aa:	4638      	mov	r0, r7
 80024ac:	f000 fdb4 	bl	8003018 <HAL_GPIO_WritePin>
 80024b0:	6265      	str	r5, [r4, #36]	; 0x24
 80024b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80024b4:	2b33      	cmp	r3, #51	; 0x33
 80024b6:	d9fc      	bls.n	80024b2 <send_cube+0x1f6a>
 80024b8:	f7fe b8d6 	b.w	8000668 <send_cube+0x120>
 80024bc:	f000 fdac 	bl	8003018 <HAL_GPIO_WritePin>
 80024c0:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80024c4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80024c6:	2b01      	cmp	r3, #1
 80024c8:	d9fc      	bls.n	80024c4 <send_cube+0x1f7c>
 80024ca:	2200      	movs	r2, #0
 80024cc:	4631      	mov	r1, r6
 80024ce:	4638      	mov	r0, r7
 80024d0:	f000 fda2 	bl	8003018 <HAL_GPIO_WritePin>
 80024d4:	6265      	str	r5, [r4, #36]	; 0x24
 80024d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80024d8:	2b33      	cmp	r3, #51	; 0x33
 80024da:	d9fc      	bls.n	80024d6 <send_cube+0x1f8e>
 80024dc:	f7fe b8a9 	b.w	8000632 <send_cube+0xea>
 80024e0:	f000 fd9a 	bl	8003018 <HAL_GPIO_WritePin>
 80024e4:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 80024e8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80024ea:	2b01      	cmp	r3, #1
 80024ec:	d9fc      	bls.n	80024e8 <send_cube+0x1fa0>
 80024ee:	2200      	movs	r2, #0
 80024f0:	4631      	mov	r1, r6
 80024f2:	4638      	mov	r0, r7
 80024f4:	f000 fd90 	bl	8003018 <HAL_GPIO_WritePin>
 80024f8:	6265      	str	r5, [r4, #36]	; 0x24
 80024fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80024fc:	2b33      	cmp	r3, #51	; 0x33
 80024fe:	d9fc      	bls.n	80024fa <send_cube+0x1fb2>
 8002500:	f7fe b87c 	b.w	80005fc <send_cube+0xb4>
 8002504:	f000 fd88 	bl	8003018 <HAL_GPIO_WritePin>
 8002508:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 800250c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800250e:	2b01      	cmp	r3, #1
 8002510:	d9fc      	bls.n	800250c <send_cube+0x1fc4>
 8002512:	2200      	movs	r2, #0
 8002514:	4631      	mov	r1, r6
 8002516:	4638      	mov	r0, r7
 8002518:	f000 fd7e 	bl	8003018 <HAL_GPIO_WritePin>
 800251c:	6265      	str	r5, [r4, #36]	; 0x24
 800251e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002520:	2b33      	cmp	r3, #51	; 0x33
 8002522:	d9fc      	bls.n	800251e <send_cube+0x1fd6>
 8002524:	f7fe b84f 	b.w	80005c6 <send_cube+0x7e>
 8002528:	f000 fd76 	bl	8003018 <HAL_GPIO_WritePin>
 800252c:	f8c4 a024 	str.w	sl, [r4, #36]	; 0x24
 8002530:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002532:	2b01      	cmp	r3, #1
 8002534:	d9fc      	bls.n	8002530 <send_cube+0x1fe8>
 8002536:	2200      	movs	r2, #0
 8002538:	4631      	mov	r1, r6
 800253a:	4638      	mov	r0, r7
 800253c:	f000 fd6c 	bl	8003018 <HAL_GPIO_WritePin>
 8002540:	6265      	str	r5, [r4, #36]	; 0x24
 8002542:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002544:	2b33      	cmp	r3, #51	; 0x33
 8002546:	d9fc      	bls.n	8002542 <send_cube+0x1ffa>
 8002548:	f7fe b822 	b.w	8000590 <send_cube+0x48>
	  LOH();LOH();LOH();
 800254c:	f000 fd64 	bl	8003018 <HAL_GPIO_WritePin>
 8002550:	6265      	str	r5, [r4, #36]	; 0x24
 8002552:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002554:	2b33      	cmp	r3, #51	; 0x33
 8002556:	d9fc      	bls.n	8002552 <send_cube+0x200a>
 8002558:	6265      	str	r5, [r4, #36]	; 0x24
 800255a:	2200      	movs	r2, #0
 800255c:	4631      	mov	r1, r6
 800255e:	4638      	mov	r0, r7
 8002560:	f000 fd5a 	bl	8003018 <HAL_GPIO_WritePin>
 8002564:	6265      	str	r5, [r4, #36]	; 0x24
 8002566:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002568:	2b01      	cmp	r3, #1
 800256a:	d9fc      	bls.n	8002566 <send_cube+0x201e>
 800256c:	f7fe bb53 	b.w	8000c16 <send_cube+0x6ce>
	  LOH();LOH();LOH();
 8002570:	f000 fd52 	bl	8003018 <HAL_GPIO_WritePin>
 8002574:	6265      	str	r5, [r4, #36]	; 0x24
 8002576:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002578:	2b33      	cmp	r3, #51	; 0x33
 800257a:	d9fc      	bls.n	8002576 <send_cube+0x202e>
 800257c:	6265      	str	r5, [r4, #36]	; 0x24
 800257e:	2200      	movs	r2, #0
 8002580:	4631      	mov	r1, r6
 8002582:	4638      	mov	r0, r7
 8002584:	f000 fd48 	bl	8003018 <HAL_GPIO_WritePin>
 8002588:	6265      	str	r5, [r4, #36]	; 0x24
 800258a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800258c:	2b01      	cmp	r3, #1
 800258e:	d9fc      	bls.n	800258a <send_cube+0x2042>
 8002590:	f7fe ba6b 	b.w	8000a6a <send_cube+0x522>
 8002594:	f000 fd40 	bl	8003018 <HAL_GPIO_WritePin>
 8002598:	6265      	str	r5, [r4, #36]	; 0x24
 800259a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800259c:	2b33      	cmp	r3, #51	; 0x33
 800259e:	d9fc      	bls.n	800259a <send_cube+0x2052>
 80025a0:	6265      	str	r5, [r4, #36]	; 0x24
 80025a2:	2200      	movs	r2, #0
 80025a4:	4631      	mov	r1, r6
 80025a6:	4638      	mov	r0, r7
 80025a8:	f000 fd36 	bl	8003018 <HAL_GPIO_WritePin>
 80025ac:	6265      	str	r5, [r4, #36]	; 0x24
 80025ae:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80025b0:	2b01      	cmp	r3, #1
 80025b2:	d9fc      	bls.n	80025ae <send_cube+0x2066>
 80025b4:	f7fe b983 	b.w	80008be <send_cube+0x376>
 80025b8:	f000 fd2e 	bl	8003018 <HAL_GPIO_WritePin>
 80025bc:	6265      	str	r5, [r4, #36]	; 0x24
 80025be:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80025c0:	2b33      	cmp	r3, #51	; 0x33
 80025c2:	d9fc      	bls.n	80025be <send_cube+0x2076>
 80025c4:	6265      	str	r5, [r4, #36]	; 0x24
 80025c6:	2200      	movs	r2, #0
 80025c8:	4631      	mov	r1, r6
 80025ca:	4638      	mov	r0, r7
 80025cc:	f000 fd24 	bl	8003018 <HAL_GPIO_WritePin>
 80025d0:	6265      	str	r5, [r4, #36]	; 0x24
 80025d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80025d4:	2b01      	cmp	r3, #1
 80025d6:	d9fc      	bls.n	80025d2 <send_cube+0x208a>
 80025d8:	f7fe b895 	b.w	8000706 <send_cube+0x1be>
	  LOH();LOH();LOH();
 80025dc:	f000 fd1c 	bl	8003018 <HAL_GPIO_WritePin>
 80025e0:	6265      	str	r5, [r4, #36]	; 0x24
 80025e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80025e4:	2b33      	cmp	r3, #51	; 0x33
 80025e6:	d9fc      	bls.n	80025e2 <send_cube+0x209a>
 80025e8:	6265      	str	r5, [r4, #36]	; 0x24
 80025ea:	2200      	movs	r2, #0
 80025ec:	4631      	mov	r1, r6
 80025ee:	4638      	mov	r0, r7
 80025f0:	f000 fd12 	bl	8003018 <HAL_GPIO_WritePin>
 80025f4:	6265      	str	r5, [r4, #36]	; 0x24
 80025f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80025f8:	2b01      	cmp	r3, #1
 80025fa:	d9fc      	bls.n	80025f6 <send_cube+0x20ae>
 80025fc:	f7ff b9b9 	b.w	8001972 <send_cube+0x142a>
 8002600:	f000 fd0a 	bl	8003018 <HAL_GPIO_WritePin>
 8002604:	6265      	str	r5, [r4, #36]	; 0x24
 8002606:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002608:	2b33      	cmp	r3, #51	; 0x33
 800260a:	d9fc      	bls.n	8002606 <send_cube+0x20be>
 800260c:	6265      	str	r5, [r4, #36]	; 0x24
 800260e:	2200      	movs	r2, #0
 8002610:	4631      	mov	r1, r6
 8002612:	4638      	mov	r0, r7
 8002614:	f000 fd00 	bl	8003018 <HAL_GPIO_WritePin>
 8002618:	6265      	str	r5, [r4, #36]	; 0x24
 800261a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800261c:	2b01      	cmp	r3, #1
 800261e:	d9fc      	bls.n	800261a <send_cube+0x20d2>
 8002620:	f7ff b8d3 	b.w	80017ca <send_cube+0x1282>
 8002624:	f000 fcf8 	bl	8003018 <HAL_GPIO_WritePin>
 8002628:	6265      	str	r5, [r4, #36]	; 0x24
 800262a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800262c:	2b33      	cmp	r3, #51	; 0x33
 800262e:	d9fc      	bls.n	800262a <send_cube+0x20e2>
 8002630:	6265      	str	r5, [r4, #36]	; 0x24
 8002632:	2200      	movs	r2, #0
 8002634:	4631      	mov	r1, r6
 8002636:	4638      	mov	r0, r7
 8002638:	f000 fcee 	bl	8003018 <HAL_GPIO_WritePin>
 800263c:	6265      	str	r5, [r4, #36]	; 0x24
 800263e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002640:	2b01      	cmp	r3, #1
 8002642:	d9fc      	bls.n	800263e <send_cube+0x20f6>
 8002644:	f7fe bfeb 	b.w	800161e <send_cube+0x10d6>
	  LOH();LOH();LOH();
 8002648:	f000 fce6 	bl	8003018 <HAL_GPIO_WritePin>
 800264c:	6265      	str	r5, [r4, #36]	; 0x24
 800264e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002650:	2b33      	cmp	r3, #51	; 0x33
 8002652:	d9fc      	bls.n	800264e <send_cube+0x2106>
 8002654:	6265      	str	r5, [r4, #36]	; 0x24
 8002656:	2200      	movs	r2, #0
 8002658:	4631      	mov	r1, r6
 800265a:	4638      	mov	r0, r7
 800265c:	f000 fcdc 	bl	8003018 <HAL_GPIO_WritePin>
 8002660:	6265      	str	r5, [r4, #36]	; 0x24
 8002662:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002664:	2b01      	cmp	r3, #1
 8002666:	d9fc      	bls.n	8002662 <send_cube+0x211a>
 8002668:	f7fe bf03 	b.w	8001472 <send_cube+0xf2a>
 800266c:	f000 fcd4 	bl	8003018 <HAL_GPIO_WritePin>
 8002670:	6265      	str	r5, [r4, #36]	; 0x24
 8002672:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002674:	2b33      	cmp	r3, #51	; 0x33
 8002676:	d9fc      	bls.n	8002672 <send_cube+0x212a>
 8002678:	6265      	str	r5, [r4, #36]	; 0x24
 800267a:	2200      	movs	r2, #0
 800267c:	4631      	mov	r1, r6
 800267e:	4638      	mov	r0, r7
 8002680:	f000 fcca 	bl	8003018 <HAL_GPIO_WritePin>
 8002684:	6265      	str	r5, [r4, #36]	; 0x24
 8002686:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002688:	2b01      	cmp	r3, #1
 800268a:	d9fc      	bls.n	8002686 <send_cube+0x213e>
 800268c:	f7fe be1b 	b.w	80012c6 <send_cube+0xd7e>
 8002690:	f000 fcc2 	bl	8003018 <HAL_GPIO_WritePin>
 8002694:	6265      	str	r5, [r4, #36]	; 0x24
 8002696:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8002698:	2b33      	cmp	r3, #51	; 0x33
 800269a:	d9fc      	bls.n	8002696 <send_cube+0x214e>
 800269c:	6265      	str	r5, [r4, #36]	; 0x24
 800269e:	2200      	movs	r2, #0
 80026a0:	4631      	mov	r1, r6
 80026a2:	4638      	mov	r0, r7
 80026a4:	f000 fcb8 	bl	8003018 <HAL_GPIO_WritePin>
 80026a8:	6265      	str	r5, [r4, #36]	; 0x24
 80026aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80026ac:	2b01      	cmp	r3, #1
 80026ae:	d9fc      	bls.n	80026aa <send_cube+0x2162>
 80026b0:	f7fe bd33 	b.w	800111a <send_cube+0xbd2>
	  LOH();LOH();LOH();
 80026b4:	f000 fcb0 	bl	8003018 <HAL_GPIO_WritePin>
 80026b8:	6265      	str	r5, [r4, #36]	; 0x24
 80026ba:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80026bc:	2b33      	cmp	r3, #51	; 0x33
 80026be:	d9fc      	bls.n	80026ba <send_cube+0x2172>
 80026c0:	6265      	str	r5, [r4, #36]	; 0x24
 80026c2:	2200      	movs	r2, #0
 80026c4:	4631      	mov	r1, r6
 80026c6:	4638      	mov	r0, r7
 80026c8:	f000 fca6 	bl	8003018 <HAL_GPIO_WritePin>
 80026cc:	6265      	str	r5, [r4, #36]	; 0x24
 80026ce:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80026d0:	2b01      	cmp	r3, #1
 80026d2:	d9fc      	bls.n	80026ce <send_cube+0x2186>
 80026d4:	f7fe bc4b 	b.w	8000f6e <send_cube+0xa26>
 80026d8:	f000 fc9e 	bl	8003018 <HAL_GPIO_WritePin>
 80026dc:	6265      	str	r5, [r4, #36]	; 0x24
 80026de:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80026e0:	2b33      	cmp	r3, #51	; 0x33
 80026e2:	d9fc      	bls.n	80026de <send_cube+0x2196>
 80026e4:	6265      	str	r5, [r4, #36]	; 0x24
 80026e6:	2200      	movs	r2, #0
 80026e8:	4631      	mov	r1, r6
 80026ea:	4638      	mov	r0, r7
 80026ec:	f000 fc94 	bl	8003018 <HAL_GPIO_WritePin>
 80026f0:	6265      	str	r5, [r4, #36]	; 0x24
 80026f2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80026f4:	2b01      	cmp	r3, #1
 80026f6:	d9fc      	bls.n	80026f2 <send_cube+0x21aa>
 80026f8:	f7fe bb63 	b.w	8000dc2 <send_cube+0x87a>
 80026fc:	0000      	movs	r0, r0
	...

08002700 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002700:	b500      	push	{lr}
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002702:	2300      	movs	r3, #0
{
 8002704:	b097      	sub	sp, #92	; 0x5c
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002706:	e9cd 330b 	strd	r3, r3, [sp, #44]	; 0x2c
 800270a:	e9cd 3309 	strd	r3, r3, [sp, #36]	; 0x24
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800270e:	e9cd 3302 	strd	r3, r3, [sp, #8]
 8002712:	e9cd 3304 	strd	r3, r3, [sp, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8002716:	492e      	ldr	r1, [pc, #184]	; (80027d0 <SystemClock_Config+0xd0>)
 8002718:	9300      	str	r3, [sp, #0]
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800271a:	930d      	str	r3, [sp, #52]	; 0x34
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800271c:	9306      	str	r3, [sp, #24]
  __HAL_RCC_PWR_CLK_ENABLE();
 800271e:	6c08      	ldr	r0, [r1, #64]	; 0x40
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002720:	4a2c      	ldr	r2, [pc, #176]	; (80027d4 <SystemClock_Config+0xd4>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8002722:	f040 5080 	orr.w	r0, r0, #268435456	; 0x10000000
 8002726:	6408      	str	r0, [r1, #64]	; 0x40
 8002728:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800272a:	f001 5180 	and.w	r1, r1, #268435456	; 0x10000000
 800272e:	9100      	str	r1, [sp, #0]
 8002730:	9900      	ldr	r1, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002732:	9301      	str	r3, [sp, #4]
 8002734:	6813      	ldr	r3, [r2, #0]
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002736:	ed9f 7b1e 	vldr	d7, [pc, #120]	; 80027b0 <SystemClock_Config+0xb0>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800273a:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 800273e:	6013      	str	r3, [r2, #0]
 8002740:	6813      	ldr	r3, [r2, #0]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002742:	ed8d 7b0e 	vstr	d7, [sp, #56]	; 0x38
 8002746:	ed9f 7b1c 	vldr	d7, [pc, #112]	; 80027b8 <SystemClock_Config+0xb8>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800274a:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800274e:	ed8d 7b10 	vstr	d7, [sp, #64]	; 0x40
 8002752:	ed9f 7b1b 	vldr	d7, [pc, #108]	; 80027c0 <SystemClock_Config+0xc0>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002756:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002758:	2102      	movs	r1, #2
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800275a:	9801      	ldr	r0, [sp, #4]
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800275c:	9108      	str	r1, [sp, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 800275e:	2201      	movs	r2, #1
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002760:	2310      	movs	r3, #16
  RCC_OscInitStruct.PLL.PLLM = 8;
  RCC_OscInitStruct.PLL.PLLN = 180;
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 2;
  RCC_OscInitStruct.PLL.PLLR = 2;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002762:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002764:	ed8d 7b12 	vstr	d7, [sp, #72]	; 0x48
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002768:	920b      	str	r2, [sp, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 800276a:	930c      	str	r3, [sp, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLR = 2;
 800276c:	9114      	str	r1, [sp, #80]	; 0x50
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800276e:	f000 ff4d 	bl	800360c <HAL_RCC_OscConfig>
 8002772:	b108      	cbz	r0, 8002778 <SystemClock_Config+0x78>
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002774:	b672      	cpsid	i
void Error_Handler(void)
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002776:	e7fe      	b.n	8002776 <SystemClock_Config+0x76>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8002778:	f000 fc68 	bl	800304c <HAL_PWREx_EnableOverDrive>
 800277c:	b108      	cbz	r0, 8002782 <SystemClock_Config+0x82>
 800277e:	b672      	cpsid	i
  while (1)
 8002780:	e7fe      	b.n	8002780 <SystemClock_Config+0x80>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002782:	ed9f 7b11 	vldr	d7, [pc, #68]	; 80027c8 <SystemClock_Config+0xc8>
 8002786:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 800278a:	2200      	movs	r2, #0
 800278c:	e9cd 2304 	strd	r2, r3, [sp, #16]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8002790:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8002792:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8002796:	2105      	movs	r1, #5
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002798:	ed8d 7b02 	vstr	d7, [sp, #8]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800279c:	9306      	str	r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800279e:	f000 fca5 	bl	80030ec <HAL_RCC_ClockConfig>
 80027a2:	b108      	cbz	r0, 80027a8 <SystemClock_Config+0xa8>
 80027a4:	b672      	cpsid	i
  while (1)
 80027a6:	e7fe      	b.n	80027a6 <SystemClock_Config+0xa6>
}
 80027a8:	b017      	add	sp, #92	; 0x5c
 80027aa:	f85d fb04 	ldr.w	pc, [sp], #4
 80027ae:	bf00      	nop
 80027b0:	00000002 	.word	0x00000002
 80027b4:	00000000 	.word	0x00000000
 80027b8:	00000008 	.word	0x00000008
 80027bc:	000000b4 	.word	0x000000b4
 80027c0:	00000002 	.word	0x00000002
 80027c4:	00000002 	.word	0x00000002
 80027c8:	0000000f 	.word	0x0000000f
 80027cc:	00000003 	.word	0x00000003
 80027d0:	40023800 	.word	0x40023800
 80027d4:	40007000 	.word	0x40007000

080027d8 <main>:
{
 80027d8:	b500      	push	{lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027da:	2400      	movs	r4, #0
{
 80027dc:	f2ad 6d14 	subw	sp, sp, #1556	; 0x614
  HAL_Init();
 80027e0:	f000 f92e 	bl	8002a40 <HAL_Init>
  SystemClock_Config();
 80027e4:	f7ff ff8c 	bl	8002700 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027e8:	e9cd 4404 	strd	r4, r4, [sp, #16]
 80027ec:	e9cd 4406 	strd	r4, r4, [sp, #24]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80027f0:	4b37      	ldr	r3, [pc, #220]	; (80028d0 <main+0xf8>)
 80027f2:	9401      	str	r4, [sp, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80027f4:	9408      	str	r4, [sp, #32]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80027f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80027f8:	4836      	ldr	r0, [pc, #216]	; (80028d4 <main+0xfc>)
  htim1.Instance = TIM1;
 80027fa:	4d37      	ldr	r5, [pc, #220]	; (80028d8 <main+0x100>)
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80027fc:	f042 0201 	orr.w	r2, r2, #1
 8002800:	631a      	str	r2, [r3, #48]	; 0x30
 8002802:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002804:	f003 0301 	and.w	r3, r3, #1
 8002808:	9301      	str	r3, [sp, #4]
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 800280a:	4622      	mov	r2, r4
 800280c:	21ff      	movs	r1, #255	; 0xff
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800280e:	9b01      	ldr	r3, [sp, #4]
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002810:	f000 fc02 	bl	8003018 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_4|GPIO_PIN_5
 8002814:	22f5      	movs	r2, #245	; 0xf5
 8002816:	2301      	movs	r3, #1
 8002818:	e9cd 2304 	strd	r2, r3, [sp, #16]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800281c:	482d      	ldr	r0, [pc, #180]	; (80028d4 <main+0xfc>)
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_4|GPIO_PIN_5
 800281e:	2200      	movs	r2, #0
 8002820:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002822:	a904      	add	r1, sp, #16
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_4|GPIO_PIN_5
 8002824:	e9cd 2306 	strd	r2, r3, [sp, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002828:	f000 fa62 	bl	8002cf0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_1;
 800282c:	2202      	movs	r2, #2
 800282e:	2301      	movs	r3, #1
 8002830:	e9cd 2304 	strd	r2, r3, [sp, #16]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002834:	4827      	ldr	r0, [pc, #156]	; (80028d4 <main+0xfc>)
  GPIO_InitStruct.Pin = GPIO_PIN_1;
 8002836:	2200      	movs	r2, #0
 8002838:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800283a:	a904      	add	r1, sp, #16
  GPIO_InitStruct.Pin = GPIO_PIN_1;
 800283c:	e9cd 2306 	strd	r2, r3, [sp, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002840:	f000 fa56 	bl	8002cf0 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002844:	2208      	movs	r2, #8
 8002846:	2301      	movs	r3, #1
 8002848:	e9cd 2304 	strd	r2, r3, [sp, #16]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800284c:	4821      	ldr	r0, [pc, #132]	; (80028d4 <main+0xfc>)
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 800284e:	2302      	movs	r3, #2
 8002850:	2202      	movs	r2, #2
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002852:	a904      	add	r1, sp, #16
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002854:	e9cd 2306 	strd	r2, r3, [sp, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002858:	f000 fa4a 	bl	8002cf0 <HAL_GPIO_Init>
  htim1.Instance = TIM1;
 800285c:	4b1f      	ldr	r3, [pc, #124]	; (80028dc <main+0x104>)
 800285e:	602b      	str	r3, [r5, #0]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8002860:	4628      	mov	r0, r5
  htim1.Init.Period = 0xffff-1;
 8002862:	f64f 73fe 	movw	r3, #65534	; 0xfffe
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002866:	e9cd 4404 	strd	r4, r4, [sp, #16]
 800286a:	e9cd 4406 	strd	r4, r4, [sp, #24]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800286e:	e9cd 4402 	strd	r4, r4, [sp, #8]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002872:	e9c5 4401 	strd	r4, r4, [r5, #4]
  htim1.Init.RepetitionCounter = 0;
 8002876:	e9c5 4404 	strd	r4, r4, [r5, #16]
  htim1.Init.Period = 0xffff-1;
 800287a:	60eb      	str	r3, [r5, #12]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800287c:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 800287e:	f001 f963 	bl	8003b48 <HAL_TIM_Base_Init>
 8002882:	b108      	cbz	r0, 8002888 <main+0xb0>
 8002884:	b672      	cpsid	i
  while (1)
 8002886:	e7fe      	b.n	8002886 <main+0xae>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002888:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 800288c:	a904      	add	r1, sp, #16
 800288e:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002890:	9304      	str	r3, [sp, #16]
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8002892:	f001 fa11 	bl	8003cb8 <HAL_TIM_ConfigClockSource>
 8002896:	b108      	cbz	r0, 800289c <main+0xc4>
 8002898:	b672      	cpsid	i
  while (1)
 800289a:	e7fe      	b.n	800289a <main+0xc2>
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800289c:	2200      	movs	r2, #0
 800289e:	2300      	movs	r3, #0
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80028a0:	a902      	add	r1, sp, #8
 80028a2:	4628      	mov	r0, r5
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80028a4:	e9cd 2302 	strd	r2, r3, [sp, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80028a8:	f001 fc08 	bl	80040bc <HAL_TIMEx_MasterConfigSynchronization>
 80028ac:	b108      	cbz	r0, 80028b2 <main+0xda>
 80028ae:	b672      	cpsid	i
  while (1)
 80028b0:	e7fe      	b.n	80028b0 <main+0xd8>
  HAL_TIM_Base_Start(&htim1);
 80028b2:	4628      	mov	r0, r5
 80028b4:	f001 f998 	bl	8003be8 <HAL_TIM_Base_Start>
  cube_set_zero(&cube);
 80028b8:	a804      	add	r0, sp, #16
 80028ba:	f7fd fe27 	bl	800050c <cube_set_zero>
  stdin_set_params();
 80028be:	f7fd fe2b 	bl	8000518 <stdin_set_params>
	  get_cube(&cube);
 80028c2:	a804      	add	r0, sp, #16
 80028c4:	f7fd fe2a 	bl	800051c <get_cube>
	  send_cube(&cube);
 80028c8:	a804      	add	r0, sp, #16
 80028ca:	f7fd fe3d 	bl	8000548 <send_cube>
  while(1) {
 80028ce:	e7f8      	b.n	80028c2 <main+0xea>
 80028d0:	40023800 	.word	0x40023800
 80028d4:	40020000 	.word	0x40020000
 80028d8:	20000028 	.word	0x20000028
 80028dc:	40010000 	.word	0x40010000

080028e0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80028e0:	b480      	push	{r7}
 80028e2:	b083      	sub	sp, #12
 80028e4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80028e6:	2300      	movs	r3, #0
 80028e8:	607b      	str	r3, [r7, #4]
 80028ea:	4b10      	ldr	r3, [pc, #64]	; (800292c <HAL_MspInit+0x4c>)
 80028ec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80028ee:	4a0f      	ldr	r2, [pc, #60]	; (800292c <HAL_MspInit+0x4c>)
 80028f0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80028f4:	6453      	str	r3, [r2, #68]	; 0x44
 80028f6:	4b0d      	ldr	r3, [pc, #52]	; (800292c <HAL_MspInit+0x4c>)
 80028f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80028fa:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80028fe:	607b      	str	r3, [r7, #4]
 8002900:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002902:	2300      	movs	r3, #0
 8002904:	603b      	str	r3, [r7, #0]
 8002906:	4b09      	ldr	r3, [pc, #36]	; (800292c <HAL_MspInit+0x4c>)
 8002908:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800290a:	4a08      	ldr	r2, [pc, #32]	; (800292c <HAL_MspInit+0x4c>)
 800290c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002910:	6413      	str	r3, [r2, #64]	; 0x40
 8002912:	4b06      	ldr	r3, [pc, #24]	; (800292c <HAL_MspInit+0x4c>)
 8002914:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002916:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800291a:	603b      	str	r3, [r7, #0]
 800291c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800291e:	bf00      	nop
 8002920:	370c      	adds	r7, #12
 8002922:	46bd      	mov	sp, r7
 8002924:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002928:	4770      	bx	lr
 800292a:	bf00      	nop
 800292c:	40023800 	.word	0x40023800

08002930 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002930:	b480      	push	{r7}
 8002932:	b085      	sub	sp, #20
 8002934:	af00      	add	r7, sp, #0
 8002936:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8002938:	687b      	ldr	r3, [r7, #4]
 800293a:	681b      	ldr	r3, [r3, #0]
 800293c:	4a0b      	ldr	r2, [pc, #44]	; (800296c <HAL_TIM_Base_MspInit+0x3c>)
 800293e:	4293      	cmp	r3, r2
 8002940:	d10d      	bne.n	800295e <HAL_TIM_Base_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8002942:	2300      	movs	r3, #0
 8002944:	60fb      	str	r3, [r7, #12]
 8002946:	4b0a      	ldr	r3, [pc, #40]	; (8002970 <HAL_TIM_Base_MspInit+0x40>)
 8002948:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800294a:	4a09      	ldr	r2, [pc, #36]	; (8002970 <HAL_TIM_Base_MspInit+0x40>)
 800294c:	f043 0301 	orr.w	r3, r3, #1
 8002950:	6453      	str	r3, [r2, #68]	; 0x44
 8002952:	4b07      	ldr	r3, [pc, #28]	; (8002970 <HAL_TIM_Base_MspInit+0x40>)
 8002954:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002956:	f003 0301 	and.w	r3, r3, #1
 800295a:	60fb      	str	r3, [r7, #12]
 800295c:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }

}
 800295e:	bf00      	nop
 8002960:	3714      	adds	r7, #20
 8002962:	46bd      	mov	sp, r7
 8002964:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002968:	4770      	bx	lr
 800296a:	bf00      	nop
 800296c:	40010000 	.word	0x40010000
 8002970:	40023800 	.word	0x40023800

08002974 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002974:	b480      	push	{r7}
 8002976:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8002978:	e7fe      	b.n	8002978 <NMI_Handler+0x4>

0800297a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800297a:	b480      	push	{r7}
 800297c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800297e:	e7fe      	b.n	800297e <HardFault_Handler+0x4>

08002980 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002980:	b480      	push	{r7}
 8002982:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002984:	e7fe      	b.n	8002984 <MemManage_Handler+0x4>

08002986 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002986:	b480      	push	{r7}
 8002988:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800298a:	e7fe      	b.n	800298a <BusFault_Handler+0x4>

0800298c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800298c:	b480      	push	{r7}
 800298e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002990:	e7fe      	b.n	8002990 <UsageFault_Handler+0x4>

08002992 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002992:	b480      	push	{r7}
 8002994:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002996:	bf00      	nop
 8002998:	46bd      	mov	sp, r7
 800299a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800299e:	4770      	bx	lr

080029a0 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 80029a0:	b480      	push	{r7}
 80029a2:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80029a4:	bf00      	nop
 80029a6:	46bd      	mov	sp, r7
 80029a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029ac:	4770      	bx	lr

080029ae <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80029ae:	b480      	push	{r7}
 80029b0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80029b2:	bf00      	nop
 80029b4:	46bd      	mov	sp, r7
 80029b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029ba:	4770      	bx	lr

080029bc <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80029bc:	b580      	push	{r7, lr}
 80029be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80029c0:	f000 f890 	bl	8002ae4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80029c4:	bf00      	nop
 80029c6:	bd80      	pop	{r7, pc}

080029c8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80029c8:	b480      	push	{r7}
 80029ca:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80029cc:	4b06      	ldr	r3, [pc, #24]	; (80029e8 <SystemInit+0x20>)
 80029ce:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80029d2:	4a05      	ldr	r2, [pc, #20]	; (80029e8 <SystemInit+0x20>)
 80029d4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80029d8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80029dc:	bf00      	nop
 80029de:	46bd      	mov	sp, r7
 80029e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029e4:	4770      	bx	lr
 80029e6:	bf00      	nop
 80029e8:	e000ed00 	.word	0xe000ed00

080029ec <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
 80029ec:	f8df d034 	ldr.w	sp, [pc, #52]	; 8002a24 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 80029f0:	480d      	ldr	r0, [pc, #52]	; (8002a28 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 80029f2:	490e      	ldr	r1, [pc, #56]	; (8002a2c <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 80029f4:	4a0e      	ldr	r2, [pc, #56]	; (8002a30 <LoopFillZerobss+0x1e>)
  movs r3, #0
 80029f6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80029f8:	e002      	b.n	8002a00 <LoopCopyDataInit>

080029fa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80029fa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80029fc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80029fe:	3304      	adds	r3, #4

08002a00 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8002a00:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8002a02:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8002a04:	d3f9      	bcc.n	80029fa <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8002a06:	4a0b      	ldr	r2, [pc, #44]	; (8002a34 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8002a08:	4c0b      	ldr	r4, [pc, #44]	; (8002a38 <LoopFillZerobss+0x26>)
  movs r3, #0
 8002a0a:	2300      	movs	r3, #0
  b LoopFillZerobss
 8002a0c:	e001      	b.n	8002a12 <LoopFillZerobss>

08002a0e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8002a0e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8002a10:	3204      	adds	r2, #4

08002a12 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8002a12:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8002a14:	d3fb      	bcc.n	8002a0e <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8002a16:	f7ff ffd7 	bl	80029c8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8002a1a:	f001 fbcb 	bl	80041b4 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8002a1e:	f7ff fedb 	bl	80027d8 <main>
  bx  lr    
 8002a22:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8002a24:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8002a28:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8002a2c:	2000000c 	.word	0x2000000c
  ldr r2, =_sidata
 8002a30:	08004244 	.word	0x08004244
  ldr r2, =_sbss
 8002a34:	2000000c 	.word	0x2000000c
  ldr r4, =_ebss
 8002a38:	20000074 	.word	0x20000074

08002a3c <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8002a3c:	e7fe      	b.n	8002a3c <ADC_IRQHandler>
	...

08002a40 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002a40:	b580      	push	{r7, lr}
 8002a42:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8002a44:	4b0e      	ldr	r3, [pc, #56]	; (8002a80 <HAL_Init+0x40>)
 8002a46:	681b      	ldr	r3, [r3, #0]
 8002a48:	4a0d      	ldr	r2, [pc, #52]	; (8002a80 <HAL_Init+0x40>)
 8002a4a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002a4e:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8002a50:	4b0b      	ldr	r3, [pc, #44]	; (8002a80 <HAL_Init+0x40>)
 8002a52:	681b      	ldr	r3, [r3, #0]
 8002a54:	4a0a      	ldr	r2, [pc, #40]	; (8002a80 <HAL_Init+0x40>)
 8002a56:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8002a5a:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8002a5c:	4b08      	ldr	r3, [pc, #32]	; (8002a80 <HAL_Init+0x40>)
 8002a5e:	681b      	ldr	r3, [r3, #0]
 8002a60:	4a07      	ldr	r2, [pc, #28]	; (8002a80 <HAL_Init+0x40>)
 8002a62:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002a66:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8002a68:	2003      	movs	r0, #3
 8002a6a:	f000 f90d 	bl	8002c88 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8002a6e:	200f      	movs	r0, #15
 8002a70:	f000 f808 	bl	8002a84 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8002a74:	f7ff ff34 	bl	80028e0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8002a78:	2300      	movs	r3, #0
}
 8002a7a:	4618      	mov	r0, r3
 8002a7c:	bd80      	pop	{r7, pc}
 8002a7e:	bf00      	nop
 8002a80:	40023c00 	.word	0x40023c00

08002a84 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002a84:	b580      	push	{r7, lr}
 8002a86:	b082      	sub	sp, #8
 8002a88:	af00      	add	r7, sp, #0
 8002a8a:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002a8c:	4b12      	ldr	r3, [pc, #72]	; (8002ad8 <HAL_InitTick+0x54>)
 8002a8e:	681a      	ldr	r2, [r3, #0]
 8002a90:	4b12      	ldr	r3, [pc, #72]	; (8002adc <HAL_InitTick+0x58>)
 8002a92:	781b      	ldrb	r3, [r3, #0]
 8002a94:	4619      	mov	r1, r3
 8002a96:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8002a9a:	fbb3 f3f1 	udiv	r3, r3, r1
 8002a9e:	fbb2 f3f3 	udiv	r3, r2, r3
 8002aa2:	4618      	mov	r0, r3
 8002aa4:	f000 f917 	bl	8002cd6 <HAL_SYSTICK_Config>
 8002aa8:	4603      	mov	r3, r0
 8002aaa:	2b00      	cmp	r3, #0
 8002aac:	d001      	beq.n	8002ab2 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8002aae:	2301      	movs	r3, #1
 8002ab0:	e00e      	b.n	8002ad0 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002ab2:	687b      	ldr	r3, [r7, #4]
 8002ab4:	2b0f      	cmp	r3, #15
 8002ab6:	d80a      	bhi.n	8002ace <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002ab8:	2200      	movs	r2, #0
 8002aba:	6879      	ldr	r1, [r7, #4]
 8002abc:	f04f 30ff 	mov.w	r0, #4294967295
 8002ac0:	f000 f8ed 	bl	8002c9e <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002ac4:	4a06      	ldr	r2, [pc, #24]	; (8002ae0 <HAL_InitTick+0x5c>)
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8002aca:	2300      	movs	r3, #0
 8002acc:	e000      	b.n	8002ad0 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8002ace:	2301      	movs	r3, #1
}
 8002ad0:	4618      	mov	r0, r3
 8002ad2:	3708      	adds	r7, #8
 8002ad4:	46bd      	mov	sp, r7
 8002ad6:	bd80      	pop	{r7, pc}
 8002ad8:	20000000 	.word	0x20000000
 8002adc:	20000008 	.word	0x20000008
 8002ae0:	20000004 	.word	0x20000004

08002ae4 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002ae4:	b480      	push	{r7}
 8002ae6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002ae8:	4b06      	ldr	r3, [pc, #24]	; (8002b04 <HAL_IncTick+0x20>)
 8002aea:	781b      	ldrb	r3, [r3, #0]
 8002aec:	461a      	mov	r2, r3
 8002aee:	4b06      	ldr	r3, [pc, #24]	; (8002b08 <HAL_IncTick+0x24>)
 8002af0:	681b      	ldr	r3, [r3, #0]
 8002af2:	4413      	add	r3, r2
 8002af4:	4a04      	ldr	r2, [pc, #16]	; (8002b08 <HAL_IncTick+0x24>)
 8002af6:	6013      	str	r3, [r2, #0]
}
 8002af8:	bf00      	nop
 8002afa:	46bd      	mov	sp, r7
 8002afc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b00:	4770      	bx	lr
 8002b02:	bf00      	nop
 8002b04:	20000008 	.word	0x20000008
 8002b08:	20000070 	.word	0x20000070

08002b0c <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002b0c:	b480      	push	{r7}
 8002b0e:	af00      	add	r7, sp, #0
  return uwTick;
 8002b10:	4b03      	ldr	r3, [pc, #12]	; (8002b20 <HAL_GetTick+0x14>)
 8002b12:	681b      	ldr	r3, [r3, #0]
}
 8002b14:	4618      	mov	r0, r3
 8002b16:	46bd      	mov	sp, r7
 8002b18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b1c:	4770      	bx	lr
 8002b1e:	bf00      	nop
 8002b20:	20000070 	.word	0x20000070

08002b24 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8002b24:	b480      	push	{r7}
 8002b26:	b085      	sub	sp, #20
 8002b28:	af00      	add	r7, sp, #0
 8002b2a:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8002b2c:	687b      	ldr	r3, [r7, #4]
 8002b2e:	f003 0307 	and.w	r3, r3, #7
 8002b32:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8002b34:	4b0c      	ldr	r3, [pc, #48]	; (8002b68 <__NVIC_SetPriorityGrouping+0x44>)
 8002b36:	68db      	ldr	r3, [r3, #12]
 8002b38:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8002b3a:	68ba      	ldr	r2, [r7, #8]
 8002b3c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002b40:	4013      	ands	r3, r2
 8002b42:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8002b44:	68fb      	ldr	r3, [r7, #12]
 8002b46:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8002b48:	68bb      	ldr	r3, [r7, #8]
 8002b4a:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8002b4c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002b50:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8002b54:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 8002b56:	4a04      	ldr	r2, [pc, #16]	; (8002b68 <__NVIC_SetPriorityGrouping+0x44>)
 8002b58:	68bb      	ldr	r3, [r7, #8]
 8002b5a:	60d3      	str	r3, [r2, #12]
}
 8002b5c:	bf00      	nop
 8002b5e:	3714      	adds	r7, #20
 8002b60:	46bd      	mov	sp, r7
 8002b62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b66:	4770      	bx	lr
 8002b68:	e000ed00 	.word	0xe000ed00

08002b6c <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8002b6c:	b480      	push	{r7}
 8002b6e:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8002b70:	4b04      	ldr	r3, [pc, #16]	; (8002b84 <__NVIC_GetPriorityGrouping+0x18>)
 8002b72:	68db      	ldr	r3, [r3, #12]
 8002b74:	0a1b      	lsrs	r3, r3, #8
 8002b76:	f003 0307 	and.w	r3, r3, #7
}
 8002b7a:	4618      	mov	r0, r3
 8002b7c:	46bd      	mov	sp, r7
 8002b7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b82:	4770      	bx	lr
 8002b84:	e000ed00 	.word	0xe000ed00

08002b88 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8002b88:	b480      	push	{r7}
 8002b8a:	b083      	sub	sp, #12
 8002b8c:	af00      	add	r7, sp, #0
 8002b8e:	4603      	mov	r3, r0
 8002b90:	6039      	str	r1, [r7, #0]
 8002b92:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8002b94:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002b98:	2b00      	cmp	r3, #0
 8002b9a:	db0a      	blt.n	8002bb2 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002b9c:	683b      	ldr	r3, [r7, #0]
 8002b9e:	b2da      	uxtb	r2, r3
 8002ba0:	490c      	ldr	r1, [pc, #48]	; (8002bd4 <__NVIC_SetPriority+0x4c>)
 8002ba2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002ba6:	0112      	lsls	r2, r2, #4
 8002ba8:	b2d2      	uxtb	r2, r2
 8002baa:	440b      	add	r3, r1
 8002bac:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8002bb0:	e00a      	b.n	8002bc8 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8002bb2:	683b      	ldr	r3, [r7, #0]
 8002bb4:	b2da      	uxtb	r2, r3
 8002bb6:	4908      	ldr	r1, [pc, #32]	; (8002bd8 <__NVIC_SetPriority+0x50>)
 8002bb8:	79fb      	ldrb	r3, [r7, #7]
 8002bba:	f003 030f 	and.w	r3, r3, #15
 8002bbe:	3b04      	subs	r3, #4
 8002bc0:	0112      	lsls	r2, r2, #4
 8002bc2:	b2d2      	uxtb	r2, r2
 8002bc4:	440b      	add	r3, r1
 8002bc6:	761a      	strb	r2, [r3, #24]
}
 8002bc8:	bf00      	nop
 8002bca:	370c      	adds	r7, #12
 8002bcc:	46bd      	mov	sp, r7
 8002bce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bd2:	4770      	bx	lr
 8002bd4:	e000e100 	.word	0xe000e100
 8002bd8:	e000ed00 	.word	0xe000ed00

08002bdc <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8002bdc:	b480      	push	{r7}
 8002bde:	b089      	sub	sp, #36	; 0x24
 8002be0:	af00      	add	r7, sp, #0
 8002be2:	60f8      	str	r0, [r7, #12]
 8002be4:	60b9      	str	r1, [r7, #8]
 8002be6:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8002be8:	68fb      	ldr	r3, [r7, #12]
 8002bea:	f003 0307 	and.w	r3, r3, #7
 8002bee:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8002bf0:	69fb      	ldr	r3, [r7, #28]
 8002bf2:	f1c3 0307 	rsb	r3, r3, #7
 8002bf6:	2b04      	cmp	r3, #4
 8002bf8:	bf28      	it	cs
 8002bfa:	2304      	movcs	r3, #4
 8002bfc:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8002bfe:	69fb      	ldr	r3, [r7, #28]
 8002c00:	3304      	adds	r3, #4
 8002c02:	2b06      	cmp	r3, #6
 8002c04:	d902      	bls.n	8002c0c <NVIC_EncodePriority+0x30>
 8002c06:	69fb      	ldr	r3, [r7, #28]
 8002c08:	3b03      	subs	r3, #3
 8002c0a:	e000      	b.n	8002c0e <NVIC_EncodePriority+0x32>
 8002c0c:	2300      	movs	r3, #0
 8002c0e:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002c10:	f04f 32ff 	mov.w	r2, #4294967295
 8002c14:	69bb      	ldr	r3, [r7, #24]
 8002c16:	fa02 f303 	lsl.w	r3, r2, r3
 8002c1a:	43da      	mvns	r2, r3
 8002c1c:	68bb      	ldr	r3, [r7, #8]
 8002c1e:	401a      	ands	r2, r3
 8002c20:	697b      	ldr	r3, [r7, #20]
 8002c22:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8002c24:	f04f 31ff 	mov.w	r1, #4294967295
 8002c28:	697b      	ldr	r3, [r7, #20]
 8002c2a:	fa01 f303 	lsl.w	r3, r1, r3
 8002c2e:	43d9      	mvns	r1, r3
 8002c30:	687b      	ldr	r3, [r7, #4]
 8002c32:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8002c34:	4313      	orrs	r3, r2
         );
}
 8002c36:	4618      	mov	r0, r3
 8002c38:	3724      	adds	r7, #36	; 0x24
 8002c3a:	46bd      	mov	sp, r7
 8002c3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c40:	4770      	bx	lr
	...

08002c44 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8002c44:	b580      	push	{r7, lr}
 8002c46:	b082      	sub	sp, #8
 8002c48:	af00      	add	r7, sp, #0
 8002c4a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002c4c:	687b      	ldr	r3, [r7, #4]
 8002c4e:	3b01      	subs	r3, #1
 8002c50:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8002c54:	d301      	bcc.n	8002c5a <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8002c56:	2301      	movs	r3, #1
 8002c58:	e00f      	b.n	8002c7a <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002c5a:	4a0a      	ldr	r2, [pc, #40]	; (8002c84 <SysTick_Config+0x40>)
 8002c5c:	687b      	ldr	r3, [r7, #4]
 8002c5e:	3b01      	subs	r3, #1
 8002c60:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8002c62:	210f      	movs	r1, #15
 8002c64:	f04f 30ff 	mov.w	r0, #4294967295
 8002c68:	f7ff ff8e 	bl	8002b88 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002c6c:	4b05      	ldr	r3, [pc, #20]	; (8002c84 <SysTick_Config+0x40>)
 8002c6e:	2200      	movs	r2, #0
 8002c70:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8002c72:	4b04      	ldr	r3, [pc, #16]	; (8002c84 <SysTick_Config+0x40>)
 8002c74:	2207      	movs	r2, #7
 8002c76:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8002c78:	2300      	movs	r3, #0
}
 8002c7a:	4618      	mov	r0, r3
 8002c7c:	3708      	adds	r7, #8
 8002c7e:	46bd      	mov	sp, r7
 8002c80:	bd80      	pop	{r7, pc}
 8002c82:	bf00      	nop
 8002c84:	e000e010 	.word	0xe000e010

08002c88 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8002c88:	b580      	push	{r7, lr}
 8002c8a:	b082      	sub	sp, #8
 8002c8c:	af00      	add	r7, sp, #0
 8002c8e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8002c90:	6878      	ldr	r0, [r7, #4]
 8002c92:	f7ff ff47 	bl	8002b24 <__NVIC_SetPriorityGrouping>
}
 8002c96:	bf00      	nop
 8002c98:	3708      	adds	r7, #8
 8002c9a:	46bd      	mov	sp, r7
 8002c9c:	bd80      	pop	{r7, pc}

08002c9e <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8002c9e:	b580      	push	{r7, lr}
 8002ca0:	b086      	sub	sp, #24
 8002ca2:	af00      	add	r7, sp, #0
 8002ca4:	4603      	mov	r3, r0
 8002ca6:	60b9      	str	r1, [r7, #8]
 8002ca8:	607a      	str	r2, [r7, #4]
 8002caa:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8002cac:	2300      	movs	r3, #0
 8002cae:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8002cb0:	f7ff ff5c 	bl	8002b6c <__NVIC_GetPriorityGrouping>
 8002cb4:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8002cb6:	687a      	ldr	r2, [r7, #4]
 8002cb8:	68b9      	ldr	r1, [r7, #8]
 8002cba:	6978      	ldr	r0, [r7, #20]
 8002cbc:	f7ff ff8e 	bl	8002bdc <NVIC_EncodePriority>
 8002cc0:	4602      	mov	r2, r0
 8002cc2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002cc6:	4611      	mov	r1, r2
 8002cc8:	4618      	mov	r0, r3
 8002cca:	f7ff ff5d 	bl	8002b88 <__NVIC_SetPriority>
}
 8002cce:	bf00      	nop
 8002cd0:	3718      	adds	r7, #24
 8002cd2:	46bd      	mov	sp, r7
 8002cd4:	bd80      	pop	{r7, pc}

08002cd6 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8002cd6:	b580      	push	{r7, lr}
 8002cd8:	b082      	sub	sp, #8
 8002cda:	af00      	add	r7, sp, #0
 8002cdc:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8002cde:	6878      	ldr	r0, [r7, #4]
 8002ce0:	f7ff ffb0 	bl	8002c44 <SysTick_Config>
 8002ce4:	4603      	mov	r3, r0
}
 8002ce6:	4618      	mov	r0, r3
 8002ce8:	3708      	adds	r7, #8
 8002cea:	46bd      	mov	sp, r7
 8002cec:	bd80      	pop	{r7, pc}
	...

08002cf0 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8002cf0:	b480      	push	{r7}
 8002cf2:	b089      	sub	sp, #36	; 0x24
 8002cf4:	af00      	add	r7, sp, #0
 8002cf6:	6078      	str	r0, [r7, #4]
 8002cf8:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8002cfa:	2300      	movs	r3, #0
 8002cfc:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8002cfe:	2300      	movs	r3, #0
 8002d00:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8002d02:	2300      	movs	r3, #0
 8002d04:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8002d06:	2300      	movs	r3, #0
 8002d08:	61fb      	str	r3, [r7, #28]
 8002d0a:	e165      	b.n	8002fd8 <HAL_GPIO_Init+0x2e8>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8002d0c:	2201      	movs	r2, #1
 8002d0e:	69fb      	ldr	r3, [r7, #28]
 8002d10:	fa02 f303 	lsl.w	r3, r2, r3
 8002d14:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8002d16:	683b      	ldr	r3, [r7, #0]
 8002d18:	681b      	ldr	r3, [r3, #0]
 8002d1a:	697a      	ldr	r2, [r7, #20]
 8002d1c:	4013      	ands	r3, r2
 8002d1e:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8002d20:	693a      	ldr	r2, [r7, #16]
 8002d22:	697b      	ldr	r3, [r7, #20]
 8002d24:	429a      	cmp	r2, r3
 8002d26:	f040 8154 	bne.w	8002fd2 <HAL_GPIO_Init+0x2e2>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8002d2a:	683b      	ldr	r3, [r7, #0]
 8002d2c:	685b      	ldr	r3, [r3, #4]
 8002d2e:	f003 0303 	and.w	r3, r3, #3
 8002d32:	2b01      	cmp	r3, #1
 8002d34:	d005      	beq.n	8002d42 <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8002d36:	683b      	ldr	r3, [r7, #0]
 8002d38:	685b      	ldr	r3, [r3, #4]
 8002d3a:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8002d3e:	2b02      	cmp	r3, #2
 8002d40:	d130      	bne.n	8002da4 <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8002d42:	687b      	ldr	r3, [r7, #4]
 8002d44:	689b      	ldr	r3, [r3, #8]
 8002d46:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8002d48:	69fb      	ldr	r3, [r7, #28]
 8002d4a:	005b      	lsls	r3, r3, #1
 8002d4c:	2203      	movs	r2, #3
 8002d4e:	fa02 f303 	lsl.w	r3, r2, r3
 8002d52:	43db      	mvns	r3, r3
 8002d54:	69ba      	ldr	r2, [r7, #24]
 8002d56:	4013      	ands	r3, r2
 8002d58:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8002d5a:	683b      	ldr	r3, [r7, #0]
 8002d5c:	68da      	ldr	r2, [r3, #12]
 8002d5e:	69fb      	ldr	r3, [r7, #28]
 8002d60:	005b      	lsls	r3, r3, #1
 8002d62:	fa02 f303 	lsl.w	r3, r2, r3
 8002d66:	69ba      	ldr	r2, [r7, #24]
 8002d68:	4313      	orrs	r3, r2
 8002d6a:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	69ba      	ldr	r2, [r7, #24]
 8002d70:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	685b      	ldr	r3, [r3, #4]
 8002d76:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8002d78:	2201      	movs	r2, #1
 8002d7a:	69fb      	ldr	r3, [r7, #28]
 8002d7c:	fa02 f303 	lsl.w	r3, r2, r3
 8002d80:	43db      	mvns	r3, r3
 8002d82:	69ba      	ldr	r2, [r7, #24]
 8002d84:	4013      	ands	r3, r2
 8002d86:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8002d88:	683b      	ldr	r3, [r7, #0]
 8002d8a:	685b      	ldr	r3, [r3, #4]
 8002d8c:	091b      	lsrs	r3, r3, #4
 8002d8e:	f003 0201 	and.w	r2, r3, #1
 8002d92:	69fb      	ldr	r3, [r7, #28]
 8002d94:	fa02 f303 	lsl.w	r3, r2, r3
 8002d98:	69ba      	ldr	r2, [r7, #24]
 8002d9a:	4313      	orrs	r3, r2
 8002d9c:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	69ba      	ldr	r2, [r7, #24]
 8002da2:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8002da4:	683b      	ldr	r3, [r7, #0]
 8002da6:	685b      	ldr	r3, [r3, #4]
 8002da8:	f003 0303 	and.w	r3, r3, #3
 8002dac:	2b03      	cmp	r3, #3
 8002dae:	d017      	beq.n	8002de0 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	68db      	ldr	r3, [r3, #12]
 8002db4:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8002db6:	69fb      	ldr	r3, [r7, #28]
 8002db8:	005b      	lsls	r3, r3, #1
 8002dba:	2203      	movs	r2, #3
 8002dbc:	fa02 f303 	lsl.w	r3, r2, r3
 8002dc0:	43db      	mvns	r3, r3
 8002dc2:	69ba      	ldr	r2, [r7, #24]
 8002dc4:	4013      	ands	r3, r2
 8002dc6:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8002dc8:	683b      	ldr	r3, [r7, #0]
 8002dca:	689a      	ldr	r2, [r3, #8]
 8002dcc:	69fb      	ldr	r3, [r7, #28]
 8002dce:	005b      	lsls	r3, r3, #1
 8002dd0:	fa02 f303 	lsl.w	r3, r2, r3
 8002dd4:	69ba      	ldr	r2, [r7, #24]
 8002dd6:	4313      	orrs	r3, r2
 8002dd8:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8002dda:	687b      	ldr	r3, [r7, #4]
 8002ddc:	69ba      	ldr	r2, [r7, #24]
 8002dde:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8002de0:	683b      	ldr	r3, [r7, #0]
 8002de2:	685b      	ldr	r3, [r3, #4]
 8002de4:	f003 0303 	and.w	r3, r3, #3
 8002de8:	2b02      	cmp	r3, #2
 8002dea:	d123      	bne.n	8002e34 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8002dec:	69fb      	ldr	r3, [r7, #28]
 8002dee:	08da      	lsrs	r2, r3, #3
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	3208      	adds	r2, #8
 8002df4:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002df8:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8002dfa:	69fb      	ldr	r3, [r7, #28]
 8002dfc:	f003 0307 	and.w	r3, r3, #7
 8002e00:	009b      	lsls	r3, r3, #2
 8002e02:	220f      	movs	r2, #15
 8002e04:	fa02 f303 	lsl.w	r3, r2, r3
 8002e08:	43db      	mvns	r3, r3
 8002e0a:	69ba      	ldr	r2, [r7, #24]
 8002e0c:	4013      	ands	r3, r2
 8002e0e:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8002e10:	683b      	ldr	r3, [r7, #0]
 8002e12:	691a      	ldr	r2, [r3, #16]
 8002e14:	69fb      	ldr	r3, [r7, #28]
 8002e16:	f003 0307 	and.w	r3, r3, #7
 8002e1a:	009b      	lsls	r3, r3, #2
 8002e1c:	fa02 f303 	lsl.w	r3, r2, r3
 8002e20:	69ba      	ldr	r2, [r7, #24]
 8002e22:	4313      	orrs	r3, r2
 8002e24:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8002e26:	69fb      	ldr	r3, [r7, #28]
 8002e28:	08da      	lsrs	r2, r3, #3
 8002e2a:	687b      	ldr	r3, [r7, #4]
 8002e2c:	3208      	adds	r2, #8
 8002e2e:	69b9      	ldr	r1, [r7, #24]
 8002e30:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	681b      	ldr	r3, [r3, #0]
 8002e38:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8002e3a:	69fb      	ldr	r3, [r7, #28]
 8002e3c:	005b      	lsls	r3, r3, #1
 8002e3e:	2203      	movs	r2, #3
 8002e40:	fa02 f303 	lsl.w	r3, r2, r3
 8002e44:	43db      	mvns	r3, r3
 8002e46:	69ba      	ldr	r2, [r7, #24]
 8002e48:	4013      	ands	r3, r2
 8002e4a:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8002e4c:	683b      	ldr	r3, [r7, #0]
 8002e4e:	685b      	ldr	r3, [r3, #4]
 8002e50:	f003 0203 	and.w	r2, r3, #3
 8002e54:	69fb      	ldr	r3, [r7, #28]
 8002e56:	005b      	lsls	r3, r3, #1
 8002e58:	fa02 f303 	lsl.w	r3, r2, r3
 8002e5c:	69ba      	ldr	r2, [r7, #24]
 8002e5e:	4313      	orrs	r3, r2
 8002e60:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 8002e62:	687b      	ldr	r3, [r7, #4]
 8002e64:	69ba      	ldr	r2, [r7, #24]
 8002e66:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8002e68:	683b      	ldr	r3, [r7, #0]
 8002e6a:	685b      	ldr	r3, [r3, #4]
 8002e6c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002e70:	2b00      	cmp	r3, #0
 8002e72:	f000 80ae 	beq.w	8002fd2 <HAL_GPIO_Init+0x2e2>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002e76:	2300      	movs	r3, #0
 8002e78:	60fb      	str	r3, [r7, #12]
 8002e7a:	4b5d      	ldr	r3, [pc, #372]	; (8002ff0 <HAL_GPIO_Init+0x300>)
 8002e7c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002e7e:	4a5c      	ldr	r2, [pc, #368]	; (8002ff0 <HAL_GPIO_Init+0x300>)
 8002e80:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002e84:	6453      	str	r3, [r2, #68]	; 0x44
 8002e86:	4b5a      	ldr	r3, [pc, #360]	; (8002ff0 <HAL_GPIO_Init+0x300>)
 8002e88:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002e8a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002e8e:	60fb      	str	r3, [r7, #12]
 8002e90:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8002e92:	4a58      	ldr	r2, [pc, #352]	; (8002ff4 <HAL_GPIO_Init+0x304>)
 8002e94:	69fb      	ldr	r3, [r7, #28]
 8002e96:	089b      	lsrs	r3, r3, #2
 8002e98:	3302      	adds	r3, #2
 8002e9a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002e9e:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8002ea0:	69fb      	ldr	r3, [r7, #28]
 8002ea2:	f003 0303 	and.w	r3, r3, #3
 8002ea6:	009b      	lsls	r3, r3, #2
 8002ea8:	220f      	movs	r2, #15
 8002eaa:	fa02 f303 	lsl.w	r3, r2, r3
 8002eae:	43db      	mvns	r3, r3
 8002eb0:	69ba      	ldr	r2, [r7, #24]
 8002eb2:	4013      	ands	r3, r2
 8002eb4:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	4a4f      	ldr	r2, [pc, #316]	; (8002ff8 <HAL_GPIO_Init+0x308>)
 8002eba:	4293      	cmp	r3, r2
 8002ebc:	d025      	beq.n	8002f0a <HAL_GPIO_Init+0x21a>
 8002ebe:	687b      	ldr	r3, [r7, #4]
 8002ec0:	4a4e      	ldr	r2, [pc, #312]	; (8002ffc <HAL_GPIO_Init+0x30c>)
 8002ec2:	4293      	cmp	r3, r2
 8002ec4:	d01f      	beq.n	8002f06 <HAL_GPIO_Init+0x216>
 8002ec6:	687b      	ldr	r3, [r7, #4]
 8002ec8:	4a4d      	ldr	r2, [pc, #308]	; (8003000 <HAL_GPIO_Init+0x310>)
 8002eca:	4293      	cmp	r3, r2
 8002ecc:	d019      	beq.n	8002f02 <HAL_GPIO_Init+0x212>
 8002ece:	687b      	ldr	r3, [r7, #4]
 8002ed0:	4a4c      	ldr	r2, [pc, #304]	; (8003004 <HAL_GPIO_Init+0x314>)
 8002ed2:	4293      	cmp	r3, r2
 8002ed4:	d013      	beq.n	8002efe <HAL_GPIO_Init+0x20e>
 8002ed6:	687b      	ldr	r3, [r7, #4]
 8002ed8:	4a4b      	ldr	r2, [pc, #300]	; (8003008 <HAL_GPIO_Init+0x318>)
 8002eda:	4293      	cmp	r3, r2
 8002edc:	d00d      	beq.n	8002efa <HAL_GPIO_Init+0x20a>
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	4a4a      	ldr	r2, [pc, #296]	; (800300c <HAL_GPIO_Init+0x31c>)
 8002ee2:	4293      	cmp	r3, r2
 8002ee4:	d007      	beq.n	8002ef6 <HAL_GPIO_Init+0x206>
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	4a49      	ldr	r2, [pc, #292]	; (8003010 <HAL_GPIO_Init+0x320>)
 8002eea:	4293      	cmp	r3, r2
 8002eec:	d101      	bne.n	8002ef2 <HAL_GPIO_Init+0x202>
 8002eee:	2306      	movs	r3, #6
 8002ef0:	e00c      	b.n	8002f0c <HAL_GPIO_Init+0x21c>
 8002ef2:	2307      	movs	r3, #7
 8002ef4:	e00a      	b.n	8002f0c <HAL_GPIO_Init+0x21c>
 8002ef6:	2305      	movs	r3, #5
 8002ef8:	e008      	b.n	8002f0c <HAL_GPIO_Init+0x21c>
 8002efa:	2304      	movs	r3, #4
 8002efc:	e006      	b.n	8002f0c <HAL_GPIO_Init+0x21c>
 8002efe:	2303      	movs	r3, #3
 8002f00:	e004      	b.n	8002f0c <HAL_GPIO_Init+0x21c>
 8002f02:	2302      	movs	r3, #2
 8002f04:	e002      	b.n	8002f0c <HAL_GPIO_Init+0x21c>
 8002f06:	2301      	movs	r3, #1
 8002f08:	e000      	b.n	8002f0c <HAL_GPIO_Init+0x21c>
 8002f0a:	2300      	movs	r3, #0
 8002f0c:	69fa      	ldr	r2, [r7, #28]
 8002f0e:	f002 0203 	and.w	r2, r2, #3
 8002f12:	0092      	lsls	r2, r2, #2
 8002f14:	4093      	lsls	r3, r2
 8002f16:	69ba      	ldr	r2, [r7, #24]
 8002f18:	4313      	orrs	r3, r2
 8002f1a:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8002f1c:	4935      	ldr	r1, [pc, #212]	; (8002ff4 <HAL_GPIO_Init+0x304>)
 8002f1e:	69fb      	ldr	r3, [r7, #28]
 8002f20:	089b      	lsrs	r3, r3, #2
 8002f22:	3302      	adds	r3, #2
 8002f24:	69ba      	ldr	r2, [r7, #24]
 8002f26:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8002f2a:	4b3a      	ldr	r3, [pc, #232]	; (8003014 <HAL_GPIO_Init+0x324>)
 8002f2c:	689b      	ldr	r3, [r3, #8]
 8002f2e:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8002f30:	693b      	ldr	r3, [r7, #16]
 8002f32:	43db      	mvns	r3, r3
 8002f34:	69ba      	ldr	r2, [r7, #24]
 8002f36:	4013      	ands	r3, r2
 8002f38:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8002f3a:	683b      	ldr	r3, [r7, #0]
 8002f3c:	685b      	ldr	r3, [r3, #4]
 8002f3e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002f42:	2b00      	cmp	r3, #0
 8002f44:	d003      	beq.n	8002f4e <HAL_GPIO_Init+0x25e>
        {
          temp |= iocurrent;
 8002f46:	69ba      	ldr	r2, [r7, #24]
 8002f48:	693b      	ldr	r3, [r7, #16]
 8002f4a:	4313      	orrs	r3, r2
 8002f4c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8002f4e:	4a31      	ldr	r2, [pc, #196]	; (8003014 <HAL_GPIO_Init+0x324>)
 8002f50:	69bb      	ldr	r3, [r7, #24]
 8002f52:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 8002f54:	4b2f      	ldr	r3, [pc, #188]	; (8003014 <HAL_GPIO_Init+0x324>)
 8002f56:	68db      	ldr	r3, [r3, #12]
 8002f58:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8002f5a:	693b      	ldr	r3, [r7, #16]
 8002f5c:	43db      	mvns	r3, r3
 8002f5e:	69ba      	ldr	r2, [r7, #24]
 8002f60:	4013      	ands	r3, r2
 8002f62:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8002f64:	683b      	ldr	r3, [r7, #0]
 8002f66:	685b      	ldr	r3, [r3, #4]
 8002f68:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002f6c:	2b00      	cmp	r3, #0
 8002f6e:	d003      	beq.n	8002f78 <HAL_GPIO_Init+0x288>
        {
          temp |= iocurrent;
 8002f70:	69ba      	ldr	r2, [r7, #24]
 8002f72:	693b      	ldr	r3, [r7, #16]
 8002f74:	4313      	orrs	r3, r2
 8002f76:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8002f78:	4a26      	ldr	r2, [pc, #152]	; (8003014 <HAL_GPIO_Init+0x324>)
 8002f7a:	69bb      	ldr	r3, [r7, #24]
 8002f7c:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 8002f7e:	4b25      	ldr	r3, [pc, #148]	; (8003014 <HAL_GPIO_Init+0x324>)
 8002f80:	685b      	ldr	r3, [r3, #4]
 8002f82:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8002f84:	693b      	ldr	r3, [r7, #16]
 8002f86:	43db      	mvns	r3, r3
 8002f88:	69ba      	ldr	r2, [r7, #24]
 8002f8a:	4013      	ands	r3, r2
 8002f8c:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8002f8e:	683b      	ldr	r3, [r7, #0]
 8002f90:	685b      	ldr	r3, [r3, #4]
 8002f92:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002f96:	2b00      	cmp	r3, #0
 8002f98:	d003      	beq.n	8002fa2 <HAL_GPIO_Init+0x2b2>
        {
          temp |= iocurrent;
 8002f9a:	69ba      	ldr	r2, [r7, #24]
 8002f9c:	693b      	ldr	r3, [r7, #16]
 8002f9e:	4313      	orrs	r3, r2
 8002fa0:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 8002fa2:	4a1c      	ldr	r2, [pc, #112]	; (8003014 <HAL_GPIO_Init+0x324>)
 8002fa4:	69bb      	ldr	r3, [r7, #24]
 8002fa6:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8002fa8:	4b1a      	ldr	r3, [pc, #104]	; (8003014 <HAL_GPIO_Init+0x324>)
 8002faa:	681b      	ldr	r3, [r3, #0]
 8002fac:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8002fae:	693b      	ldr	r3, [r7, #16]
 8002fb0:	43db      	mvns	r3, r3
 8002fb2:	69ba      	ldr	r2, [r7, #24]
 8002fb4:	4013      	ands	r3, r2
 8002fb6:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8002fb8:	683b      	ldr	r3, [r7, #0]
 8002fba:	685b      	ldr	r3, [r3, #4]
 8002fbc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002fc0:	2b00      	cmp	r3, #0
 8002fc2:	d003      	beq.n	8002fcc <HAL_GPIO_Init+0x2dc>
        {
          temp |= iocurrent;
 8002fc4:	69ba      	ldr	r2, [r7, #24]
 8002fc6:	693b      	ldr	r3, [r7, #16]
 8002fc8:	4313      	orrs	r3, r2
 8002fca:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8002fcc:	4a11      	ldr	r2, [pc, #68]	; (8003014 <HAL_GPIO_Init+0x324>)
 8002fce:	69bb      	ldr	r3, [r7, #24]
 8002fd0:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8002fd2:	69fb      	ldr	r3, [r7, #28]
 8002fd4:	3301      	adds	r3, #1
 8002fd6:	61fb      	str	r3, [r7, #28]
 8002fd8:	69fb      	ldr	r3, [r7, #28]
 8002fda:	2b0f      	cmp	r3, #15
 8002fdc:	f67f ae96 	bls.w	8002d0c <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8002fe0:	bf00      	nop
 8002fe2:	bf00      	nop
 8002fe4:	3724      	adds	r7, #36	; 0x24
 8002fe6:	46bd      	mov	sp, r7
 8002fe8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fec:	4770      	bx	lr
 8002fee:	bf00      	nop
 8002ff0:	40023800 	.word	0x40023800
 8002ff4:	40013800 	.word	0x40013800
 8002ff8:	40020000 	.word	0x40020000
 8002ffc:	40020400 	.word	0x40020400
 8003000:	40020800 	.word	0x40020800
 8003004:	40020c00 	.word	0x40020c00
 8003008:	40021000 	.word	0x40021000
 800300c:	40021400 	.word	0x40021400
 8003010:	40021800 	.word	0x40021800
 8003014:	40013c00 	.word	0x40013c00

08003018 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8003018:	b480      	push	{r7}
 800301a:	b083      	sub	sp, #12
 800301c:	af00      	add	r7, sp, #0
 800301e:	6078      	str	r0, [r7, #4]
 8003020:	460b      	mov	r3, r1
 8003022:	807b      	strh	r3, [r7, #2]
 8003024:	4613      	mov	r3, r2
 8003026:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8003028:	787b      	ldrb	r3, [r7, #1]
 800302a:	2b00      	cmp	r3, #0
 800302c:	d003      	beq.n	8003036 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 800302e:	887a      	ldrh	r2, [r7, #2]
 8003030:	687b      	ldr	r3, [r7, #4]
 8003032:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 8003034:	e003      	b.n	800303e <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8003036:	887b      	ldrh	r3, [r7, #2]
 8003038:	041a      	lsls	r2, r3, #16
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	619a      	str	r2, [r3, #24]
}
 800303e:	bf00      	nop
 8003040:	370c      	adds	r7, #12
 8003042:	46bd      	mov	sp, r7
 8003044:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003048:	4770      	bx	lr
	...

0800304c <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800304c:	b580      	push	{r7, lr}
 800304e:	b082      	sub	sp, #8
 8003050:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0U;
 8003052:	2300      	movs	r3, #0
 8003054:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 8003056:	2300      	movs	r3, #0
 8003058:	603b      	str	r3, [r7, #0]
 800305a:	4b20      	ldr	r3, [pc, #128]	; (80030dc <HAL_PWREx_EnableOverDrive+0x90>)
 800305c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800305e:	4a1f      	ldr	r2, [pc, #124]	; (80030dc <HAL_PWREx_EnableOverDrive+0x90>)
 8003060:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003064:	6413      	str	r3, [r2, #64]	; 0x40
 8003066:	4b1d      	ldr	r3, [pc, #116]	; (80030dc <HAL_PWREx_EnableOverDrive+0x90>)
 8003068:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800306a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800306e:	603b      	str	r3, [r7, #0]
 8003070:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 180 Mhz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8003072:	4b1b      	ldr	r3, [pc, #108]	; (80030e0 <HAL_PWREx_EnableOverDrive+0x94>)
 8003074:	2201      	movs	r2, #1
 8003076:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8003078:	f7ff fd48 	bl	8002b0c <HAL_GetTick>
 800307c:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800307e:	e009      	b.n	8003094 <HAL_PWREx_EnableOverDrive+0x48>
  {
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8003080:	f7ff fd44 	bl	8002b0c <HAL_GetTick>
 8003084:	4602      	mov	r2, r0
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	1ad3      	subs	r3, r2, r3
 800308a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 800308e:	d901      	bls.n	8003094 <HAL_PWREx_EnableOverDrive+0x48>
    {
      return HAL_TIMEOUT;
 8003090:	2303      	movs	r3, #3
 8003092:	e01f      	b.n	80030d4 <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8003094:	4b13      	ldr	r3, [pc, #76]	; (80030e4 <HAL_PWREx_EnableOverDrive+0x98>)
 8003096:	685b      	ldr	r3, [r3, #4]
 8003098:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800309c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80030a0:	d1ee      	bne.n	8003080 <HAL_PWREx_EnableOverDrive+0x34>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80030a2:	4b11      	ldr	r3, [pc, #68]	; (80030e8 <HAL_PWREx_EnableOverDrive+0x9c>)
 80030a4:	2201      	movs	r2, #1
 80030a6:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80030a8:	f7ff fd30 	bl	8002b0c <HAL_GetTick>
 80030ac:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80030ae:	e009      	b.n	80030c4 <HAL_PWREx_EnableOverDrive+0x78>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80030b0:	f7ff fd2c 	bl	8002b0c <HAL_GetTick>
 80030b4:	4602      	mov	r2, r0
 80030b6:	687b      	ldr	r3, [r7, #4]
 80030b8:	1ad3      	subs	r3, r2, r3
 80030ba:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 80030be:	d901      	bls.n	80030c4 <HAL_PWREx_EnableOverDrive+0x78>
    {
      return HAL_TIMEOUT;
 80030c0:	2303      	movs	r3, #3
 80030c2:	e007      	b.n	80030d4 <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80030c4:	4b07      	ldr	r3, [pc, #28]	; (80030e4 <HAL_PWREx_EnableOverDrive+0x98>)
 80030c6:	685b      	ldr	r3, [r3, #4]
 80030c8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80030cc:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 80030d0:	d1ee      	bne.n	80030b0 <HAL_PWREx_EnableOverDrive+0x64>
    }
  } 
  return HAL_OK;
 80030d2:	2300      	movs	r3, #0
}
 80030d4:	4618      	mov	r0, r3
 80030d6:	3708      	adds	r7, #8
 80030d8:	46bd      	mov	sp, r7
 80030da:	bd80      	pop	{r7, pc}
 80030dc:	40023800 	.word	0x40023800
 80030e0:	420e0040 	.word	0x420e0040
 80030e4:	40007000 	.word	0x40007000
 80030e8:	420e0044 	.word	0x420e0044

080030ec <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 80030ec:	b580      	push	{r7, lr}
 80030ee:	b084      	sub	sp, #16
 80030f0:	af00      	add	r7, sp, #0
 80030f2:	6078      	str	r0, [r7, #4]
 80030f4:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	2b00      	cmp	r3, #0
 80030fa:	d101      	bne.n	8003100 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 80030fc:	2301      	movs	r3, #1
 80030fe:	e0cc      	b.n	800329a <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8003100:	4b68      	ldr	r3, [pc, #416]	; (80032a4 <HAL_RCC_ClockConfig+0x1b8>)
 8003102:	681b      	ldr	r3, [r3, #0]
 8003104:	f003 030f 	and.w	r3, r3, #15
 8003108:	683a      	ldr	r2, [r7, #0]
 800310a:	429a      	cmp	r2, r3
 800310c:	d90c      	bls.n	8003128 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800310e:	4b65      	ldr	r3, [pc, #404]	; (80032a4 <HAL_RCC_ClockConfig+0x1b8>)
 8003110:	683a      	ldr	r2, [r7, #0]
 8003112:	b2d2      	uxtb	r2, r2
 8003114:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003116:	4b63      	ldr	r3, [pc, #396]	; (80032a4 <HAL_RCC_ClockConfig+0x1b8>)
 8003118:	681b      	ldr	r3, [r3, #0]
 800311a:	f003 030f 	and.w	r3, r3, #15
 800311e:	683a      	ldr	r2, [r7, #0]
 8003120:	429a      	cmp	r2, r3
 8003122:	d001      	beq.n	8003128 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8003124:	2301      	movs	r3, #1
 8003126:	e0b8      	b.n	800329a <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8003128:	687b      	ldr	r3, [r7, #4]
 800312a:	681b      	ldr	r3, [r3, #0]
 800312c:	f003 0302 	and.w	r3, r3, #2
 8003130:	2b00      	cmp	r3, #0
 8003132:	d020      	beq.n	8003176 <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	681b      	ldr	r3, [r3, #0]
 8003138:	f003 0304 	and.w	r3, r3, #4
 800313c:	2b00      	cmp	r3, #0
 800313e:	d005      	beq.n	800314c <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8003140:	4b59      	ldr	r3, [pc, #356]	; (80032a8 <HAL_RCC_ClockConfig+0x1bc>)
 8003142:	689b      	ldr	r3, [r3, #8]
 8003144:	4a58      	ldr	r2, [pc, #352]	; (80032a8 <HAL_RCC_ClockConfig+0x1bc>)
 8003146:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800314a:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800314c:	687b      	ldr	r3, [r7, #4]
 800314e:	681b      	ldr	r3, [r3, #0]
 8003150:	f003 0308 	and.w	r3, r3, #8
 8003154:	2b00      	cmp	r3, #0
 8003156:	d005      	beq.n	8003164 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8003158:	4b53      	ldr	r3, [pc, #332]	; (80032a8 <HAL_RCC_ClockConfig+0x1bc>)
 800315a:	689b      	ldr	r3, [r3, #8]
 800315c:	4a52      	ldr	r2, [pc, #328]	; (80032a8 <HAL_RCC_ClockConfig+0x1bc>)
 800315e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8003162:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8003164:	4b50      	ldr	r3, [pc, #320]	; (80032a8 <HAL_RCC_ClockConfig+0x1bc>)
 8003166:	689b      	ldr	r3, [r3, #8]
 8003168:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	689b      	ldr	r3, [r3, #8]
 8003170:	494d      	ldr	r1, [pc, #308]	; (80032a8 <HAL_RCC_ClockConfig+0x1bc>)
 8003172:	4313      	orrs	r3, r2
 8003174:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8003176:	687b      	ldr	r3, [r7, #4]
 8003178:	681b      	ldr	r3, [r3, #0]
 800317a:	f003 0301 	and.w	r3, r3, #1
 800317e:	2b00      	cmp	r3, #0
 8003180:	d044      	beq.n	800320c <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	685b      	ldr	r3, [r3, #4]
 8003186:	2b01      	cmp	r3, #1
 8003188:	d107      	bne.n	800319a <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800318a:	4b47      	ldr	r3, [pc, #284]	; (80032a8 <HAL_RCC_ClockConfig+0x1bc>)
 800318c:	681b      	ldr	r3, [r3, #0]
 800318e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003192:	2b00      	cmp	r3, #0
 8003194:	d119      	bne.n	80031ca <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8003196:	2301      	movs	r3, #1
 8003198:	e07f      	b.n	800329a <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800319a:	687b      	ldr	r3, [r7, #4]
 800319c:	685b      	ldr	r3, [r3, #4]
 800319e:	2b02      	cmp	r3, #2
 80031a0:	d003      	beq.n	80031aa <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 80031a2:	687b      	ldr	r3, [r7, #4]
 80031a4:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80031a6:	2b03      	cmp	r3, #3
 80031a8:	d107      	bne.n	80031ba <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80031aa:	4b3f      	ldr	r3, [pc, #252]	; (80032a8 <HAL_RCC_ClockConfig+0x1bc>)
 80031ac:	681b      	ldr	r3, [r3, #0]
 80031ae:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80031b2:	2b00      	cmp	r3, #0
 80031b4:	d109      	bne.n	80031ca <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80031b6:	2301      	movs	r3, #1
 80031b8:	e06f      	b.n	800329a <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80031ba:	4b3b      	ldr	r3, [pc, #236]	; (80032a8 <HAL_RCC_ClockConfig+0x1bc>)
 80031bc:	681b      	ldr	r3, [r3, #0]
 80031be:	f003 0302 	and.w	r3, r3, #2
 80031c2:	2b00      	cmp	r3, #0
 80031c4:	d101      	bne.n	80031ca <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80031c6:	2301      	movs	r3, #1
 80031c8:	e067      	b.n	800329a <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80031ca:	4b37      	ldr	r3, [pc, #220]	; (80032a8 <HAL_RCC_ClockConfig+0x1bc>)
 80031cc:	689b      	ldr	r3, [r3, #8]
 80031ce:	f023 0203 	bic.w	r2, r3, #3
 80031d2:	687b      	ldr	r3, [r7, #4]
 80031d4:	685b      	ldr	r3, [r3, #4]
 80031d6:	4934      	ldr	r1, [pc, #208]	; (80032a8 <HAL_RCC_ClockConfig+0x1bc>)
 80031d8:	4313      	orrs	r3, r2
 80031da:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 80031dc:	f7ff fc96 	bl	8002b0c <HAL_GetTick>
 80031e0:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80031e2:	e00a      	b.n	80031fa <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80031e4:	f7ff fc92 	bl	8002b0c <HAL_GetTick>
 80031e8:	4602      	mov	r2, r0
 80031ea:	68fb      	ldr	r3, [r7, #12]
 80031ec:	1ad3      	subs	r3, r2, r3
 80031ee:	f241 3288 	movw	r2, #5000	; 0x1388
 80031f2:	4293      	cmp	r3, r2
 80031f4:	d901      	bls.n	80031fa <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 80031f6:	2303      	movs	r3, #3
 80031f8:	e04f      	b.n	800329a <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80031fa:	4b2b      	ldr	r3, [pc, #172]	; (80032a8 <HAL_RCC_ClockConfig+0x1bc>)
 80031fc:	689b      	ldr	r3, [r3, #8]
 80031fe:	f003 020c 	and.w	r2, r3, #12
 8003202:	687b      	ldr	r3, [r7, #4]
 8003204:	685b      	ldr	r3, [r3, #4]
 8003206:	009b      	lsls	r3, r3, #2
 8003208:	429a      	cmp	r2, r3
 800320a:	d1eb      	bne.n	80031e4 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800320c:	4b25      	ldr	r3, [pc, #148]	; (80032a4 <HAL_RCC_ClockConfig+0x1b8>)
 800320e:	681b      	ldr	r3, [r3, #0]
 8003210:	f003 030f 	and.w	r3, r3, #15
 8003214:	683a      	ldr	r2, [r7, #0]
 8003216:	429a      	cmp	r2, r3
 8003218:	d20c      	bcs.n	8003234 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800321a:	4b22      	ldr	r3, [pc, #136]	; (80032a4 <HAL_RCC_ClockConfig+0x1b8>)
 800321c:	683a      	ldr	r2, [r7, #0]
 800321e:	b2d2      	uxtb	r2, r2
 8003220:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003222:	4b20      	ldr	r3, [pc, #128]	; (80032a4 <HAL_RCC_ClockConfig+0x1b8>)
 8003224:	681b      	ldr	r3, [r3, #0]
 8003226:	f003 030f 	and.w	r3, r3, #15
 800322a:	683a      	ldr	r2, [r7, #0]
 800322c:	429a      	cmp	r2, r3
 800322e:	d001      	beq.n	8003234 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8003230:	2301      	movs	r3, #1
 8003232:	e032      	b.n	800329a <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003234:	687b      	ldr	r3, [r7, #4]
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	f003 0304 	and.w	r3, r3, #4
 800323c:	2b00      	cmp	r3, #0
 800323e:	d008      	beq.n	8003252 <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8003240:	4b19      	ldr	r3, [pc, #100]	; (80032a8 <HAL_RCC_ClockConfig+0x1bc>)
 8003242:	689b      	ldr	r3, [r3, #8]
 8003244:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8003248:	687b      	ldr	r3, [r7, #4]
 800324a:	68db      	ldr	r3, [r3, #12]
 800324c:	4916      	ldr	r1, [pc, #88]	; (80032a8 <HAL_RCC_ClockConfig+0x1bc>)
 800324e:	4313      	orrs	r3, r2
 8003250:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8003252:	687b      	ldr	r3, [r7, #4]
 8003254:	681b      	ldr	r3, [r3, #0]
 8003256:	f003 0308 	and.w	r3, r3, #8
 800325a:	2b00      	cmp	r3, #0
 800325c:	d009      	beq.n	8003272 <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800325e:	4b12      	ldr	r3, [pc, #72]	; (80032a8 <HAL_RCC_ClockConfig+0x1bc>)
 8003260:	689b      	ldr	r3, [r3, #8]
 8003262:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	691b      	ldr	r3, [r3, #16]
 800326a:	00db      	lsls	r3, r3, #3
 800326c:	490e      	ldr	r1, [pc, #56]	; (80032a8 <HAL_RCC_ClockConfig+0x1bc>)
 800326e:	4313      	orrs	r3, r2
 8003270:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8003272:	f000 f821 	bl	80032b8 <HAL_RCC_GetSysClockFreq>
 8003276:	4602      	mov	r2, r0
 8003278:	4b0b      	ldr	r3, [pc, #44]	; (80032a8 <HAL_RCC_ClockConfig+0x1bc>)
 800327a:	689b      	ldr	r3, [r3, #8]
 800327c:	091b      	lsrs	r3, r3, #4
 800327e:	f003 030f 	and.w	r3, r3, #15
 8003282:	490a      	ldr	r1, [pc, #40]	; (80032ac <HAL_RCC_ClockConfig+0x1c0>)
 8003284:	5ccb      	ldrb	r3, [r1, r3]
 8003286:	fa22 f303 	lsr.w	r3, r2, r3
 800328a:	4a09      	ldr	r2, [pc, #36]	; (80032b0 <HAL_RCC_ClockConfig+0x1c4>)
 800328c:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 800328e:	4b09      	ldr	r3, [pc, #36]	; (80032b4 <HAL_RCC_ClockConfig+0x1c8>)
 8003290:	681b      	ldr	r3, [r3, #0]
 8003292:	4618      	mov	r0, r3
 8003294:	f7ff fbf6 	bl	8002a84 <HAL_InitTick>

  return HAL_OK;
 8003298:	2300      	movs	r3, #0
}
 800329a:	4618      	mov	r0, r3
 800329c:	3710      	adds	r7, #16
 800329e:	46bd      	mov	sp, r7
 80032a0:	bd80      	pop	{r7, pc}
 80032a2:	bf00      	nop
 80032a4:	40023c00 	.word	0x40023c00
 80032a8:	40023800 	.word	0x40023800
 80032ac:	08004224 	.word	0x08004224
 80032b0:	20000000 	.word	0x20000000
 80032b4:	20000004 	.word	0x20000004

080032b8 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80032b8:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80032bc:	b0a6      	sub	sp, #152	; 0x98
 80032be:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U;
 80032c0:	2300      	movs	r3, #0
 80032c2:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
  uint32_t pllvco = 0U;
 80032c6:	2300      	movs	r3, #0
 80032c8:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
  uint32_t pllp = 0U;
 80032cc:	2300      	movs	r3, #0
 80032ce:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
  uint32_t pllr = 0U;
 80032d2:	2300      	movs	r3, #0
 80032d4:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
  uint32_t sysclockfreq = 0U;
 80032d8:	2300      	movs	r3, #0
 80032da:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80032de:	4bc8      	ldr	r3, [pc, #800]	; (8003600 <HAL_RCC_GetSysClockFreq+0x348>)
 80032e0:	689b      	ldr	r3, [r3, #8]
 80032e2:	f003 030c 	and.w	r3, r3, #12
 80032e6:	2b0c      	cmp	r3, #12
 80032e8:	f200 817e 	bhi.w	80035e8 <HAL_RCC_GetSysClockFreq+0x330>
 80032ec:	a201      	add	r2, pc, #4	; (adr r2, 80032f4 <HAL_RCC_GetSysClockFreq+0x3c>)
 80032ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80032f2:	bf00      	nop
 80032f4:	08003329 	.word	0x08003329
 80032f8:	080035e9 	.word	0x080035e9
 80032fc:	080035e9 	.word	0x080035e9
 8003300:	080035e9 	.word	0x080035e9
 8003304:	08003331 	.word	0x08003331
 8003308:	080035e9 	.word	0x080035e9
 800330c:	080035e9 	.word	0x080035e9
 8003310:	080035e9 	.word	0x080035e9
 8003314:	08003339 	.word	0x08003339
 8003318:	080035e9 	.word	0x080035e9
 800331c:	080035e9 	.word	0x080035e9
 8003320:	080035e9 	.word	0x080035e9
 8003324:	080034a3 	.word	0x080034a3
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8003328:	4bb6      	ldr	r3, [pc, #728]	; (8003604 <HAL_RCC_GetSysClockFreq+0x34c>)
 800332a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
       break;
 800332e:	e15f      	b.n	80035f0 <HAL_RCC_GetSysClockFreq+0x338>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8003330:	4bb5      	ldr	r3, [pc, #724]	; (8003608 <HAL_RCC_GetSysClockFreq+0x350>)
 8003332:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
      break;
 8003336:	e15b      	b.n	80035f0 <HAL_RCC_GetSysClockFreq+0x338>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL/PLLP used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8003338:	4bb1      	ldr	r3, [pc, #708]	; (8003600 <HAL_RCC_GetSysClockFreq+0x348>)
 800333a:	685b      	ldr	r3, [r3, #4]
 800333c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8003340:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8003344:	4bae      	ldr	r3, [pc, #696]	; (8003600 <HAL_RCC_GetSysClockFreq+0x348>)
 8003346:	685b      	ldr	r3, [r3, #4]
 8003348:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800334c:	2b00      	cmp	r3, #0
 800334e:	d031      	beq.n	80033b4 <HAL_RCC_GetSysClockFreq+0xfc>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8003350:	4bab      	ldr	r3, [pc, #684]	; (8003600 <HAL_RCC_GetSysClockFreq+0x348>)
 8003352:	685b      	ldr	r3, [r3, #4]
 8003354:	099b      	lsrs	r3, r3, #6
 8003356:	2200      	movs	r2, #0
 8003358:	66bb      	str	r3, [r7, #104]	; 0x68
 800335a:	66fa      	str	r2, [r7, #108]	; 0x6c
 800335c:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800335e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003362:	663b      	str	r3, [r7, #96]	; 0x60
 8003364:	2300      	movs	r3, #0
 8003366:	667b      	str	r3, [r7, #100]	; 0x64
 8003368:	4ba7      	ldr	r3, [pc, #668]	; (8003608 <HAL_RCC_GetSysClockFreq+0x350>)
 800336a:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	; 0x60
 800336e:	462a      	mov	r2, r5
 8003370:	fb03 f202 	mul.w	r2, r3, r2
 8003374:	2300      	movs	r3, #0
 8003376:	4621      	mov	r1, r4
 8003378:	fb01 f303 	mul.w	r3, r1, r3
 800337c:	4413      	add	r3, r2
 800337e:	4aa2      	ldr	r2, [pc, #648]	; (8003608 <HAL_RCC_GetSysClockFreq+0x350>)
 8003380:	4621      	mov	r1, r4
 8003382:	fba1 1202 	umull	r1, r2, r1, r2
 8003386:	67fa      	str	r2, [r7, #124]	; 0x7c
 8003388:	460a      	mov	r2, r1
 800338a:	67ba      	str	r2, [r7, #120]	; 0x78
 800338c:	6ffa      	ldr	r2, [r7, #124]	; 0x7c
 800338e:	4413      	add	r3, r2
 8003390:	67fb      	str	r3, [r7, #124]	; 0x7c
 8003392:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8003396:	2200      	movs	r2, #0
 8003398:	65bb      	str	r3, [r7, #88]	; 0x58
 800339a:	65fa      	str	r2, [r7, #92]	; 0x5c
 800339c:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 80033a0:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	; 0x78
 80033a4:	f7fc ff30 	bl	8000208 <__aeabi_uldivmod>
 80033a8:	4602      	mov	r2, r0
 80033aa:	460b      	mov	r3, r1
 80033ac:	4613      	mov	r3, r2
 80033ae:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 80033b2:	e064      	b.n	800347e <HAL_RCC_GetSysClockFreq+0x1c6>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80033b4:	4b92      	ldr	r3, [pc, #584]	; (8003600 <HAL_RCC_GetSysClockFreq+0x348>)
 80033b6:	685b      	ldr	r3, [r3, #4]
 80033b8:	099b      	lsrs	r3, r3, #6
 80033ba:	2200      	movs	r2, #0
 80033bc:	653b      	str	r3, [r7, #80]	; 0x50
 80033be:	657a      	str	r2, [r7, #84]	; 0x54
 80033c0:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80033c2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80033c6:	64bb      	str	r3, [r7, #72]	; 0x48
 80033c8:	2300      	movs	r3, #0
 80033ca:	64fb      	str	r3, [r7, #76]	; 0x4c
 80033cc:	e9d7 4512 	ldrd	r4, r5, [r7, #72]	; 0x48
 80033d0:	4622      	mov	r2, r4
 80033d2:	462b      	mov	r3, r5
 80033d4:	f04f 0000 	mov.w	r0, #0
 80033d8:	f04f 0100 	mov.w	r1, #0
 80033dc:	0159      	lsls	r1, r3, #5
 80033de:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80033e2:	0150      	lsls	r0, r2, #5
 80033e4:	4602      	mov	r2, r0
 80033e6:	460b      	mov	r3, r1
 80033e8:	4621      	mov	r1, r4
 80033ea:	1a51      	subs	r1, r2, r1
 80033ec:	6139      	str	r1, [r7, #16]
 80033ee:	4629      	mov	r1, r5
 80033f0:	eb63 0301 	sbc.w	r3, r3, r1
 80033f4:	617b      	str	r3, [r7, #20]
 80033f6:	f04f 0200 	mov.w	r2, #0
 80033fa:	f04f 0300 	mov.w	r3, #0
 80033fe:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8003402:	4659      	mov	r1, fp
 8003404:	018b      	lsls	r3, r1, #6
 8003406:	4651      	mov	r1, sl
 8003408:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800340c:	4651      	mov	r1, sl
 800340e:	018a      	lsls	r2, r1, #6
 8003410:	4651      	mov	r1, sl
 8003412:	ebb2 0801 	subs.w	r8, r2, r1
 8003416:	4659      	mov	r1, fp
 8003418:	eb63 0901 	sbc.w	r9, r3, r1
 800341c:	f04f 0200 	mov.w	r2, #0
 8003420:	f04f 0300 	mov.w	r3, #0
 8003424:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8003428:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800342c:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8003430:	4690      	mov	r8, r2
 8003432:	4699      	mov	r9, r3
 8003434:	4623      	mov	r3, r4
 8003436:	eb18 0303 	adds.w	r3, r8, r3
 800343a:	60bb      	str	r3, [r7, #8]
 800343c:	462b      	mov	r3, r5
 800343e:	eb49 0303 	adc.w	r3, r9, r3
 8003442:	60fb      	str	r3, [r7, #12]
 8003444:	f04f 0200 	mov.w	r2, #0
 8003448:	f04f 0300 	mov.w	r3, #0
 800344c:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8003450:	4629      	mov	r1, r5
 8003452:	028b      	lsls	r3, r1, #10
 8003454:	4621      	mov	r1, r4
 8003456:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 800345a:	4621      	mov	r1, r4
 800345c:	028a      	lsls	r2, r1, #10
 800345e:	4610      	mov	r0, r2
 8003460:	4619      	mov	r1, r3
 8003462:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8003466:	2200      	movs	r2, #0
 8003468:	643b      	str	r3, [r7, #64]	; 0x40
 800346a:	647a      	str	r2, [r7, #68]	; 0x44
 800346c:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8003470:	f7fc feca 	bl	8000208 <__aeabi_uldivmod>
 8003474:	4602      	mov	r2, r0
 8003476:	460b      	mov	r3, r1
 8003478:	4613      	mov	r3, r2
 800347a:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800347e:	4b60      	ldr	r3, [pc, #384]	; (8003600 <HAL_RCC_GetSysClockFreq+0x348>)
 8003480:	685b      	ldr	r3, [r3, #4]
 8003482:	0c1b      	lsrs	r3, r3, #16
 8003484:	f003 0303 	and.w	r3, r3, #3
 8003488:	3301      	adds	r3, #1
 800348a:	005b      	lsls	r3, r3, #1
 800348c:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88

      sysclockfreq = pllvco/pllp;
 8003490:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8003494:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8003498:	fbb2 f3f3 	udiv	r3, r2, r3
 800349c:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
      break;
 80034a0:	e0a6      	b.n	80035f0 <HAL_RCC_GetSysClockFreq+0x338>
    }
    case RCC_CFGR_SWS_PLLR:  /* PLL/PLLR used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80034a2:	4b57      	ldr	r3, [pc, #348]	; (8003600 <HAL_RCC_GetSysClockFreq+0x348>)
 80034a4:	685b      	ldr	r3, [r3, #4]
 80034a6:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80034aa:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80034ae:	4b54      	ldr	r3, [pc, #336]	; (8003600 <HAL_RCC_GetSysClockFreq+0x348>)
 80034b0:	685b      	ldr	r3, [r3, #4]
 80034b2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80034b6:	2b00      	cmp	r3, #0
 80034b8:	d02a      	beq.n	8003510 <HAL_RCC_GetSysClockFreq+0x258>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80034ba:	4b51      	ldr	r3, [pc, #324]	; (8003600 <HAL_RCC_GetSysClockFreq+0x348>)
 80034bc:	685b      	ldr	r3, [r3, #4]
 80034be:	099b      	lsrs	r3, r3, #6
 80034c0:	2200      	movs	r2, #0
 80034c2:	63bb      	str	r3, [r7, #56]	; 0x38
 80034c4:	63fa      	str	r2, [r7, #60]	; 0x3c
 80034c6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80034c8:	f3c3 0008 	ubfx	r0, r3, #0, #9
 80034cc:	2100      	movs	r1, #0
 80034ce:	4b4e      	ldr	r3, [pc, #312]	; (8003608 <HAL_RCC_GetSysClockFreq+0x350>)
 80034d0:	fb03 f201 	mul.w	r2, r3, r1
 80034d4:	2300      	movs	r3, #0
 80034d6:	fb00 f303 	mul.w	r3, r0, r3
 80034da:	4413      	add	r3, r2
 80034dc:	4a4a      	ldr	r2, [pc, #296]	; (8003608 <HAL_RCC_GetSysClockFreq+0x350>)
 80034de:	fba0 1202 	umull	r1, r2, r0, r2
 80034e2:	677a      	str	r2, [r7, #116]	; 0x74
 80034e4:	460a      	mov	r2, r1
 80034e6:	673a      	str	r2, [r7, #112]	; 0x70
 80034e8:	6f7a      	ldr	r2, [r7, #116]	; 0x74
 80034ea:	4413      	add	r3, r2
 80034ec:	677b      	str	r3, [r7, #116]	; 0x74
 80034ee:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80034f2:	2200      	movs	r2, #0
 80034f4:	633b      	str	r3, [r7, #48]	; 0x30
 80034f6:	637a      	str	r2, [r7, #52]	; 0x34
 80034f8:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 80034fc:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	; 0x70
 8003500:	f7fc fe82 	bl	8000208 <__aeabi_uldivmod>
 8003504:	4602      	mov	r2, r0
 8003506:	460b      	mov	r3, r1
 8003508:	4613      	mov	r3, r2
 800350a:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800350e:	e05b      	b.n	80035c8 <HAL_RCC_GetSysClockFreq+0x310>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8003510:	4b3b      	ldr	r3, [pc, #236]	; (8003600 <HAL_RCC_GetSysClockFreq+0x348>)
 8003512:	685b      	ldr	r3, [r3, #4]
 8003514:	099b      	lsrs	r3, r3, #6
 8003516:	2200      	movs	r2, #0
 8003518:	62bb      	str	r3, [r7, #40]	; 0x28
 800351a:	62fa      	str	r2, [r7, #44]	; 0x2c
 800351c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800351e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003522:	623b      	str	r3, [r7, #32]
 8003524:	2300      	movs	r3, #0
 8003526:	627b      	str	r3, [r7, #36]	; 0x24
 8003528:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 800352c:	4642      	mov	r2, r8
 800352e:	464b      	mov	r3, r9
 8003530:	f04f 0000 	mov.w	r0, #0
 8003534:	f04f 0100 	mov.w	r1, #0
 8003538:	0159      	lsls	r1, r3, #5
 800353a:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800353e:	0150      	lsls	r0, r2, #5
 8003540:	4602      	mov	r2, r0
 8003542:	460b      	mov	r3, r1
 8003544:	4641      	mov	r1, r8
 8003546:	ebb2 0a01 	subs.w	sl, r2, r1
 800354a:	4649      	mov	r1, r9
 800354c:	eb63 0b01 	sbc.w	fp, r3, r1
 8003550:	f04f 0200 	mov.w	r2, #0
 8003554:	f04f 0300 	mov.w	r3, #0
 8003558:	ea4f 138b 	mov.w	r3, fp, lsl #6
 800355c:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8003560:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8003564:	ebb2 040a 	subs.w	r4, r2, sl
 8003568:	eb63 050b 	sbc.w	r5, r3, fp
 800356c:	f04f 0200 	mov.w	r2, #0
 8003570:	f04f 0300 	mov.w	r3, #0
 8003574:	00eb      	lsls	r3, r5, #3
 8003576:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800357a:	00e2      	lsls	r2, r4, #3
 800357c:	4614      	mov	r4, r2
 800357e:	461d      	mov	r5, r3
 8003580:	4643      	mov	r3, r8
 8003582:	18e3      	adds	r3, r4, r3
 8003584:	603b      	str	r3, [r7, #0]
 8003586:	464b      	mov	r3, r9
 8003588:	eb45 0303 	adc.w	r3, r5, r3
 800358c:	607b      	str	r3, [r7, #4]
 800358e:	f04f 0200 	mov.w	r2, #0
 8003592:	f04f 0300 	mov.w	r3, #0
 8003596:	e9d7 4500 	ldrd	r4, r5, [r7]
 800359a:	4629      	mov	r1, r5
 800359c:	028b      	lsls	r3, r1, #10
 800359e:	4621      	mov	r1, r4
 80035a0:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80035a4:	4621      	mov	r1, r4
 80035a6:	028a      	lsls	r2, r1, #10
 80035a8:	4610      	mov	r0, r2
 80035aa:	4619      	mov	r1, r3
 80035ac:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80035b0:	2200      	movs	r2, #0
 80035b2:	61bb      	str	r3, [r7, #24]
 80035b4:	61fa      	str	r2, [r7, #28]
 80035b6:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80035ba:	f7fc fe25 	bl	8000208 <__aeabi_uldivmod>
 80035be:	4602      	mov	r2, r0
 80035c0:	460b      	mov	r3, r1
 80035c2:	4613      	mov	r3, r2
 80035c4:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
      }
      pllr = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos);
 80035c8:	4b0d      	ldr	r3, [pc, #52]	; (8003600 <HAL_RCC_GetSysClockFreq+0x348>)
 80035ca:	685b      	ldr	r3, [r3, #4]
 80035cc:	0f1b      	lsrs	r3, r3, #28
 80035ce:	f003 0307 	and.w	r3, r3, #7
 80035d2:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84

      sysclockfreq = pllvco/pllr;
 80035d6:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 80035da:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 80035de:	fbb2 f3f3 	udiv	r3, r2, r3
 80035e2:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
      break;
 80035e6:	e003      	b.n	80035f0 <HAL_RCC_GetSysClockFreq+0x338>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 80035e8:	4b06      	ldr	r3, [pc, #24]	; (8003604 <HAL_RCC_GetSysClockFreq+0x34c>)
 80035ea:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
      break;
 80035ee:	bf00      	nop
    }
  }
  return sysclockfreq;
 80035f0:	f8d7 3090 	ldr.w	r3, [r7, #144]	; 0x90
}
 80035f4:	4618      	mov	r0, r3
 80035f6:	3798      	adds	r7, #152	; 0x98
 80035f8:	46bd      	mov	sp, r7
 80035fa:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80035fe:	bf00      	nop
 8003600:	40023800 	.word	0x40023800
 8003604:	00f42400 	.word	0x00f42400
 8003608:	017d7840 	.word	0x017d7840

0800360c <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 800360c:	b580      	push	{r7, lr}
 800360e:	b086      	sub	sp, #24
 8003610:	af00      	add	r7, sp, #0
 8003612:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	2b00      	cmp	r3, #0
 8003618:	d101      	bne.n	800361e <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 800361a:	2301      	movs	r3, #1
 800361c:	e28d      	b.n	8003b3a <HAL_RCC_OscConfig+0x52e>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	681b      	ldr	r3, [r3, #0]
 8003622:	f003 0301 	and.w	r3, r3, #1
 8003626:	2b00      	cmp	r3, #0
 8003628:	f000 8083 	beq.w	8003732 <HAL_RCC_OscConfig+0x126>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
#if defined(STM32F446xx)
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 800362c:	4b94      	ldr	r3, [pc, #592]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 800362e:	689b      	ldr	r3, [r3, #8]
 8003630:	f003 030c 	and.w	r3, r3, #12
 8003634:	2b04      	cmp	r3, #4
 8003636:	d019      	beq.n	800366c <HAL_RCC_OscConfig+0x60>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) ||\
 8003638:	4b91      	ldr	r3, [pc, #580]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 800363a:	689b      	ldr	r3, [r3, #8]
 800363c:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8003640:	2b08      	cmp	r3, #8
 8003642:	d106      	bne.n	8003652 <HAL_RCC_OscConfig+0x46>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) ||\
 8003644:	4b8e      	ldr	r3, [pc, #568]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 8003646:	685b      	ldr	r3, [r3, #4]
 8003648:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800364c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8003650:	d00c      	beq.n	800366c <HAL_RCC_OscConfig+0x60>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8003652:	4b8b      	ldr	r3, [pc, #556]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 8003654:	689b      	ldr	r3, [r3, #8]
 8003656:	f003 030c 	and.w	r3, r3, #12
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) ||\
 800365a:	2b0c      	cmp	r3, #12
 800365c:	d112      	bne.n	8003684 <HAL_RCC_OscConfig+0x78>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800365e:	4b88      	ldr	r3, [pc, #544]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 8003660:	685b      	ldr	r3, [r3, #4]
 8003662:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003666:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800366a:	d10b      	bne.n	8003684 <HAL_RCC_OscConfig+0x78>
#else
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
#endif /* STM32F446xx */
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800366c:	4b84      	ldr	r3, [pc, #528]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 800366e:	681b      	ldr	r3, [r3, #0]
 8003670:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003674:	2b00      	cmp	r3, #0
 8003676:	d05b      	beq.n	8003730 <HAL_RCC_OscConfig+0x124>
 8003678:	687b      	ldr	r3, [r7, #4]
 800367a:	685b      	ldr	r3, [r3, #4]
 800367c:	2b00      	cmp	r3, #0
 800367e:	d157      	bne.n	8003730 <HAL_RCC_OscConfig+0x124>
      {
        return HAL_ERROR;
 8003680:	2301      	movs	r3, #1
 8003682:	e25a      	b.n	8003b3a <HAL_RCC_OscConfig+0x52e>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8003684:	687b      	ldr	r3, [r7, #4]
 8003686:	685b      	ldr	r3, [r3, #4]
 8003688:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800368c:	d106      	bne.n	800369c <HAL_RCC_OscConfig+0x90>
 800368e:	4b7c      	ldr	r3, [pc, #496]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 8003690:	681b      	ldr	r3, [r3, #0]
 8003692:	4a7b      	ldr	r2, [pc, #492]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 8003694:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003698:	6013      	str	r3, [r2, #0]
 800369a:	e01d      	b.n	80036d8 <HAL_RCC_OscConfig+0xcc>
 800369c:	687b      	ldr	r3, [r7, #4]
 800369e:	685b      	ldr	r3, [r3, #4]
 80036a0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80036a4:	d10c      	bne.n	80036c0 <HAL_RCC_OscConfig+0xb4>
 80036a6:	4b76      	ldr	r3, [pc, #472]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 80036a8:	681b      	ldr	r3, [r3, #0]
 80036aa:	4a75      	ldr	r2, [pc, #468]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 80036ac:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80036b0:	6013      	str	r3, [r2, #0]
 80036b2:	4b73      	ldr	r3, [pc, #460]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 80036b4:	681b      	ldr	r3, [r3, #0]
 80036b6:	4a72      	ldr	r2, [pc, #456]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 80036b8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80036bc:	6013      	str	r3, [r2, #0]
 80036be:	e00b      	b.n	80036d8 <HAL_RCC_OscConfig+0xcc>
 80036c0:	4b6f      	ldr	r3, [pc, #444]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 80036c2:	681b      	ldr	r3, [r3, #0]
 80036c4:	4a6e      	ldr	r2, [pc, #440]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 80036c6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80036ca:	6013      	str	r3, [r2, #0]
 80036cc:	4b6c      	ldr	r3, [pc, #432]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 80036ce:	681b      	ldr	r3, [r3, #0]
 80036d0:	4a6b      	ldr	r2, [pc, #428]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 80036d2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80036d6:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	685b      	ldr	r3, [r3, #4]
 80036dc:	2b00      	cmp	r3, #0
 80036de:	d013      	beq.n	8003708 <HAL_RCC_OscConfig+0xfc>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80036e0:	f7ff fa14 	bl	8002b0c <HAL_GetTick>
 80036e4:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80036e6:	e008      	b.n	80036fa <HAL_RCC_OscConfig+0xee>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80036e8:	f7ff fa10 	bl	8002b0c <HAL_GetTick>
 80036ec:	4602      	mov	r2, r0
 80036ee:	693b      	ldr	r3, [r7, #16]
 80036f0:	1ad3      	subs	r3, r2, r3
 80036f2:	2b64      	cmp	r3, #100	; 0x64
 80036f4:	d901      	bls.n	80036fa <HAL_RCC_OscConfig+0xee>
          {
            return HAL_TIMEOUT;
 80036f6:	2303      	movs	r3, #3
 80036f8:	e21f      	b.n	8003b3a <HAL_RCC_OscConfig+0x52e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80036fa:	4b61      	ldr	r3, [pc, #388]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 80036fc:	681b      	ldr	r3, [r3, #0]
 80036fe:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003702:	2b00      	cmp	r3, #0
 8003704:	d0f0      	beq.n	80036e8 <HAL_RCC_OscConfig+0xdc>
 8003706:	e014      	b.n	8003732 <HAL_RCC_OscConfig+0x126>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8003708:	f7ff fa00 	bl	8002b0c <HAL_GetTick>
 800370c:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800370e:	e008      	b.n	8003722 <HAL_RCC_OscConfig+0x116>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8003710:	f7ff f9fc 	bl	8002b0c <HAL_GetTick>
 8003714:	4602      	mov	r2, r0
 8003716:	693b      	ldr	r3, [r7, #16]
 8003718:	1ad3      	subs	r3, r2, r3
 800371a:	2b64      	cmp	r3, #100	; 0x64
 800371c:	d901      	bls.n	8003722 <HAL_RCC_OscConfig+0x116>
          {
            return HAL_TIMEOUT;
 800371e:	2303      	movs	r3, #3
 8003720:	e20b      	b.n	8003b3a <HAL_RCC_OscConfig+0x52e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8003722:	4b57      	ldr	r3, [pc, #348]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 8003724:	681b      	ldr	r3, [r3, #0]
 8003726:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800372a:	2b00      	cmp	r3, #0
 800372c:	d1f0      	bne.n	8003710 <HAL_RCC_OscConfig+0x104>
 800372e:	e000      	b.n	8003732 <HAL_RCC_OscConfig+0x126>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8003730:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8003732:	687b      	ldr	r3, [r7, #4]
 8003734:	681b      	ldr	r3, [r3, #0]
 8003736:	f003 0302 	and.w	r3, r3, #2
 800373a:	2b00      	cmp	r3, #0
 800373c:	d06f      	beq.n	800381e <HAL_RCC_OscConfig+0x212>
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
#if defined(STM32F446xx)
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 800373e:	4b50      	ldr	r3, [pc, #320]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 8003740:	689b      	ldr	r3, [r3, #8]
 8003742:	f003 030c 	and.w	r3, r3, #12
 8003746:	2b00      	cmp	r3, #0
 8003748:	d017      	beq.n	800377a <HAL_RCC_OscConfig+0x16e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) ||\
 800374a:	4b4d      	ldr	r3, [pc, #308]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 800374c:	689b      	ldr	r3, [r3, #8]
 800374e:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8003752:	2b08      	cmp	r3, #8
 8003754:	d105      	bne.n	8003762 <HAL_RCC_OscConfig+0x156>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) ||\
 8003756:	4b4a      	ldr	r3, [pc, #296]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 8003758:	685b      	ldr	r3, [r3, #4]
 800375a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800375e:	2b00      	cmp	r3, #0
 8003760:	d00b      	beq.n	800377a <HAL_RCC_OscConfig+0x16e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8003762:	4b47      	ldr	r3, [pc, #284]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 8003764:	689b      	ldr	r3, [r3, #8]
 8003766:	f003 030c 	and.w	r3, r3, #12
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) ||\
 800376a:	2b0c      	cmp	r3, #12
 800376c:	d11c      	bne.n	80037a8 <HAL_RCC_OscConfig+0x19c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 800376e:	4b44      	ldr	r3, [pc, #272]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 8003770:	685b      	ldr	r3, [r3, #4]
 8003772:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003776:	2b00      	cmp	r3, #0
 8003778:	d116      	bne.n	80037a8 <HAL_RCC_OscConfig+0x19c>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
#endif /* STM32F446xx */
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800377a:	4b41      	ldr	r3, [pc, #260]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 800377c:	681b      	ldr	r3, [r3, #0]
 800377e:	f003 0302 	and.w	r3, r3, #2
 8003782:	2b00      	cmp	r3, #0
 8003784:	d005      	beq.n	8003792 <HAL_RCC_OscConfig+0x186>
 8003786:	687b      	ldr	r3, [r7, #4]
 8003788:	68db      	ldr	r3, [r3, #12]
 800378a:	2b01      	cmp	r3, #1
 800378c:	d001      	beq.n	8003792 <HAL_RCC_OscConfig+0x186>
      {
        return HAL_ERROR;
 800378e:	2301      	movs	r3, #1
 8003790:	e1d3      	b.n	8003b3a <HAL_RCC_OscConfig+0x52e>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8003792:	4b3b      	ldr	r3, [pc, #236]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 8003794:	681b      	ldr	r3, [r3, #0]
 8003796:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800379a:	687b      	ldr	r3, [r7, #4]
 800379c:	691b      	ldr	r3, [r3, #16]
 800379e:	00db      	lsls	r3, r3, #3
 80037a0:	4937      	ldr	r1, [pc, #220]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 80037a2:	4313      	orrs	r3, r2
 80037a4:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80037a6:	e03a      	b.n	800381e <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80037a8:	687b      	ldr	r3, [r7, #4]
 80037aa:	68db      	ldr	r3, [r3, #12]
 80037ac:	2b00      	cmp	r3, #0
 80037ae:	d020      	beq.n	80037f2 <HAL_RCC_OscConfig+0x1e6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 80037b0:	4b34      	ldr	r3, [pc, #208]	; (8003884 <HAL_RCC_OscConfig+0x278>)
 80037b2:	2201      	movs	r2, #1
 80037b4:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80037b6:	f7ff f9a9 	bl	8002b0c <HAL_GetTick>
 80037ba:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80037bc:	e008      	b.n	80037d0 <HAL_RCC_OscConfig+0x1c4>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80037be:	f7ff f9a5 	bl	8002b0c <HAL_GetTick>
 80037c2:	4602      	mov	r2, r0
 80037c4:	693b      	ldr	r3, [r7, #16]
 80037c6:	1ad3      	subs	r3, r2, r3
 80037c8:	2b02      	cmp	r3, #2
 80037ca:	d901      	bls.n	80037d0 <HAL_RCC_OscConfig+0x1c4>
          {
            return HAL_TIMEOUT;
 80037cc:	2303      	movs	r3, #3
 80037ce:	e1b4      	b.n	8003b3a <HAL_RCC_OscConfig+0x52e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80037d0:	4b2b      	ldr	r3, [pc, #172]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 80037d2:	681b      	ldr	r3, [r3, #0]
 80037d4:	f003 0302 	and.w	r3, r3, #2
 80037d8:	2b00      	cmp	r3, #0
 80037da:	d0f0      	beq.n	80037be <HAL_RCC_OscConfig+0x1b2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80037dc:	4b28      	ldr	r3, [pc, #160]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 80037de:	681b      	ldr	r3, [r3, #0]
 80037e0:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80037e4:	687b      	ldr	r3, [r7, #4]
 80037e6:	691b      	ldr	r3, [r3, #16]
 80037e8:	00db      	lsls	r3, r3, #3
 80037ea:	4925      	ldr	r1, [pc, #148]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 80037ec:	4313      	orrs	r3, r2
 80037ee:	600b      	str	r3, [r1, #0]
 80037f0:	e015      	b.n	800381e <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80037f2:	4b24      	ldr	r3, [pc, #144]	; (8003884 <HAL_RCC_OscConfig+0x278>)
 80037f4:	2200      	movs	r2, #0
 80037f6:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80037f8:	f7ff f988 	bl	8002b0c <HAL_GetTick>
 80037fc:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 80037fe:	e008      	b.n	8003812 <HAL_RCC_OscConfig+0x206>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8003800:	f7ff f984 	bl	8002b0c <HAL_GetTick>
 8003804:	4602      	mov	r2, r0
 8003806:	693b      	ldr	r3, [r7, #16]
 8003808:	1ad3      	subs	r3, r2, r3
 800380a:	2b02      	cmp	r3, #2
 800380c:	d901      	bls.n	8003812 <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 800380e:	2303      	movs	r3, #3
 8003810:	e193      	b.n	8003b3a <HAL_RCC_OscConfig+0x52e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8003812:	4b1b      	ldr	r3, [pc, #108]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 8003814:	681b      	ldr	r3, [r3, #0]
 8003816:	f003 0302 	and.w	r3, r3, #2
 800381a:	2b00      	cmp	r3, #0
 800381c:	d1f0      	bne.n	8003800 <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	681b      	ldr	r3, [r3, #0]
 8003822:	f003 0308 	and.w	r3, r3, #8
 8003826:	2b00      	cmp	r3, #0
 8003828:	d036      	beq.n	8003898 <HAL_RCC_OscConfig+0x28c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800382a:	687b      	ldr	r3, [r7, #4]
 800382c:	695b      	ldr	r3, [r3, #20]
 800382e:	2b00      	cmp	r3, #0
 8003830:	d016      	beq.n	8003860 <HAL_RCC_OscConfig+0x254>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8003832:	4b15      	ldr	r3, [pc, #84]	; (8003888 <HAL_RCC_OscConfig+0x27c>)
 8003834:	2201      	movs	r2, #1
 8003836:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8003838:	f7ff f968 	bl	8002b0c <HAL_GetTick>
 800383c:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800383e:	e008      	b.n	8003852 <HAL_RCC_OscConfig+0x246>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8003840:	f7ff f964 	bl	8002b0c <HAL_GetTick>
 8003844:	4602      	mov	r2, r0
 8003846:	693b      	ldr	r3, [r7, #16]
 8003848:	1ad3      	subs	r3, r2, r3
 800384a:	2b02      	cmp	r3, #2
 800384c:	d901      	bls.n	8003852 <HAL_RCC_OscConfig+0x246>
        {
          return HAL_TIMEOUT;
 800384e:	2303      	movs	r3, #3
 8003850:	e173      	b.n	8003b3a <HAL_RCC_OscConfig+0x52e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8003852:	4b0b      	ldr	r3, [pc, #44]	; (8003880 <HAL_RCC_OscConfig+0x274>)
 8003854:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8003856:	f003 0302 	and.w	r3, r3, #2
 800385a:	2b00      	cmp	r3, #0
 800385c:	d0f0      	beq.n	8003840 <HAL_RCC_OscConfig+0x234>
 800385e:	e01b      	b.n	8003898 <HAL_RCC_OscConfig+0x28c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8003860:	4b09      	ldr	r3, [pc, #36]	; (8003888 <HAL_RCC_OscConfig+0x27c>)
 8003862:	2200      	movs	r2, #0
 8003864:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8003866:	f7ff f951 	bl	8002b0c <HAL_GetTick>
 800386a:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800386c:	e00e      	b.n	800388c <HAL_RCC_OscConfig+0x280>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800386e:	f7ff f94d 	bl	8002b0c <HAL_GetTick>
 8003872:	4602      	mov	r2, r0
 8003874:	693b      	ldr	r3, [r7, #16]
 8003876:	1ad3      	subs	r3, r2, r3
 8003878:	2b02      	cmp	r3, #2
 800387a:	d907      	bls.n	800388c <HAL_RCC_OscConfig+0x280>
        {
          return HAL_TIMEOUT;
 800387c:	2303      	movs	r3, #3
 800387e:	e15c      	b.n	8003b3a <HAL_RCC_OscConfig+0x52e>
 8003880:	40023800 	.word	0x40023800
 8003884:	42470000 	.word	0x42470000
 8003888:	42470e80 	.word	0x42470e80
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800388c:	4b8a      	ldr	r3, [pc, #552]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 800388e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8003890:	f003 0302 	and.w	r3, r3, #2
 8003894:	2b00      	cmp	r3, #0
 8003896:	d1ea      	bne.n	800386e <HAL_RCC_OscConfig+0x262>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	681b      	ldr	r3, [r3, #0]
 800389c:	f003 0304 	and.w	r3, r3, #4
 80038a0:	2b00      	cmp	r3, #0
 80038a2:	f000 8097 	beq.w	80039d4 <HAL_RCC_OscConfig+0x3c8>
  {
    FlagStatus       pwrclkchanged = RESET;
 80038a6:	2300      	movs	r3, #0
 80038a8:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80038aa:	4b83      	ldr	r3, [pc, #524]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 80038ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80038ae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80038b2:	2b00      	cmp	r3, #0
 80038b4:	d10f      	bne.n	80038d6 <HAL_RCC_OscConfig+0x2ca>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80038b6:	2300      	movs	r3, #0
 80038b8:	60bb      	str	r3, [r7, #8]
 80038ba:	4b7f      	ldr	r3, [pc, #508]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 80038bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80038be:	4a7e      	ldr	r2, [pc, #504]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 80038c0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80038c4:	6413      	str	r3, [r2, #64]	; 0x40
 80038c6:	4b7c      	ldr	r3, [pc, #496]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 80038c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80038ca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80038ce:	60bb      	str	r3, [r7, #8]
 80038d0:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 80038d2:	2301      	movs	r3, #1
 80038d4:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80038d6:	4b79      	ldr	r3, [pc, #484]	; (8003abc <HAL_RCC_OscConfig+0x4b0>)
 80038d8:	681b      	ldr	r3, [r3, #0]
 80038da:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80038de:	2b00      	cmp	r3, #0
 80038e0:	d118      	bne.n	8003914 <HAL_RCC_OscConfig+0x308>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80038e2:	4b76      	ldr	r3, [pc, #472]	; (8003abc <HAL_RCC_OscConfig+0x4b0>)
 80038e4:	681b      	ldr	r3, [r3, #0]
 80038e6:	4a75      	ldr	r2, [pc, #468]	; (8003abc <HAL_RCC_OscConfig+0x4b0>)
 80038e8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80038ec:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 80038ee:	f7ff f90d 	bl	8002b0c <HAL_GetTick>
 80038f2:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80038f4:	e008      	b.n	8003908 <HAL_RCC_OscConfig+0x2fc>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80038f6:	f7ff f909 	bl	8002b0c <HAL_GetTick>
 80038fa:	4602      	mov	r2, r0
 80038fc:	693b      	ldr	r3, [r7, #16]
 80038fe:	1ad3      	subs	r3, r2, r3
 8003900:	2b02      	cmp	r3, #2
 8003902:	d901      	bls.n	8003908 <HAL_RCC_OscConfig+0x2fc>
        {
          return HAL_TIMEOUT;
 8003904:	2303      	movs	r3, #3
 8003906:	e118      	b.n	8003b3a <HAL_RCC_OscConfig+0x52e>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003908:	4b6c      	ldr	r3, [pc, #432]	; (8003abc <HAL_RCC_OscConfig+0x4b0>)
 800390a:	681b      	ldr	r3, [r3, #0]
 800390c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003910:	2b00      	cmp	r3, #0
 8003912:	d0f0      	beq.n	80038f6 <HAL_RCC_OscConfig+0x2ea>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	689b      	ldr	r3, [r3, #8]
 8003918:	2b01      	cmp	r3, #1
 800391a:	d106      	bne.n	800392a <HAL_RCC_OscConfig+0x31e>
 800391c:	4b66      	ldr	r3, [pc, #408]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 800391e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003920:	4a65      	ldr	r2, [pc, #404]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 8003922:	f043 0301 	orr.w	r3, r3, #1
 8003926:	6713      	str	r3, [r2, #112]	; 0x70
 8003928:	e01c      	b.n	8003964 <HAL_RCC_OscConfig+0x358>
 800392a:	687b      	ldr	r3, [r7, #4]
 800392c:	689b      	ldr	r3, [r3, #8]
 800392e:	2b05      	cmp	r3, #5
 8003930:	d10c      	bne.n	800394c <HAL_RCC_OscConfig+0x340>
 8003932:	4b61      	ldr	r3, [pc, #388]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 8003934:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003936:	4a60      	ldr	r2, [pc, #384]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 8003938:	f043 0304 	orr.w	r3, r3, #4
 800393c:	6713      	str	r3, [r2, #112]	; 0x70
 800393e:	4b5e      	ldr	r3, [pc, #376]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 8003940:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003942:	4a5d      	ldr	r2, [pc, #372]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 8003944:	f043 0301 	orr.w	r3, r3, #1
 8003948:	6713      	str	r3, [r2, #112]	; 0x70
 800394a:	e00b      	b.n	8003964 <HAL_RCC_OscConfig+0x358>
 800394c:	4b5a      	ldr	r3, [pc, #360]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 800394e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003950:	4a59      	ldr	r2, [pc, #356]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 8003952:	f023 0301 	bic.w	r3, r3, #1
 8003956:	6713      	str	r3, [r2, #112]	; 0x70
 8003958:	4b57      	ldr	r3, [pc, #348]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 800395a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800395c:	4a56      	ldr	r2, [pc, #344]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 800395e:	f023 0304 	bic.w	r3, r3, #4
 8003962:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8003964:	687b      	ldr	r3, [r7, #4]
 8003966:	689b      	ldr	r3, [r3, #8]
 8003968:	2b00      	cmp	r3, #0
 800396a:	d015      	beq.n	8003998 <HAL_RCC_OscConfig+0x38c>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 800396c:	f7ff f8ce 	bl	8002b0c <HAL_GetTick>
 8003970:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003972:	e00a      	b.n	800398a <HAL_RCC_OscConfig+0x37e>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003974:	f7ff f8ca 	bl	8002b0c <HAL_GetTick>
 8003978:	4602      	mov	r2, r0
 800397a:	693b      	ldr	r3, [r7, #16]
 800397c:	1ad3      	subs	r3, r2, r3
 800397e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003982:	4293      	cmp	r3, r2
 8003984:	d901      	bls.n	800398a <HAL_RCC_OscConfig+0x37e>
        {
          return HAL_TIMEOUT;
 8003986:	2303      	movs	r3, #3
 8003988:	e0d7      	b.n	8003b3a <HAL_RCC_OscConfig+0x52e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 800398a:	4b4b      	ldr	r3, [pc, #300]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 800398c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800398e:	f003 0302 	and.w	r3, r3, #2
 8003992:	2b00      	cmp	r3, #0
 8003994:	d0ee      	beq.n	8003974 <HAL_RCC_OscConfig+0x368>
 8003996:	e014      	b.n	80039c2 <HAL_RCC_OscConfig+0x3b6>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8003998:	f7ff f8b8 	bl	8002b0c <HAL_GetTick>
 800399c:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800399e:	e00a      	b.n	80039b6 <HAL_RCC_OscConfig+0x3aa>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80039a0:	f7ff f8b4 	bl	8002b0c <HAL_GetTick>
 80039a4:	4602      	mov	r2, r0
 80039a6:	693b      	ldr	r3, [r7, #16]
 80039a8:	1ad3      	subs	r3, r2, r3
 80039aa:	f241 3288 	movw	r2, #5000	; 0x1388
 80039ae:	4293      	cmp	r3, r2
 80039b0:	d901      	bls.n	80039b6 <HAL_RCC_OscConfig+0x3aa>
        {
          return HAL_TIMEOUT;
 80039b2:	2303      	movs	r3, #3
 80039b4:	e0c1      	b.n	8003b3a <HAL_RCC_OscConfig+0x52e>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 80039b6:	4b40      	ldr	r3, [pc, #256]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 80039b8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80039ba:	f003 0302 	and.w	r3, r3, #2
 80039be:	2b00      	cmp	r3, #0
 80039c0:	d1ee      	bne.n	80039a0 <HAL_RCC_OscConfig+0x394>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 80039c2:	7dfb      	ldrb	r3, [r7, #23]
 80039c4:	2b01      	cmp	r3, #1
 80039c6:	d105      	bne.n	80039d4 <HAL_RCC_OscConfig+0x3c8>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 80039c8:	4b3b      	ldr	r3, [pc, #236]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 80039ca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80039cc:	4a3a      	ldr	r2, [pc, #232]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 80039ce:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80039d2:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 80039d4:	687b      	ldr	r3, [r7, #4]
 80039d6:	699b      	ldr	r3, [r3, #24]
 80039d8:	2b00      	cmp	r3, #0
 80039da:	f000 80ad 	beq.w	8003b38 <HAL_RCC_OscConfig+0x52c>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 80039de:	4b36      	ldr	r3, [pc, #216]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 80039e0:	689b      	ldr	r3, [r3, #8]
 80039e2:	f003 030c 	and.w	r3, r3, #12
 80039e6:	2b08      	cmp	r3, #8
 80039e8:	d060      	beq.n	8003aac <HAL_RCC_OscConfig+0x4a0>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80039ea:	687b      	ldr	r3, [r7, #4]
 80039ec:	699b      	ldr	r3, [r3, #24]
 80039ee:	2b02      	cmp	r3, #2
 80039f0:	d145      	bne.n	8003a7e <HAL_RCC_OscConfig+0x472>
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 80039f2:	4b33      	ldr	r3, [pc, #204]	; (8003ac0 <HAL_RCC_OscConfig+0x4b4>)
 80039f4:	2200      	movs	r2, #0
 80039f6:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 80039f8:	f7ff f888 	bl	8002b0c <HAL_GetTick>
 80039fc:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80039fe:	e008      	b.n	8003a12 <HAL_RCC_OscConfig+0x406>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003a00:	f7ff f884 	bl	8002b0c <HAL_GetTick>
 8003a04:	4602      	mov	r2, r0
 8003a06:	693b      	ldr	r3, [r7, #16]
 8003a08:	1ad3      	subs	r3, r2, r3
 8003a0a:	2b02      	cmp	r3, #2
 8003a0c:	d901      	bls.n	8003a12 <HAL_RCC_OscConfig+0x406>
          {
            return HAL_TIMEOUT;
 8003a0e:	2303      	movs	r3, #3
 8003a10:	e093      	b.n	8003b3a <HAL_RCC_OscConfig+0x52e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8003a12:	4b29      	ldr	r3, [pc, #164]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 8003a14:	681b      	ldr	r3, [r3, #0]
 8003a16:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003a1a:	2b00      	cmp	r3, #0
 8003a1c:	d1f0      	bne.n	8003a00 <HAL_RCC_OscConfig+0x3f4>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	69da      	ldr	r2, [r3, #28]
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	6a1b      	ldr	r3, [r3, #32]
 8003a26:	431a      	orrs	r2, r3
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a2c:	019b      	lsls	r3, r3, #6
 8003a2e:	431a      	orrs	r2, r3
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003a34:	085b      	lsrs	r3, r3, #1
 8003a36:	3b01      	subs	r3, #1
 8003a38:	041b      	lsls	r3, r3, #16
 8003a3a:	431a      	orrs	r2, r3
 8003a3c:	687b      	ldr	r3, [r7, #4]
 8003a3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003a40:	061b      	lsls	r3, r3, #24
 8003a42:	431a      	orrs	r2, r3
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003a48:	071b      	lsls	r3, r3, #28
 8003a4a:	491b      	ldr	r1, [pc, #108]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 8003a4c:	4313      	orrs	r3, r2
 8003a4e:	604b      	str	r3, [r1, #4]
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)                       | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)        | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)                       | \
                                 (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8003a50:	4b1b      	ldr	r3, [pc, #108]	; (8003ac0 <HAL_RCC_OscConfig+0x4b4>)
 8003a52:	2201      	movs	r2, #1
 8003a54:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8003a56:	f7ff f859 	bl	8002b0c <HAL_GetTick>
 8003a5a:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8003a5c:	e008      	b.n	8003a70 <HAL_RCC_OscConfig+0x464>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003a5e:	f7ff f855 	bl	8002b0c <HAL_GetTick>
 8003a62:	4602      	mov	r2, r0
 8003a64:	693b      	ldr	r3, [r7, #16]
 8003a66:	1ad3      	subs	r3, r2, r3
 8003a68:	2b02      	cmp	r3, #2
 8003a6a:	d901      	bls.n	8003a70 <HAL_RCC_OscConfig+0x464>
          {
            return HAL_TIMEOUT;
 8003a6c:	2303      	movs	r3, #3
 8003a6e:	e064      	b.n	8003b3a <HAL_RCC_OscConfig+0x52e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8003a70:	4b11      	ldr	r3, [pc, #68]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 8003a72:	681b      	ldr	r3, [r3, #0]
 8003a74:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003a78:	2b00      	cmp	r3, #0
 8003a7a:	d0f0      	beq.n	8003a5e <HAL_RCC_OscConfig+0x452>
 8003a7c:	e05c      	b.n	8003b38 <HAL_RCC_OscConfig+0x52c>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8003a7e:	4b10      	ldr	r3, [pc, #64]	; (8003ac0 <HAL_RCC_OscConfig+0x4b4>)
 8003a80:	2200      	movs	r2, #0
 8003a82:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8003a84:	f7ff f842 	bl	8002b0c <HAL_GetTick>
 8003a88:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8003a8a:	e008      	b.n	8003a9e <HAL_RCC_OscConfig+0x492>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003a8c:	f7ff f83e 	bl	8002b0c <HAL_GetTick>
 8003a90:	4602      	mov	r2, r0
 8003a92:	693b      	ldr	r3, [r7, #16]
 8003a94:	1ad3      	subs	r3, r2, r3
 8003a96:	2b02      	cmp	r3, #2
 8003a98:	d901      	bls.n	8003a9e <HAL_RCC_OscConfig+0x492>
          {
            return HAL_TIMEOUT;
 8003a9a:	2303      	movs	r3, #3
 8003a9c:	e04d      	b.n	8003b3a <HAL_RCC_OscConfig+0x52e>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8003a9e:	4b06      	ldr	r3, [pc, #24]	; (8003ab8 <HAL_RCC_OscConfig+0x4ac>)
 8003aa0:	681b      	ldr	r3, [r3, #0]
 8003aa2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003aa6:	2b00      	cmp	r3, #0
 8003aa8:	d1f0      	bne.n	8003a8c <HAL_RCC_OscConfig+0x480>
 8003aaa:	e045      	b.n	8003b38 <HAL_RCC_OscConfig+0x52c>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8003aac:	687b      	ldr	r3, [r7, #4]
 8003aae:	699b      	ldr	r3, [r3, #24]
 8003ab0:	2b01      	cmp	r3, #1
 8003ab2:	d107      	bne.n	8003ac4 <HAL_RCC_OscConfig+0x4b8>
      {
        return HAL_ERROR;
 8003ab4:	2301      	movs	r3, #1
 8003ab6:	e040      	b.n	8003b3a <HAL_RCC_OscConfig+0x52e>
 8003ab8:	40023800 	.word	0x40023800
 8003abc:	40007000 	.word	0x40007000
 8003ac0:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8003ac4:	4b1f      	ldr	r3, [pc, #124]	; (8003b44 <HAL_RCC_OscConfig+0x538>)
 8003ac6:	685b      	ldr	r3, [r3, #4]
 8003ac8:	60fb      	str	r3, [r7, #12]
#if defined (RCC_PLLCFGR_PLLR)
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8003aca:	687b      	ldr	r3, [r7, #4]
 8003acc:	699b      	ldr	r3, [r3, #24]
 8003ace:	2b01      	cmp	r3, #1
 8003ad0:	d030      	beq.n	8003b34 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8003ad2:	68fb      	ldr	r3, [r7, #12]
 8003ad4:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8003adc:	429a      	cmp	r2, r3
 8003ade:	d129      	bne.n	8003b34 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8003ae0:	68fb      	ldr	r3, [r7, #12]
 8003ae2:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8003ae6:	687b      	ldr	r3, [r7, #4]
 8003ae8:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8003aea:	429a      	cmp	r2, r3
 8003aec:	d122      	bne.n	8003b34 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8003aee:	68fa      	ldr	r2, [r7, #12]
 8003af0:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8003af4:	4013      	ands	r3, r2
 8003af6:	687a      	ldr	r2, [r7, #4]
 8003af8:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8003afa:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8003afc:	4293      	cmp	r3, r2
 8003afe:	d119      	bne.n	8003b34 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8003b00:	68fb      	ldr	r3, [r7, #12]
 8003b02:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003b0a:	085b      	lsrs	r3, r3, #1
 8003b0c:	3b01      	subs	r3, #1
 8003b0e:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8003b10:	429a      	cmp	r2, r3
 8003b12:	d10f      	bne.n	8003b34 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8003b14:	68fb      	ldr	r3, [r7, #12]
 8003b16:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8003b1a:	687b      	ldr	r3, [r7, #4]
 8003b1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003b1e:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8003b20:	429a      	cmp	r2, r3
 8003b22:	d107      	bne.n	8003b34 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 8003b24:	68fb      	ldr	r3, [r7, #12]
 8003b26:	f003 42e0 	and.w	r2, r3, #1879048192	; 0x70000000
 8003b2a:	687b      	ldr	r3, [r7, #4]
 8003b2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003b2e:	071b      	lsls	r3, r3, #28
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8003b30:	429a      	cmp	r2, r3
 8003b32:	d001      	beq.n	8003b38 <HAL_RCC_OscConfig+0x52c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
#endif
        {
          return HAL_ERROR;
 8003b34:	2301      	movs	r3, #1
 8003b36:	e000      	b.n	8003b3a <HAL_RCC_OscConfig+0x52e>
        }
      }
    }
  }
  return HAL_OK;
 8003b38:	2300      	movs	r3, #0
}
 8003b3a:	4618      	mov	r0, r3
 8003b3c:	3718      	adds	r7, #24
 8003b3e:	46bd      	mov	sp, r7
 8003b40:	bd80      	pop	{r7, pc}
 8003b42:	bf00      	nop
 8003b44:	40023800 	.word	0x40023800

08003b48 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8003b48:	b580      	push	{r7, lr}
 8003b4a:	b082      	sub	sp, #8
 8003b4c:	af00      	add	r7, sp, #0
 8003b4e:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8003b50:	687b      	ldr	r3, [r7, #4]
 8003b52:	2b00      	cmp	r3, #0
 8003b54:	d101      	bne.n	8003b5a <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8003b56:	2301      	movs	r3, #1
 8003b58:	e041      	b.n	8003bde <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8003b5a:	687b      	ldr	r3, [r7, #4]
 8003b5c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003b60:	b2db      	uxtb	r3, r3
 8003b62:	2b00      	cmp	r3, #0
 8003b64:	d106      	bne.n	8003b74 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	2200      	movs	r2, #0
 8003b6a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8003b6e:	6878      	ldr	r0, [r7, #4]
 8003b70:	f7fe fede 	bl	8002930 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	2202      	movs	r2, #2
 8003b78:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8003b7c:	687b      	ldr	r3, [r7, #4]
 8003b7e:	681a      	ldr	r2, [r3, #0]
 8003b80:	687b      	ldr	r3, [r7, #4]
 8003b82:	3304      	adds	r3, #4
 8003b84:	4619      	mov	r1, r3
 8003b86:	4610      	mov	r0, r2
 8003b88:	f000 f95e 	bl	8003e48 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	2201      	movs	r2, #1
 8003b90:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8003b94:	687b      	ldr	r3, [r7, #4]
 8003b96:	2201      	movs	r2, #1
 8003b98:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003b9c:	687b      	ldr	r3, [r7, #4]
 8003b9e:	2201      	movs	r2, #1
 8003ba0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	2201      	movs	r2, #1
 8003ba8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	2201      	movs	r2, #1
 8003bb0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8003bb4:	687b      	ldr	r3, [r7, #4]
 8003bb6:	2201      	movs	r2, #1
 8003bb8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	2201      	movs	r2, #1
 8003bc0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	2201      	movs	r2, #1
 8003bc8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003bcc:	687b      	ldr	r3, [r7, #4]
 8003bce:	2201      	movs	r2, #1
 8003bd0:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	2201      	movs	r2, #1
 8003bd8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 8003bdc:	2300      	movs	r3, #0
}
 8003bde:	4618      	mov	r0, r3
 8003be0:	3708      	adds	r7, #8
 8003be2:	46bd      	mov	sp, r7
 8003be4:	bd80      	pop	{r7, pc}
	...

08003be8 <HAL_TIM_Base_Start>:
  * @brief  Starts the TIM Base generation.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start(TIM_HandleTypeDef *htim)
{
 8003be8:	b480      	push	{r7}
 8003bea:	b085      	sub	sp, #20
 8003bec:	af00      	add	r7, sp, #0
 8003bee:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 8003bf0:	687b      	ldr	r3, [r7, #4]
 8003bf2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8003bf6:	b2db      	uxtb	r3, r3
 8003bf8:	2b01      	cmp	r3, #1
 8003bfa:	d001      	beq.n	8003c00 <HAL_TIM_Base_Start+0x18>
  {
    return HAL_ERROR;
 8003bfc:	2301      	movs	r3, #1
 8003bfe:	e046      	b.n	8003c8e <HAL_TIM_Base_Start+0xa6>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8003c00:	687b      	ldr	r3, [r7, #4]
 8003c02:	2202      	movs	r2, #2
 8003c04:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8003c08:	687b      	ldr	r3, [r7, #4]
 8003c0a:	681b      	ldr	r3, [r3, #0]
 8003c0c:	4a23      	ldr	r2, [pc, #140]	; (8003c9c <HAL_TIM_Base_Start+0xb4>)
 8003c0e:	4293      	cmp	r3, r2
 8003c10:	d022      	beq.n	8003c58 <HAL_TIM_Base_Start+0x70>
 8003c12:	687b      	ldr	r3, [r7, #4]
 8003c14:	681b      	ldr	r3, [r3, #0]
 8003c16:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003c1a:	d01d      	beq.n	8003c58 <HAL_TIM_Base_Start+0x70>
 8003c1c:	687b      	ldr	r3, [r7, #4]
 8003c1e:	681b      	ldr	r3, [r3, #0]
 8003c20:	4a1f      	ldr	r2, [pc, #124]	; (8003ca0 <HAL_TIM_Base_Start+0xb8>)
 8003c22:	4293      	cmp	r3, r2
 8003c24:	d018      	beq.n	8003c58 <HAL_TIM_Base_Start+0x70>
 8003c26:	687b      	ldr	r3, [r7, #4]
 8003c28:	681b      	ldr	r3, [r3, #0]
 8003c2a:	4a1e      	ldr	r2, [pc, #120]	; (8003ca4 <HAL_TIM_Base_Start+0xbc>)
 8003c2c:	4293      	cmp	r3, r2
 8003c2e:	d013      	beq.n	8003c58 <HAL_TIM_Base_Start+0x70>
 8003c30:	687b      	ldr	r3, [r7, #4]
 8003c32:	681b      	ldr	r3, [r3, #0]
 8003c34:	4a1c      	ldr	r2, [pc, #112]	; (8003ca8 <HAL_TIM_Base_Start+0xc0>)
 8003c36:	4293      	cmp	r3, r2
 8003c38:	d00e      	beq.n	8003c58 <HAL_TIM_Base_Start+0x70>
 8003c3a:	687b      	ldr	r3, [r7, #4]
 8003c3c:	681b      	ldr	r3, [r3, #0]
 8003c3e:	4a1b      	ldr	r2, [pc, #108]	; (8003cac <HAL_TIM_Base_Start+0xc4>)
 8003c40:	4293      	cmp	r3, r2
 8003c42:	d009      	beq.n	8003c58 <HAL_TIM_Base_Start+0x70>
 8003c44:	687b      	ldr	r3, [r7, #4]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	4a19      	ldr	r2, [pc, #100]	; (8003cb0 <HAL_TIM_Base_Start+0xc8>)
 8003c4a:	4293      	cmp	r3, r2
 8003c4c:	d004      	beq.n	8003c58 <HAL_TIM_Base_Start+0x70>
 8003c4e:	687b      	ldr	r3, [r7, #4]
 8003c50:	681b      	ldr	r3, [r3, #0]
 8003c52:	4a18      	ldr	r2, [pc, #96]	; (8003cb4 <HAL_TIM_Base_Start+0xcc>)
 8003c54:	4293      	cmp	r3, r2
 8003c56:	d111      	bne.n	8003c7c <HAL_TIM_Base_Start+0x94>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8003c58:	687b      	ldr	r3, [r7, #4]
 8003c5a:	681b      	ldr	r3, [r3, #0]
 8003c5c:	689b      	ldr	r3, [r3, #8]
 8003c5e:	f003 0307 	and.w	r3, r3, #7
 8003c62:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8003c64:	68fb      	ldr	r3, [r7, #12]
 8003c66:	2b06      	cmp	r3, #6
 8003c68:	d010      	beq.n	8003c8c <HAL_TIM_Base_Start+0xa4>
    {
      __HAL_TIM_ENABLE(htim);
 8003c6a:	687b      	ldr	r3, [r7, #4]
 8003c6c:	681b      	ldr	r3, [r3, #0]
 8003c6e:	681a      	ldr	r2, [r3, #0]
 8003c70:	687b      	ldr	r3, [r7, #4]
 8003c72:	681b      	ldr	r3, [r3, #0]
 8003c74:	f042 0201 	orr.w	r2, r2, #1
 8003c78:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8003c7a:	e007      	b.n	8003c8c <HAL_TIM_Base_Start+0xa4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	681a      	ldr	r2, [r3, #0]
 8003c82:	687b      	ldr	r3, [r7, #4]
 8003c84:	681b      	ldr	r3, [r3, #0]
 8003c86:	f042 0201 	orr.w	r2, r2, #1
 8003c8a:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8003c8c:	2300      	movs	r3, #0
}
 8003c8e:	4618      	mov	r0, r3
 8003c90:	3714      	adds	r7, #20
 8003c92:	46bd      	mov	sp, r7
 8003c94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c98:	4770      	bx	lr
 8003c9a:	bf00      	nop
 8003c9c:	40010000 	.word	0x40010000
 8003ca0:	40000400 	.word	0x40000400
 8003ca4:	40000800 	.word	0x40000800
 8003ca8:	40000c00 	.word	0x40000c00
 8003cac:	40010400 	.word	0x40010400
 8003cb0:	40014000 	.word	0x40014000
 8003cb4:	40001800 	.word	0x40001800

08003cb8 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 8003cb8:	b580      	push	{r7, lr}
 8003cba:	b084      	sub	sp, #16
 8003cbc:	af00      	add	r7, sp, #0
 8003cbe:	6078      	str	r0, [r7, #4]
 8003cc0:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8003cc2:	2300      	movs	r3, #0
 8003cc4:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003ccc:	2b01      	cmp	r3, #1
 8003cce:	d101      	bne.n	8003cd4 <HAL_TIM_ConfigClockSource+0x1c>
 8003cd0:	2302      	movs	r3, #2
 8003cd2:	e0b4      	b.n	8003e3e <HAL_TIM_ConfigClockSource+0x186>
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	2201      	movs	r2, #1
 8003cd8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	2202      	movs	r2, #2
 8003ce0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8003ce4:	687b      	ldr	r3, [r7, #4]
 8003ce6:	681b      	ldr	r3, [r3, #0]
 8003ce8:	689b      	ldr	r3, [r3, #8]
 8003cea:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8003cec:	68bb      	ldr	r3, [r7, #8]
 8003cee:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8003cf2:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8003cf4:	68bb      	ldr	r3, [r7, #8]
 8003cf6:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8003cfa:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 8003cfc:	687b      	ldr	r3, [r7, #4]
 8003cfe:	681b      	ldr	r3, [r3, #0]
 8003d00:	68ba      	ldr	r2, [r7, #8]
 8003d02:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8003d04:	683b      	ldr	r3, [r7, #0]
 8003d06:	681b      	ldr	r3, [r3, #0]
 8003d08:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003d0c:	d03e      	beq.n	8003d8c <HAL_TIM_ConfigClockSource+0xd4>
 8003d0e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8003d12:	f200 8087 	bhi.w	8003e24 <HAL_TIM_ConfigClockSource+0x16c>
 8003d16:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003d1a:	f000 8086 	beq.w	8003e2a <HAL_TIM_ConfigClockSource+0x172>
 8003d1e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003d22:	d87f      	bhi.n	8003e24 <HAL_TIM_ConfigClockSource+0x16c>
 8003d24:	2b70      	cmp	r3, #112	; 0x70
 8003d26:	d01a      	beq.n	8003d5e <HAL_TIM_ConfigClockSource+0xa6>
 8003d28:	2b70      	cmp	r3, #112	; 0x70
 8003d2a:	d87b      	bhi.n	8003e24 <HAL_TIM_ConfigClockSource+0x16c>
 8003d2c:	2b60      	cmp	r3, #96	; 0x60
 8003d2e:	d050      	beq.n	8003dd2 <HAL_TIM_ConfigClockSource+0x11a>
 8003d30:	2b60      	cmp	r3, #96	; 0x60
 8003d32:	d877      	bhi.n	8003e24 <HAL_TIM_ConfigClockSource+0x16c>
 8003d34:	2b50      	cmp	r3, #80	; 0x50
 8003d36:	d03c      	beq.n	8003db2 <HAL_TIM_ConfigClockSource+0xfa>
 8003d38:	2b50      	cmp	r3, #80	; 0x50
 8003d3a:	d873      	bhi.n	8003e24 <HAL_TIM_ConfigClockSource+0x16c>
 8003d3c:	2b40      	cmp	r3, #64	; 0x40
 8003d3e:	d058      	beq.n	8003df2 <HAL_TIM_ConfigClockSource+0x13a>
 8003d40:	2b40      	cmp	r3, #64	; 0x40
 8003d42:	d86f      	bhi.n	8003e24 <HAL_TIM_ConfigClockSource+0x16c>
 8003d44:	2b30      	cmp	r3, #48	; 0x30
 8003d46:	d064      	beq.n	8003e12 <HAL_TIM_ConfigClockSource+0x15a>
 8003d48:	2b30      	cmp	r3, #48	; 0x30
 8003d4a:	d86b      	bhi.n	8003e24 <HAL_TIM_ConfigClockSource+0x16c>
 8003d4c:	2b20      	cmp	r3, #32
 8003d4e:	d060      	beq.n	8003e12 <HAL_TIM_ConfigClockSource+0x15a>
 8003d50:	2b20      	cmp	r3, #32
 8003d52:	d867      	bhi.n	8003e24 <HAL_TIM_ConfigClockSource+0x16c>
 8003d54:	2b00      	cmp	r3, #0
 8003d56:	d05c      	beq.n	8003e12 <HAL_TIM_ConfigClockSource+0x15a>
 8003d58:	2b10      	cmp	r3, #16
 8003d5a:	d05a      	beq.n	8003e12 <HAL_TIM_ConfigClockSource+0x15a>
 8003d5c:	e062      	b.n	8003e24 <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8003d5e:	687b      	ldr	r3, [r7, #4]
 8003d60:	6818      	ldr	r0, [r3, #0]
 8003d62:	683b      	ldr	r3, [r7, #0]
 8003d64:	6899      	ldr	r1, [r3, #8]
 8003d66:	683b      	ldr	r3, [r7, #0]
 8003d68:	685a      	ldr	r2, [r3, #4]
 8003d6a:	683b      	ldr	r3, [r7, #0]
 8003d6c:	68db      	ldr	r3, [r3, #12]
 8003d6e:	f000 f985 	bl	800407c <TIM_ETR_SetConfig>
                        sClockSourceConfig->ClockPrescaler,
                        sClockSourceConfig->ClockPolarity,
                        sClockSourceConfig->ClockFilter);

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 8003d72:	687b      	ldr	r3, [r7, #4]
 8003d74:	681b      	ldr	r3, [r3, #0]
 8003d76:	689b      	ldr	r3, [r3, #8]
 8003d78:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 8003d7a:	68bb      	ldr	r3, [r7, #8]
 8003d7c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8003d80:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	681b      	ldr	r3, [r3, #0]
 8003d86:	68ba      	ldr	r2, [r7, #8]
 8003d88:	609a      	str	r2, [r3, #8]
      break;
 8003d8a:	e04f      	b.n	8003e2c <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 8003d8c:	687b      	ldr	r3, [r7, #4]
 8003d8e:	6818      	ldr	r0, [r3, #0]
 8003d90:	683b      	ldr	r3, [r7, #0]
 8003d92:	6899      	ldr	r1, [r3, #8]
 8003d94:	683b      	ldr	r3, [r7, #0]
 8003d96:	685a      	ldr	r2, [r3, #4]
 8003d98:	683b      	ldr	r3, [r7, #0]
 8003d9a:	68db      	ldr	r3, [r3, #12]
 8003d9c:	f000 f96e 	bl	800407c <TIM_ETR_SetConfig>
                        sClockSourceConfig->ClockPrescaler,
                        sClockSourceConfig->ClockPolarity,
                        sClockSourceConfig->ClockFilter);
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 8003da0:	687b      	ldr	r3, [r7, #4]
 8003da2:	681b      	ldr	r3, [r3, #0]
 8003da4:	689a      	ldr	r2, [r3, #8]
 8003da6:	687b      	ldr	r3, [r7, #4]
 8003da8:	681b      	ldr	r3, [r3, #0]
 8003daa:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8003dae:	609a      	str	r2, [r3, #8]
      break;
 8003db0:	e03c      	b.n	8003e2c <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8003db2:	687b      	ldr	r3, [r7, #4]
 8003db4:	6818      	ldr	r0, [r3, #0]
 8003db6:	683b      	ldr	r3, [r7, #0]
 8003db8:	6859      	ldr	r1, [r3, #4]
 8003dba:	683b      	ldr	r3, [r7, #0]
 8003dbc:	68db      	ldr	r3, [r3, #12]
 8003dbe:	461a      	mov	r2, r3
 8003dc0:	f000 f8e2 	bl	8003f88 <TIM_TI1_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 8003dc4:	687b      	ldr	r3, [r7, #4]
 8003dc6:	681b      	ldr	r3, [r3, #0]
 8003dc8:	2150      	movs	r1, #80	; 0x50
 8003dca:	4618      	mov	r0, r3
 8003dcc:	f000 f93b 	bl	8004046 <TIM_ITRx_SetConfig>
      break;
 8003dd0:	e02c      	b.n	8003e2c <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	6818      	ldr	r0, [r3, #0]
 8003dd6:	683b      	ldr	r3, [r7, #0]
 8003dd8:	6859      	ldr	r1, [r3, #4]
 8003dda:	683b      	ldr	r3, [r7, #0]
 8003ddc:	68db      	ldr	r3, [r3, #12]
 8003dde:	461a      	mov	r2, r3
 8003de0:	f000 f901 	bl	8003fe6 <TIM_TI2_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 8003de4:	687b      	ldr	r3, [r7, #4]
 8003de6:	681b      	ldr	r3, [r3, #0]
 8003de8:	2160      	movs	r1, #96	; 0x60
 8003dea:	4618      	mov	r0, r3
 8003dec:	f000 f92b 	bl	8004046 <TIM_ITRx_SetConfig>
      break;
 8003df0:	e01c      	b.n	8003e2c <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8003df2:	687b      	ldr	r3, [r7, #4]
 8003df4:	6818      	ldr	r0, [r3, #0]
 8003df6:	683b      	ldr	r3, [r7, #0]
 8003df8:	6859      	ldr	r1, [r3, #4]
 8003dfa:	683b      	ldr	r3, [r7, #0]
 8003dfc:	68db      	ldr	r3, [r3, #12]
 8003dfe:	461a      	mov	r2, r3
 8003e00:	f000 f8c2 	bl	8003f88 <TIM_TI1_ConfigInputStage>
                               sClockSourceConfig->ClockPolarity,
                               sClockSourceConfig->ClockFilter);
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 8003e04:	687b      	ldr	r3, [r7, #4]
 8003e06:	681b      	ldr	r3, [r3, #0]
 8003e08:	2140      	movs	r1, #64	; 0x40
 8003e0a:	4618      	mov	r0, r3
 8003e0c:	f000 f91b 	bl	8004046 <TIM_ITRx_SetConfig>
      break;
 8003e10:	e00c      	b.n	8003e2c <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	681a      	ldr	r2, [r3, #0]
 8003e16:	683b      	ldr	r3, [r7, #0]
 8003e18:	681b      	ldr	r3, [r3, #0]
 8003e1a:	4619      	mov	r1, r3
 8003e1c:	4610      	mov	r0, r2
 8003e1e:	f000 f912 	bl	8004046 <TIM_ITRx_SetConfig>
      break;
 8003e22:	e003      	b.n	8003e2c <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 8003e24:	2301      	movs	r3, #1
 8003e26:	73fb      	strb	r3, [r7, #15]
      break;
 8003e28:	e000      	b.n	8003e2c <HAL_TIM_ConfigClockSource+0x174>
      break;
 8003e2a:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 8003e2c:	687b      	ldr	r3, [r7, #4]
 8003e2e:	2201      	movs	r2, #1
 8003e30:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8003e34:	687b      	ldr	r3, [r7, #4]
 8003e36:	2200      	movs	r2, #0
 8003e38:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return status;
 8003e3c:	7bfb      	ldrb	r3, [r7, #15]
}
 8003e3e:	4618      	mov	r0, r3
 8003e40:	3710      	adds	r7, #16
 8003e42:	46bd      	mov	sp, r7
 8003e44:	bd80      	pop	{r7, pc}
	...

08003e48 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 8003e48:	b480      	push	{r7}
 8003e4a:	b085      	sub	sp, #20
 8003e4c:	af00      	add	r7, sp, #0
 8003e4e:	6078      	str	r0, [r7, #4]
 8003e50:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 8003e52:	687b      	ldr	r3, [r7, #4]
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8003e58:	687b      	ldr	r3, [r7, #4]
 8003e5a:	4a40      	ldr	r2, [pc, #256]	; (8003f5c <TIM_Base_SetConfig+0x114>)
 8003e5c:	4293      	cmp	r3, r2
 8003e5e:	d013      	beq.n	8003e88 <TIM_Base_SetConfig+0x40>
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003e66:	d00f      	beq.n	8003e88 <TIM_Base_SetConfig+0x40>
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	4a3d      	ldr	r2, [pc, #244]	; (8003f60 <TIM_Base_SetConfig+0x118>)
 8003e6c:	4293      	cmp	r3, r2
 8003e6e:	d00b      	beq.n	8003e88 <TIM_Base_SetConfig+0x40>
 8003e70:	687b      	ldr	r3, [r7, #4]
 8003e72:	4a3c      	ldr	r2, [pc, #240]	; (8003f64 <TIM_Base_SetConfig+0x11c>)
 8003e74:	4293      	cmp	r3, r2
 8003e76:	d007      	beq.n	8003e88 <TIM_Base_SetConfig+0x40>
 8003e78:	687b      	ldr	r3, [r7, #4]
 8003e7a:	4a3b      	ldr	r2, [pc, #236]	; (8003f68 <TIM_Base_SetConfig+0x120>)
 8003e7c:	4293      	cmp	r3, r2
 8003e7e:	d003      	beq.n	8003e88 <TIM_Base_SetConfig+0x40>
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	4a3a      	ldr	r2, [pc, #232]	; (8003f6c <TIM_Base_SetConfig+0x124>)
 8003e84:	4293      	cmp	r3, r2
 8003e86:	d108      	bne.n	8003e9a <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8003e88:	68fb      	ldr	r3, [r7, #12]
 8003e8a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003e8e:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 8003e90:	683b      	ldr	r3, [r7, #0]
 8003e92:	685b      	ldr	r3, [r3, #4]
 8003e94:	68fa      	ldr	r2, [r7, #12]
 8003e96:	4313      	orrs	r3, r2
 8003e98:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8003e9a:	687b      	ldr	r3, [r7, #4]
 8003e9c:	4a2f      	ldr	r2, [pc, #188]	; (8003f5c <TIM_Base_SetConfig+0x114>)
 8003e9e:	4293      	cmp	r3, r2
 8003ea0:	d02b      	beq.n	8003efa <TIM_Base_SetConfig+0xb2>
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003ea8:	d027      	beq.n	8003efa <TIM_Base_SetConfig+0xb2>
 8003eaa:	687b      	ldr	r3, [r7, #4]
 8003eac:	4a2c      	ldr	r2, [pc, #176]	; (8003f60 <TIM_Base_SetConfig+0x118>)
 8003eae:	4293      	cmp	r3, r2
 8003eb0:	d023      	beq.n	8003efa <TIM_Base_SetConfig+0xb2>
 8003eb2:	687b      	ldr	r3, [r7, #4]
 8003eb4:	4a2b      	ldr	r2, [pc, #172]	; (8003f64 <TIM_Base_SetConfig+0x11c>)
 8003eb6:	4293      	cmp	r3, r2
 8003eb8:	d01f      	beq.n	8003efa <TIM_Base_SetConfig+0xb2>
 8003eba:	687b      	ldr	r3, [r7, #4]
 8003ebc:	4a2a      	ldr	r2, [pc, #168]	; (8003f68 <TIM_Base_SetConfig+0x120>)
 8003ebe:	4293      	cmp	r3, r2
 8003ec0:	d01b      	beq.n	8003efa <TIM_Base_SetConfig+0xb2>
 8003ec2:	687b      	ldr	r3, [r7, #4]
 8003ec4:	4a29      	ldr	r2, [pc, #164]	; (8003f6c <TIM_Base_SetConfig+0x124>)
 8003ec6:	4293      	cmp	r3, r2
 8003ec8:	d017      	beq.n	8003efa <TIM_Base_SetConfig+0xb2>
 8003eca:	687b      	ldr	r3, [r7, #4]
 8003ecc:	4a28      	ldr	r2, [pc, #160]	; (8003f70 <TIM_Base_SetConfig+0x128>)
 8003ece:	4293      	cmp	r3, r2
 8003ed0:	d013      	beq.n	8003efa <TIM_Base_SetConfig+0xb2>
 8003ed2:	687b      	ldr	r3, [r7, #4]
 8003ed4:	4a27      	ldr	r2, [pc, #156]	; (8003f74 <TIM_Base_SetConfig+0x12c>)
 8003ed6:	4293      	cmp	r3, r2
 8003ed8:	d00f      	beq.n	8003efa <TIM_Base_SetConfig+0xb2>
 8003eda:	687b      	ldr	r3, [r7, #4]
 8003edc:	4a26      	ldr	r2, [pc, #152]	; (8003f78 <TIM_Base_SetConfig+0x130>)
 8003ede:	4293      	cmp	r3, r2
 8003ee0:	d00b      	beq.n	8003efa <TIM_Base_SetConfig+0xb2>
 8003ee2:	687b      	ldr	r3, [r7, #4]
 8003ee4:	4a25      	ldr	r2, [pc, #148]	; (8003f7c <TIM_Base_SetConfig+0x134>)
 8003ee6:	4293      	cmp	r3, r2
 8003ee8:	d007      	beq.n	8003efa <TIM_Base_SetConfig+0xb2>
 8003eea:	687b      	ldr	r3, [r7, #4]
 8003eec:	4a24      	ldr	r2, [pc, #144]	; (8003f80 <TIM_Base_SetConfig+0x138>)
 8003eee:	4293      	cmp	r3, r2
 8003ef0:	d003      	beq.n	8003efa <TIM_Base_SetConfig+0xb2>
 8003ef2:	687b      	ldr	r3, [r7, #4]
 8003ef4:	4a23      	ldr	r2, [pc, #140]	; (8003f84 <TIM_Base_SetConfig+0x13c>)
 8003ef6:	4293      	cmp	r3, r2
 8003ef8:	d108      	bne.n	8003f0c <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8003efa:	68fb      	ldr	r3, [r7, #12]
 8003efc:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003f00:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8003f02:	683b      	ldr	r3, [r7, #0]
 8003f04:	68db      	ldr	r3, [r3, #12]
 8003f06:	68fa      	ldr	r2, [r7, #12]
 8003f08:	4313      	orrs	r3, r2
 8003f0a:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8003f0c:	68fb      	ldr	r3, [r7, #12]
 8003f0e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8003f12:	683b      	ldr	r3, [r7, #0]
 8003f14:	695b      	ldr	r3, [r3, #20]
 8003f16:	4313      	orrs	r3, r2
 8003f18:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8003f1a:	687b      	ldr	r3, [r7, #4]
 8003f1c:	68fa      	ldr	r2, [r7, #12]
 8003f1e:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8003f20:	683b      	ldr	r3, [r7, #0]
 8003f22:	689a      	ldr	r2, [r3, #8]
 8003f24:	687b      	ldr	r3, [r7, #4]
 8003f26:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8003f28:	683b      	ldr	r3, [r7, #0]
 8003f2a:	681a      	ldr	r2, [r3, #0]
 8003f2c:	687b      	ldr	r3, [r7, #4]
 8003f2e:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8003f30:	687b      	ldr	r3, [r7, #4]
 8003f32:	4a0a      	ldr	r2, [pc, #40]	; (8003f5c <TIM_Base_SetConfig+0x114>)
 8003f34:	4293      	cmp	r3, r2
 8003f36:	d003      	beq.n	8003f40 <TIM_Base_SetConfig+0xf8>
 8003f38:	687b      	ldr	r3, [r7, #4]
 8003f3a:	4a0c      	ldr	r2, [pc, #48]	; (8003f6c <TIM_Base_SetConfig+0x124>)
 8003f3c:	4293      	cmp	r3, r2
 8003f3e:	d103      	bne.n	8003f48 <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8003f40:	683b      	ldr	r3, [r7, #0]
 8003f42:	691a      	ldr	r2, [r3, #16]
 8003f44:	687b      	ldr	r3, [r7, #4]
 8003f46:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8003f48:	687b      	ldr	r3, [r7, #4]
 8003f4a:	2201      	movs	r2, #1
 8003f4c:	615a      	str	r2, [r3, #20]
}
 8003f4e:	bf00      	nop
 8003f50:	3714      	adds	r7, #20
 8003f52:	46bd      	mov	sp, r7
 8003f54:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f58:	4770      	bx	lr
 8003f5a:	bf00      	nop
 8003f5c:	40010000 	.word	0x40010000
 8003f60:	40000400 	.word	0x40000400
 8003f64:	40000800 	.word	0x40000800
 8003f68:	40000c00 	.word	0x40000c00
 8003f6c:	40010400 	.word	0x40010400
 8003f70:	40014000 	.word	0x40014000
 8003f74:	40014400 	.word	0x40014400
 8003f78:	40014800 	.word	0x40014800
 8003f7c:	40001800 	.word	0x40001800
 8003f80:	40001c00 	.word	0x40001c00
 8003f84:	40002000 	.word	0x40002000

08003f88 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8003f88:	b480      	push	{r7}
 8003f8a:	b087      	sub	sp, #28
 8003f8c:	af00      	add	r7, sp, #0
 8003f8e:	60f8      	str	r0, [r7, #12]
 8003f90:	60b9      	str	r1, [r7, #8]
 8003f92:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8003f94:	68fb      	ldr	r3, [r7, #12]
 8003f96:	6a1b      	ldr	r3, [r3, #32]
 8003f98:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8003f9a:	68fb      	ldr	r3, [r7, #12]
 8003f9c:	6a1b      	ldr	r3, [r3, #32]
 8003f9e:	f023 0201 	bic.w	r2, r3, #1
 8003fa2:	68fb      	ldr	r3, [r7, #12]
 8003fa4:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8003fa6:	68fb      	ldr	r3, [r7, #12]
 8003fa8:	699b      	ldr	r3, [r3, #24]
 8003faa:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8003fac:	693b      	ldr	r3, [r7, #16]
 8003fae:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8003fb2:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8003fb4:	687b      	ldr	r3, [r7, #4]
 8003fb6:	011b      	lsls	r3, r3, #4
 8003fb8:	693a      	ldr	r2, [r7, #16]
 8003fba:	4313      	orrs	r3, r2
 8003fbc:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8003fbe:	697b      	ldr	r3, [r7, #20]
 8003fc0:	f023 030a 	bic.w	r3, r3, #10
 8003fc4:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8003fc6:	697a      	ldr	r2, [r7, #20]
 8003fc8:	68bb      	ldr	r3, [r7, #8]
 8003fca:	4313      	orrs	r3, r2
 8003fcc:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8003fce:	68fb      	ldr	r3, [r7, #12]
 8003fd0:	693a      	ldr	r2, [r7, #16]
 8003fd2:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8003fd4:	68fb      	ldr	r3, [r7, #12]
 8003fd6:	697a      	ldr	r2, [r7, #20]
 8003fd8:	621a      	str	r2, [r3, #32]
}
 8003fda:	bf00      	nop
 8003fdc:	371c      	adds	r7, #28
 8003fde:	46bd      	mov	sp, r7
 8003fe0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fe4:	4770      	bx	lr

08003fe6 <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8003fe6:	b480      	push	{r7}
 8003fe8:	b087      	sub	sp, #28
 8003fea:	af00      	add	r7, sp, #0
 8003fec:	60f8      	str	r0, [r7, #12]
 8003fee:	60b9      	str	r1, [r7, #8]
 8003ff0:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8003ff2:	68fb      	ldr	r3, [r7, #12]
 8003ff4:	6a1b      	ldr	r3, [r3, #32]
 8003ff6:	f023 0210 	bic.w	r2, r3, #16
 8003ffa:	68fb      	ldr	r3, [r7, #12]
 8003ffc:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8003ffe:	68fb      	ldr	r3, [r7, #12]
 8004000:	699b      	ldr	r3, [r3, #24]
 8004002:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 8004004:	68fb      	ldr	r3, [r7, #12]
 8004006:	6a1b      	ldr	r3, [r3, #32]
 8004008:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 800400a:	697b      	ldr	r3, [r7, #20]
 800400c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8004010:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8004012:	687b      	ldr	r3, [r7, #4]
 8004014:	031b      	lsls	r3, r3, #12
 8004016:	697a      	ldr	r2, [r7, #20]
 8004018:	4313      	orrs	r3, r2
 800401a:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 800401c:	693b      	ldr	r3, [r7, #16]
 800401e:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8004022:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity << 4U);
 8004024:	68bb      	ldr	r3, [r7, #8]
 8004026:	011b      	lsls	r3, r3, #4
 8004028:	693a      	ldr	r2, [r7, #16]
 800402a:	4313      	orrs	r3, r2
 800402c:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 800402e:	68fb      	ldr	r3, [r7, #12]
 8004030:	697a      	ldr	r2, [r7, #20]
 8004032:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8004034:	68fb      	ldr	r3, [r7, #12]
 8004036:	693a      	ldr	r2, [r7, #16]
 8004038:	621a      	str	r2, [r3, #32]
}
 800403a:	bf00      	nop
 800403c:	371c      	adds	r7, #28
 800403e:	46bd      	mov	sp, r7
 8004040:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004044:	4770      	bx	lr

08004046 <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8004046:	b480      	push	{r7}
 8004048:	b085      	sub	sp, #20
 800404a:	af00      	add	r7, sp, #0
 800404c:	6078      	str	r0, [r7, #4]
 800404e:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8004050:	687b      	ldr	r3, [r7, #4]
 8004052:	689b      	ldr	r3, [r3, #8]
 8004054:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8004056:	68fb      	ldr	r3, [r7, #12]
 8004058:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800405c:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800405e:	683a      	ldr	r2, [r7, #0]
 8004060:	68fb      	ldr	r3, [r7, #12]
 8004062:	4313      	orrs	r3, r2
 8004064:	f043 0307 	orr.w	r3, r3, #7
 8004068:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800406a:	687b      	ldr	r3, [r7, #4]
 800406c:	68fa      	ldr	r2, [r7, #12]
 800406e:	609a      	str	r2, [r3, #8]
}
 8004070:	bf00      	nop
 8004072:	3714      	adds	r7, #20
 8004074:	46bd      	mov	sp, r7
 8004076:	f85d 7b04 	ldr.w	r7, [sp], #4
 800407a:	4770      	bx	lr

0800407c <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 800407c:	b480      	push	{r7}
 800407e:	b087      	sub	sp, #28
 8004080:	af00      	add	r7, sp, #0
 8004082:	60f8      	str	r0, [r7, #12]
 8004084:	60b9      	str	r1, [r7, #8]
 8004086:	607a      	str	r2, [r7, #4]
 8004088:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 800408a:	68fb      	ldr	r3, [r7, #12]
 800408c:	689b      	ldr	r3, [r3, #8]
 800408e:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8004090:	697b      	ldr	r3, [r7, #20]
 8004092:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8004096:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8004098:	683b      	ldr	r3, [r7, #0]
 800409a:	021a      	lsls	r2, r3, #8
 800409c:	687b      	ldr	r3, [r7, #4]
 800409e:	431a      	orrs	r2, r3
 80040a0:	68bb      	ldr	r3, [r7, #8]
 80040a2:	4313      	orrs	r3, r2
 80040a4:	697a      	ldr	r2, [r7, #20]
 80040a6:	4313      	orrs	r3, r2
 80040a8:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 80040aa:	68fb      	ldr	r3, [r7, #12]
 80040ac:	697a      	ldr	r2, [r7, #20]
 80040ae:	609a      	str	r2, [r3, #8]
}
 80040b0:	bf00      	nop
 80040b2:	371c      	adds	r7, #28
 80040b4:	46bd      	mov	sp, r7
 80040b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80040ba:	4770      	bx	lr

080040bc <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 80040bc:	b480      	push	{r7}
 80040be:	b085      	sub	sp, #20
 80040c0:	af00      	add	r7, sp, #0
 80040c2:	6078      	str	r0, [r7, #4]
 80040c4:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80040c6:	687b      	ldr	r3, [r7, #4]
 80040c8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80040cc:	2b01      	cmp	r3, #1
 80040ce:	d101      	bne.n	80040d4 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80040d0:	2302      	movs	r3, #2
 80040d2:	e05a      	b.n	800418a <HAL_TIMEx_MasterConfigSynchronization+0xce>
 80040d4:	687b      	ldr	r3, [r7, #4]
 80040d6:	2201      	movs	r2, #1
 80040d8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80040dc:	687b      	ldr	r3, [r7, #4]
 80040de:	2202      	movs	r2, #2
 80040e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	681b      	ldr	r3, [r3, #0]
 80040e8:	685b      	ldr	r3, [r3, #4]
 80040ea:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 80040ec:	687b      	ldr	r3, [r7, #4]
 80040ee:	681b      	ldr	r3, [r3, #0]
 80040f0:	689b      	ldr	r3, [r3, #8]
 80040f2:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 80040f4:	68fb      	ldr	r3, [r7, #12]
 80040f6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80040fa:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80040fc:	683b      	ldr	r3, [r7, #0]
 80040fe:	681b      	ldr	r3, [r3, #0]
 8004100:	68fa      	ldr	r2, [r7, #12]
 8004102:	4313      	orrs	r3, r2
 8004104:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8004106:	687b      	ldr	r3, [r7, #4]
 8004108:	681b      	ldr	r3, [r3, #0]
 800410a:	68fa      	ldr	r2, [r7, #12]
 800410c:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800410e:	687b      	ldr	r3, [r7, #4]
 8004110:	681b      	ldr	r3, [r3, #0]
 8004112:	4a21      	ldr	r2, [pc, #132]	; (8004198 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8004114:	4293      	cmp	r3, r2
 8004116:	d022      	beq.n	800415e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004118:	687b      	ldr	r3, [r7, #4]
 800411a:	681b      	ldr	r3, [r3, #0]
 800411c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004120:	d01d      	beq.n	800415e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004122:	687b      	ldr	r3, [r7, #4]
 8004124:	681b      	ldr	r3, [r3, #0]
 8004126:	4a1d      	ldr	r2, [pc, #116]	; (800419c <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8004128:	4293      	cmp	r3, r2
 800412a:	d018      	beq.n	800415e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800412c:	687b      	ldr	r3, [r7, #4]
 800412e:	681b      	ldr	r3, [r3, #0]
 8004130:	4a1b      	ldr	r2, [pc, #108]	; (80041a0 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8004132:	4293      	cmp	r3, r2
 8004134:	d013      	beq.n	800415e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004136:	687b      	ldr	r3, [r7, #4]
 8004138:	681b      	ldr	r3, [r3, #0]
 800413a:	4a1a      	ldr	r2, [pc, #104]	; (80041a4 <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 800413c:	4293      	cmp	r3, r2
 800413e:	d00e      	beq.n	800415e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004140:	687b      	ldr	r3, [r7, #4]
 8004142:	681b      	ldr	r3, [r3, #0]
 8004144:	4a18      	ldr	r2, [pc, #96]	; (80041a8 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8004146:	4293      	cmp	r3, r2
 8004148:	d009      	beq.n	800415e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800414a:	687b      	ldr	r3, [r7, #4]
 800414c:	681b      	ldr	r3, [r3, #0]
 800414e:	4a17      	ldr	r2, [pc, #92]	; (80041ac <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8004150:	4293      	cmp	r3, r2
 8004152:	d004      	beq.n	800415e <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8004154:	687b      	ldr	r3, [r7, #4]
 8004156:	681b      	ldr	r3, [r3, #0]
 8004158:	4a15      	ldr	r2, [pc, #84]	; (80041b0 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 800415a:	4293      	cmp	r3, r2
 800415c:	d10c      	bne.n	8004178 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 800415e:	68bb      	ldr	r3, [r7, #8]
 8004160:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004164:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8004166:	683b      	ldr	r3, [r7, #0]
 8004168:	685b      	ldr	r3, [r3, #4]
 800416a:	68ba      	ldr	r2, [r7, #8]
 800416c:	4313      	orrs	r3, r2
 800416e:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8004170:	687b      	ldr	r3, [r7, #4]
 8004172:	681b      	ldr	r3, [r3, #0]
 8004174:	68ba      	ldr	r2, [r7, #8]
 8004176:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8004178:	687b      	ldr	r3, [r7, #4]
 800417a:	2201      	movs	r2, #1
 800417c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8004180:	687b      	ldr	r3, [r7, #4]
 8004182:	2200      	movs	r2, #0
 8004184:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 8004188:	2300      	movs	r3, #0
}
 800418a:	4618      	mov	r0, r3
 800418c:	3714      	adds	r7, #20
 800418e:	46bd      	mov	sp, r7
 8004190:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004194:	4770      	bx	lr
 8004196:	bf00      	nop
 8004198:	40010000 	.word	0x40010000
 800419c:	40000400 	.word	0x40000400
 80041a0:	40000800 	.word	0x40000800
 80041a4:	40000c00 	.word	0x40000c00
 80041a8:	40010400 	.word	0x40010400
 80041ac:	40014000 	.word	0x40014000
 80041b0:	40001800 	.word	0x40001800

080041b4 <__libc_init_array>:
 80041b4:	b570      	push	{r4, r5, r6, lr}
 80041b6:	4d0d      	ldr	r5, [pc, #52]	; (80041ec <__libc_init_array+0x38>)
 80041b8:	4c0d      	ldr	r4, [pc, #52]	; (80041f0 <__libc_init_array+0x3c>)
 80041ba:	1b64      	subs	r4, r4, r5
 80041bc:	10a4      	asrs	r4, r4, #2
 80041be:	2600      	movs	r6, #0
 80041c0:	42a6      	cmp	r6, r4
 80041c2:	d109      	bne.n	80041d8 <__libc_init_array+0x24>
 80041c4:	4d0b      	ldr	r5, [pc, #44]	; (80041f4 <__libc_init_array+0x40>)
 80041c6:	4c0c      	ldr	r4, [pc, #48]	; (80041f8 <__libc_init_array+0x44>)
 80041c8:	f000 f820 	bl	800420c <_init>
 80041cc:	1b64      	subs	r4, r4, r5
 80041ce:	10a4      	asrs	r4, r4, #2
 80041d0:	2600      	movs	r6, #0
 80041d2:	42a6      	cmp	r6, r4
 80041d4:	d105      	bne.n	80041e2 <__libc_init_array+0x2e>
 80041d6:	bd70      	pop	{r4, r5, r6, pc}
 80041d8:	f855 3b04 	ldr.w	r3, [r5], #4
 80041dc:	4798      	blx	r3
 80041de:	3601      	adds	r6, #1
 80041e0:	e7ee      	b.n	80041c0 <__libc_init_array+0xc>
 80041e2:	f855 3b04 	ldr.w	r3, [r5], #4
 80041e6:	4798      	blx	r3
 80041e8:	3601      	adds	r6, #1
 80041ea:	e7f2      	b.n	80041d2 <__libc_init_array+0x1e>
 80041ec:	0800423c 	.word	0x0800423c
 80041f0:	0800423c 	.word	0x0800423c
 80041f4:	0800423c 	.word	0x0800423c
 80041f8:	08004240 	.word	0x08004240

080041fc <memset>:
 80041fc:	4402      	add	r2, r0
 80041fe:	4603      	mov	r3, r0
 8004200:	4293      	cmp	r3, r2
 8004202:	d100      	bne.n	8004206 <memset+0xa>
 8004204:	4770      	bx	lr
 8004206:	f803 1b01 	strb.w	r1, [r3], #1
 800420a:	e7f9      	b.n	8004200 <memset+0x4>

0800420c <_init>:
 800420c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800420e:	bf00      	nop
 8004210:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004212:	bc08      	pop	{r3}
 8004214:	469e      	mov	lr, r3
 8004216:	4770      	bx	lr

08004218 <_fini>:
 8004218:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800421a:	bf00      	nop
 800421c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800421e:	bc08      	pop	{r3}
 8004220:	469e      	mov	lr, r3
 8004222:	4770      	bx	lr
